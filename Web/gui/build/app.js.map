{"version":3,"file":"app.js","sources":["modules/common/services/ModelBuilder.js","modules/common/services/modelServices.js","default.tpl.html!text","modules/common/i18n/en-gb.js","modules/common/i18n/Language.js","modules/common/i18n/languageServices.js","modules/actions/models/Action.js","modules/actions/models/ActionTest.js","modules/actions/models/ActionType.js","modules/actions/models/JointPosition.js","modules/actions/models/SequenceOrder.js","modules/actions/models.js","modules/common/services/HotkeyFormatter.js","modules/common/services/displayServices.js","modules/robots/services/RobotInterface.js","modules/robots/services/interfaceServices.js","modules/common/filters/ExceptFilter.js","modules/common/filters/InterpolateFilter.js","modules/common/filters/IntersectFilter.js","modules/common/filters.js","modules/common/models/Menu.js","modules/common/models/Setting.js","modules/common/models.js","modules/robots/models/Robot.js","modules/robots/models/RobotInterface.js","modules/robots/models/RobotModel.js","modules/robots/models/Sensor.js","modules/robots/models/SensorGroup.js","modules/robots/models/SensorModel.js","modules/robots/models/SensorValueType.js","modules/robots/models/Servo.js","modules/robots/models/ServoConfig.js","modules/robots/models/ServoGroup.js","modules/robots/models/ServoInterface.js","modules/robots/models/ServoModel.js","modules/robots/models.js","modules/robots/directives/robotEditor.tpl.html!text","modules/robots/directives/RobotEditor.js","modules/robots/directives/batteryLevel.tpl.html!text","modules/robots/directives/BatteryLevel.js","modules/robots/directives/robotInterface.tpl.html!text","modules/robots/directives/RobotInterface.js","modules/robots/directives/calibrateRobot.tpl.html!text","modules/robots/directives/CalibrateRobot.js","modules/robots/directives/viewRobot.tpl.html!text","modules/robots/directives/ViewRobot.js","modules/robots/directives.js","modules/actions/directives/actionEditor.tpl.html!text","modules/actions/directives/ActionEditor.js","modules/actions/directives/advancedPoseEditor.tpl.html!text","modules/actions/directives/AdvancedPoseEditor.js","modules/actions/directives/basicPoseEditor.tpl.html!text","modules/actions/directives/BasicPoseEditor.js","modules/actions/directives/groupEditor.tpl.html!text","modules/actions/directives/GroupEditor.js","modules/actions/directives/poseEditor.tpl.html!text","modules/actions/directives/PoseEditor.js","modules/actions/directives/jointEditor.tpl.html!text","modules/actions/directives/JointEditor.js","modules/actions/directives/sequenceEditor.tpl.html!text","modules/actions/directives/SequenceEditor.js","modules/actions/directives/soundEditor.tpl.html!text","modules/actions/directives/SoundEditor.js","modules/actions/directives.js","modules/actions/ActionController.js","modules/actions/ActionTestController.js","modules/actions/controllers.js","modules/actions/index.tpl.html!text","modules/actions/actionEdit.tpl.html!text","modules/actions/actionImport.tpl.html!text","modules/actions/actionTest.tpl.html!text","categories/action.js","modules/users/models/CustomAction.js","modules/users/models/CustomTrigger.js","modules/users/models/User.js","modules/users/models/UserAction.js","modules/users/models.js","modules/operators/models/Operator.js","modules/operators/models.js","modules/operators/OperatorController.js","modules/operators/controllers.js","modules/operators/index.tpl.html!text","modules/triggers/models/ButtonHotkey.js","modules/triggers/models/Trigger.js","modules/triggers/models/ButtonTrigger.js","modules/triggers/models/TriggerType.js","modules/triggers/models.js","modules/users/UserController.js","modules/users/controllers.js","modules/users/index.tpl.html!text","modules/robots/RobotController.js","modules/robots/controllers.js","modules/robots/index.tpl.html!text","modules/common/CommonController.js","modules/common/SettingsController.js","modules/common/controllers.js","modules/common/settings.tpl.html!text","categories/admin.js","modules/interactions/models/Interaction.js","modules/interactions/models/InteractionLog.js","modules/interactions/models.js","modules/interactions/InteractionController.js","modules/interactions/directives/actionButton.tpl.html!text","modules/interactions/directives/ActionButton.js","modules/interactions/directives/actionButtons.tpl.html!text","modules/interactions/directives/ActionButtons.js","modules/interactions/directives/operatorInteraction.tpl.html!text","modules/interactions/directives/OperatorInteraction.js","modules/interactions/directives/userInteraction.tpl.html!text","modules/interactions/directives/UserInteraction.js","modules/interactions/directives.js","modules/interactions/controllers.js","modules/interactions/index.tpl.html!text","modules/interactions/begin.tpl.html!text","modules/interactions/log.tpl.html!text","modules/interactions/manage.tpl.html!text","categories/interaction.js","modules/triggers/directives/buttonTriggerEditor.tpl.html!text","modules/triggers/directives/ButtonTriggerEditor.js","modules/triggers/directives/compoundTriggerEditor.tpl.html!text","modules/triggers/directives/CompoundTriggerEditor.js","modules/triggers/directives/hotkeyEditor.tpl.html!text","modules/triggers/directives/HotkeyEditor.js","modules/triggers/directives/sensorTriggerEditor.tpl.html!text","modules/triggers/directives/SensorTriggerEditor.js","modules/triggers/directives/sensorValueEditor.tpl.html!text","modules/triggers/directives/SensorValueEditor.js","modules/triggers/directives/timeTriggerEditor.tpl.html!text","modules/triggers/directives/TimeTriggerEditor.js","modules/triggers/directives/triggerEditor.tpl.html!text","modules/triggers/directives/TriggerEditor.js","modules/triggers/directives.js","modules/triggers/TriggerController.js","modules/triggers/controllers.js","modules/triggers/index.tpl.html!text","modules/triggers/triggerEdit.tpl.html!text","modules/triggers/triggerTest.tpl.html!text","modules/triggers/triggerImport.tpl.html!text","categories/trigger.js","modules/common/directives/KeyBinding.js","modules/common/directives/Model.js","modules/common/directives/navbar.tpl.html!text","modules/common/directives/Navbar.js","modules/common/directives/NotEmpty.js","modules/common/directives/Saveable.js","modules/common/directives.js"],"names":[],"mappings":"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YACA,QAAA,gBAAA,eACA,QAAA,gBAAA,eAEA,MAAA,cCrBA,OAAA,mCAAA,WAAA,WAEA,GAAA,iBAAA,WACA,KAAA,oBAAA,SAAA,UACA,GAAA,MAAA,SAAA,OAAA,SAAA,QACA,UAAA,EACA,UAAA,SACA,WAAA,QAGA,SAAA,UACA,WAAA,SAGA,SAAA,WACA,WAAA,SAGA,IAAA,MAAA,KAAA,eAAA,KACA,OAAA,KAAA,MAAA,KAAA,UACA,UAAA,KAEA,IAIA,KAAA,eAAA,SAAA,UAEA,GAAA,KAiIA,OA/HA,MADA,GAAA,SACA,YACA,GAAA,SACA,GACA,IAAA,SACA,QACA,IAAA,SACA,GACA,IAAA,SACA,GACA,IAAA,SACA,GACA,IAAA,SACA,GACA,IAAA,SACA,GACA,IAAA,SACA,SACA,IAAA,SACA,QACA,IAAA,SACA,SACA,IAAA,SACA,WACA,IAAA,SACA,MACA,IAAA,SACA,OACA,IAAA,SACA,OACA,IAAA,SACA,KACA,IAAA,SACA,QACA,IAAA,SACA,OACA,IAAA,SACA,MACA,IAAA,SACA,MACA,IAAA,SACA,GACA,IAAA,SACA,GACA,IAAA,SACA,GACA,IAAA,SACA,IACA,IAAA,SACA,IACA,IAAA,SACA,IACA,IAAA,SACA,IACA,KAAA,SACA,IACA,KAAA,SACA,IACA,KAAA,SACA,IACA,KAAA,SACA,IACA,KAAA,SACA,IACA,KAAA,SACA,IACA,KAAA,SACA,IACA,KAAA,SACA,IACA,KAAA,SACA,IACA,KAAA,SACA,IACA,KAAA,SACA,IACA,KAAA,SACA,KACA,KAAA,SACA,KACA,KAAA,SACA,KACA,KAAA,SACA,KACA,KAAA,SACA,KACA,KAAA,SACA,KACA,KAAA,SACA,KACA,KAAA,SACA,KACA,KAAA,SACA,KACA,KAAA,SACA,MACA,KAAA,SACA,MACA,KAAA,SACA,MACA,KAAA,SACA,GACA,KAAA,SACA,GACA,KAAA,SACA,IACA,KAAA,SACA,IACA,KAAA,SACA,IACA,KAAA,SACA,IACA,KAAA,SACA,IACA,KAAA,SACA,IACA,KAAA,SACA,IACA,KA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","sourcesContent":["'use strict';\r\n\r\ndefine('common/services/ModelBuilder',['require','angular','angularResource'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('angularResource');\r\n\r\n\tvar ModelBuilder = function() {\r\n\t\tthis.basePath = \"\";\r\n\r\n\t\tthis.setBasePath = function(path) {\r\n\t\t\tif (path.indexOf('/', path.length - 1) == -1) {\r\n\t\t\t\tpath = path + '/';\r\n\t\t\t}\r\n\r\n\t\t\tthis.basePath = path;\r\n\t\t};\r\n\r\n\t\tthis.transformResponse = function(data, headersGetter) {\r\n\t\t\tdata = angular.fromJson(data);\r\n\t\t\tvar headers = headersGetter();\r\n\t\t\tvar newResponse = data.objects;\r\n\r\n\t\t\tnewResponse.paging = {\r\n\t\t\t\tnum_results : data.num_results,\r\n\t\t\t\tpage : data.page,\r\n\t\t\t\ttotal_pages : data.total_pages\r\n\t\t\t};\r\n\r\n\t\t\treturn newResponse;\r\n\t\t};\r\n\r\n\t\tthis.$get = [ '$resource', '$q', '$rootScope', function($resource, $q, $rootScope) {\r\n\t\t\tvar root = this;\r\n\t\t\tvar getModel = function(model, params, methods, url) {\r\n\t\t\t\tif (url === undefined) {\r\n\t\t\t\t\turl = root.basePath + model + '/:id';\r\n\t\t\t\t} else {\r\n\t\t\t\t\turl = root.basePath + url;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar defaultMethods = {\r\n\t\t\t\t\tupdate : {\r\n\t\t\t\t\t\tmethod : 'PUT',\r\n\t\t\t\t\t\tisArray : false,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcreate : {\r\n\t\t\t\t\t\tmethod : 'POST',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tget : {\r\n\t\t\t\t\t\tmethod : 'GET',\r\n\t\t\t\t\t\tcache: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tquery : {\r\n\t\t\t\t\t\tmethod : 'GET',\r\n\t\t\t\t\t\tisArray : true,\r\n\t\t\t\t\t\ttransformResponse : root.transformResponse,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar defaultParams = {\r\n\t\t\t\t\tid : '@id',\r\n\t\t\t\t};\r\n\r\n\t\t\t\tmethods = angular.extend(defaultMethods, methods);\r\n\t\t\t\tfor ( var name in methods) {\r\n\t\t\t\t\tif (methods[name].hasOwnProperty('url')) {\r\n\t\t\t\t\t\tmethods[name].url = root.basePath + methods[name].url;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparams = angular.extend(defaultParams, params);\r\n\t\t\t\tvar resource = $resource(url, params, methods);\r\n\r\n\t\t\t\tresource.prototype.getProperty = function(propName) {\r\n\t\t\t\t\tvar key = '$__' + propName;\r\n\t\t\t\t\tif(this[key] === undefined) {\r\n\t\t\t\t\t\tvar subUrl = root.basePath + model + '/' + this.id + '/' + propName;\r\n\t\t\t\t\t\tthis[key] = $resource(subUrl, {}, defaultMethods).query();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn this[key];\r\n\t\t\t\t};\r\n\r\n\t\t\t\tresource.prototype.getConcreteClassInstance = function() {\r\n\t\t\t\t\tif (this.$concreteResolved) { return this; }\r\n\t\t\t\t\tif (this.id === undefined || this.type === undefined) {\r\n\t\t\t\t\t\tif (this.$promise !== undefined) {\r\n\t\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar def = $q.defer();\r\n\t\t\t\t\t\t\tthis.$promise = def.promise;\r\n\t\t\t\t\t\t\tdef.resolve(this);\r\n\t\t\t\t\t\t\treturn this;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar concreteModel = getModel(this.type);\r\n\t\t\t\t\tvar concreteInstance = concreteModel.get({\r\n\t\t\t\t\t\tid : this.id\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconcreteInstance.$promise.then(function(res) {\r\n\t\t\t\t\t\tres.$concreteResolved = true;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\treturn concreteInstance;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tresource.prototype.$save = function() {\r\n\t\t\t\t\tif (!this.id) {\r\n\t\t\t\t\t\treturn this.$create();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn this.$update();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tresource.queryBase = resource.query;\r\n\t\t\t\tresource.query = function(params) {\r\n\t\t\t\t\tif (params !== undefined) {\r\n\t\t\t\t\t\tvar q = {};\r\n\t\t\t\t\t\tq.filters = [];\r\n\t\t\t\t\t\tfor ( var key in params) {\r\n\t\t\t\t\t\t\tq.filters.push({\r\n\t\t\t\t\t\t\t\tname : key,\r\n\t\t\t\t\t\t\t\top : params[key] === null ? 'is_null' : '==',\r\n\t\t\t\t\t\t\t\tval : params[key],\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.queryBase({\r\n\t\t\t\t\t\t\tq : q\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn this.queryBase();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn resource;\r\n\t\t\t};\r\n\r\n\t\t\treturn {\r\n\t\t\t\tgetModel : getModel,\r\n\t\t\t};\r\n\t\t} ];\r\n\t};\r\n\r\n\treturn ModelBuilder;\r\n});\n","'use strict';\r\n\r\ndefine('common/services/modelServices',['require','angular','angularResource','./ModelBuilder'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar angularResource = require('angularResource');\r\n\tvar ModelBuilder = require('./ModelBuilder'); \r\n\r\n\tvar moduleName = 'kasparGUI.common.modelServices';\r\n\tvar dependancies = [ angularResource ];\r\n\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.provider('modelBuilder', ModelBuilder);\r\n\r\n\treturn moduleName;\r\n});\r\n\n","\ndefine('text!default.tpl.html',[],function () { return '<h3 class=\"text-center\">Default start page</h3>\\r\\n<strong>TODO</strong>\\r\\n<ul>\\r\\n\\t<li><strong> Login screen </strong></li>\\r\\n\\t<li><strong> User customisations </strong>\\r\\n\\t\\t<ul>\\r\\n\\t\\t\\t<li>behaviour overrides</li>\\r\\n\\t\\t\\t<li>trigger overrides</li>\\r\\n\\t\\t\\t<li>global speed modifier (should this include timings?)</li>\\r\\n\\t\\t</ul></li>\\r\\n\\t<li><strong> Language/Terminology corrections </strong>\\r\\n\\t\\t<ul>\\r\\n\\t\\t\\t<li>Need to work with teachers to tune language</li>\\r\\n\\t\\t</ul></li>\\r\\n\\t<li><strong> Visual cleanup </strong>\\r\\n\\t\\t<ul>\\r\\n\\t\\t\\t<li>better feedback on save/update</li>\\r\\n\\t\\t\\t<li>reset save/update/disabled when changing model</li>\\r\\n\\t\\t\\t<li>alignment/sizing</li>\\r\\n\\t\\t\\t<li>consistent formatting</li>\\r\\n\\t\\t</ul></li>\\r\\n\\t<li><strong>Tootips on input screens</strong></li>\\r\\n\\t<li><strong> Performance </strong>\\r\\n\\t\\t<ul>\\r\\n\\t\\t\\t<li>base.(de)serialise may need to be revisited and written\\r\\n\\t\\t\\t\\texplicitly for each model</li>\\r\\n\\t\\t\\t<li>Rollback doesn\\'t appear to work properly for SQL rejected\\r\\n\\t\\t\\t\\tdata</li>\\r\\n\\t\\t</ul></li>\\r\\n</ul>';});\n\n","'use strict';\r\n\r\ndefine('common/i18n/en-gb',['require'],function(require) {\r\n\tvar enGb = {\r\n\t\t'action.label' : 'Action',\r\n\t\t'action.select.prompt' : '--Select Action--',\r\n\t\t'action.test' : 'Test',\r\n\t\t'action.stop' : 'Stop',\r\n\t\t'action.import.selectFiles' : 'Select Files',\r\n\t\t'action.import.upload' : 'Upload',\r\n\t\t'action.new' : 'New',\r\n\t\t'action.delete' : 'Delete',\r\n\t\t'action.type.label' : 'Type',\r\n\t\t'action.type.select.prompt' : '--Select Type--',\r\n\t\t'action.sound.name' : 'Name',\r\n\t\t'action.sound.selectFile' : 'Select File',\r\n\t\t'action.sound.upload' : 'Upload',\r\n\t\t'action.sequence.name' : 'Name',\r\n\t\t'action.sequence.actions.list.label' : 'All Behaviours',\r\n\t\t'action.sequence.actions.add' : 'Add',\r\n\t\t'action.sequence.actions.remove' : 'Remove',\r\n\t\t'action.sequence.actions.moveUp' : 'Move Up',\r\n\t\t'action.sequence.actions.moveDown' : 'Move Down',\r\n\t\t'action.sequence.actions.title' : 'Sequence Behaviours',\r\n\t\t'action.sequence.help.short' : 'All selected behaviours will attempt execute in order',\r\n\t\t'action.pose.name' : 'Name',\r\n\t\t'action.pose.speedModifier' : 'Speed Modifier',\r\n\t\t'action.pose.speedModifier.short' : 'Speed',\r\n\t\t'action.pose.minLength' : 'Minimum Length',\r\n\t\t'action.pose.minLength.short' : 'Length',\r\n\t\t'action.pose.minLength.units' : 'seconds',\r\n\t\t'action.pose.joint.name' : 'Joint Name',\r\n\t\t'action.pose.joint.name.short' : 'Name',\r\n\t\t'action.pose.joint.select.prompt' : '--Select Joint--',\r\n\t\t'action.pose.joint.delete' : 'Remove',\r\n\t\t'action.pose.joint.position' : 'Position',\r\n\t\t'action.pose.joint.speed' : 'Speed',\r\n\t\t'action.group.name' : 'Name',\r\n\t\t'action.group.actions.list.label' : 'All Behaviours',\r\n\t\t'action.group.actions.add' : 'Add',\r\n\t\t'action.group.actions.remove' : 'Remove',\r\n\t\t'action.group.actions.title' : 'Group Behaviours',\r\n\t\t'action.group.help.short' : 'All selected behaviours will attempt to execute simultaneously',\r\n\t\t'common.setting.robot.label' : 'Attached Robot',\r\n\t\t'common.setting.robot.select.prompt' : '--Select Robot--',\r\n\t\t'interaction.operator.label' : 'Operator',\r\n\t\t'interaction.operator.select.prompt' : '--Select Operator--',\r\n\t\t'interaction.user.label' : 'User',\r\n\t\t'interaction.user.select.prompt' : '--Select User--',\r\n\t\t'interaction.start' : 'Start',\r\n\t\t'interaction.stop' : 'Stop',\r\n\t\t'interaction.operator.view.buttons.label' : 'User Buttons',\r\n\t\t'interaction.operator.view.activateBindings' : 'Activate Bindings',\r\n\t\t'interaction.operator.view.showHotkeys' : 'Show Hotkeys',\r\n\t\t'operator.label' : 'Operator',\r\n\t\t'operator.select.prompt' : '--Select Operator--',\r\n\t\t'operator.new' : 'New',\r\n\t\t'operator.delete' : 'Delete',\r\n\t\t'operator.name' : 'Name',\r\n\t\t'operator.users' : 'Common Users',\r\n\t\t'robot.label' : 'Robot',\r\n\t\t'robot.select.prompt' : '--Select Robot--',\r\n\t\t'robot.new' : 'New',\r\n\t\t'robot.delete' : 'Delete',\r\n\t\t'robot.view.servoModel.label' : 'Servo Model Configs',\r\n\t\t'robot.view.servoModel.id' : 'Servo Model Id',\r\n\t\t'robot.view.servoModel.port' : 'Port',\r\n\t\t'robot.view.servoModel.portSpeed' : 'Port Speed',\r\n\t\t'robot.view.servoModel.position.scale' : 'Position Scale',\r\n\t\t'robot.view.servoModel.position.offset' : 'Position Offset',\r\n\t\t'robot.view.servoModel.position.min' : 'Min Position',\r\n\t\t'robot.view.servoModel.position.max' : 'Max Position',\r\n\t\t'robot.view.servoModel.position.default' : 'Default Position',\r\n\t\t'robot.view.servoModel.speed.scale' : 'Speed Scale',\r\n\t\t'robot.view.servoModel.speed.min' : 'Min Speed',\r\n\t\t'robot.view.servoModel.speed.max' : 'Max Speed',\r\n\t\t'robot.view.servoModel.speed.default' : 'Default Speed',\r\n\t\t'robot.view.servoModel.poseable' : 'Poseable',\r\n\t\t'robot.view.servoModel.otherSettings' : 'Other',\r\n\t\t'robot.view.servoGroups.label' : 'Servo Groups',\r\n\t\t'robot.view.servoGroups.servoName' : 'Servo Name',\r\n\t\t'robot.view.servos.label' : 'Servos',\r\n\t\t'robot.view.servos.model.id' : 'Servo Model Id',\r\n\t\t'robot.view.servos.position.scale' : 'Position Scale',\r\n\t\t'robot.view.servos.position.offset' : 'Position Offset',\r\n\t\t'robot.view.servos.position.min' : 'Min Position',\r\n\t\t'robot.view.servos.position.max' : 'Max Position',\r\n\t\t'robot.view.servos.position.default' : 'Default Position',\r\n\t\t'robot.view.servos.speed.scale' : 'Speed Scale',\r\n\t\t'robot.view.servos.speed.min' : 'Min Speed',\r\n\t\t'robot.view.servos.speed.max' : 'Max Speed',\r\n\t\t'robot.view.servos.speed.default' : 'Default Speed',\r\n\t\t'robot.view.servos.poseable' : 'Poseable',\r\n\t\t'robot.view.servos.otherSettings' : 'Other',\r\n\t\t'robot.interface.robot' : 'Attached Robot',\r\n\t\t'robot.interface.robot.short' : 'Robot',\r\n\t\t'robot.interface.robot.select.prompt' : '--Select Robot--',\r\n\t\t'robot.interface.connect' : 'Connect',\r\n\t\t'robot.interface.disconnect' : 'Disconnect',\r\n\t\t'robot.name' : 'Name',\r\n\t\t'robot.model' : 'Model',\r\n\t\t'robot.model.select.prompt' : '--Select Model--',\r\n\t\t'robot.version' : 'Version',\r\n\t\t'trigger.import.selectFiles' : 'Select Files',\r\n\t\t'trigger.import.upload' : 'Upload',\r\n\t\t'trigger.label' : 'Trigger',\r\n\t\t'trigger.select.prompt' : '--Select Trigger--',\r\n\t\t'trigger.new' : 'New',\r\n\t\t'trigger.delete' : 'Delete',\r\n\t\t'trigger.type.label' : 'Type',\r\n\t\t'trigger.type.select.prompt' : '--Select Type--',\r\n\t\t'trigger.time.name' : 'Name',\r\n\t\t'trigger.time.action' : 'Action',\r\n\t\t'trigger.time.action.select.prompt' : 'No Action',\r\n\t\t'trigger.time.trigger' : 'Trigger',\r\n\t\t'trigger.time.trigger.select.prompt' : '--Select Trigger--',\r\n\t\t'trigger.time.time' : 'Time',\r\n\t\t'trigger.time.time.while' : 'While Active',\r\n\t\t'trigger.time.time.since' : 'Since Deactivated',\r\n\t\t'trigger.time.time.units' : 'seconds',\r\n\t\t'trigger.sensor.connect' : 'Connect',\r\n\t\t'trigger.sensor.disconnect' : 'Disconnect',\r\n\t\t'trigger.sensor.current' : 'Current',\r\n\t\t'trigger.sensor.basic.label' : 'Basic',\r\n\t\t'trigger.sensor.basic.on' : 'Active',\r\n\t\t'trigger.sensor.basic.off' : 'Inactive',\r\n\t\t'trigger.sensor.basic.help.short' : 'As determined by sensor type',\r\n\t\t'trigger.sensor.advanced.label' : 'Detailed',\r\n\t\t'trigger.sensor.advanced.compare.label' : 'Active when current value',\r\n\t\t'trigger.sensor.advanced.compare.select.prompt' : '--Select Value--',\r\n\t\t'trigger.sensor.name' : 'Name',\r\n\t\t'trigger.sensor.action' : 'Action',\r\n\t\t'trigger.sensor.action.select.prompt' : 'No Action',\r\n\t\t'trigger.sensor.sensor' : 'Sensor',\r\n\t\t'trigger.sensor.sensor.select.prompt' : '--Select Sensor--',\r\n\t\t'trigger.button.hotkey.label' : 'Keyboard Button',\r\n\t\t'trigger.button.hotkey.delete' : 'Delete',\r\n\t\t'trigger.button.hotkey.new' : 'New Keyboard Button',\r\n\t\t'trigger.button.name' : 'Name',\r\n\t\t'trigger.button.action' : 'Action',\r\n\t\t'trigger.button.action.select.prompt' : 'No Action',\r\n\t\t'trigger.compound.name' : 'Name',\r\n\t\t'trigger.compound.action' : 'Action',\r\n\t\t'trigger.compound.action.select.prompt' : 'No Action',\r\n\t\t'user.label' : 'User',\r\n\t\t'user.select.prompt' : '--Select User--',\r\n\t\t'user.new' : 'New',\r\n\t\t'user.delete' : 'Delete',\r\n\t\t'user.name' : 'Name',\r\n\t\t'user.speedModifier' : 'Movement Speed',\r\n\t\t'user.custom.action.label' : 'Custom Behaviours',\r\n\t\t'user.custom.action.new' : 'New',\r\n\t\t'user.custom.action.delete' : 'Delete',\r\n\t\t'user.custom.action.override' : 'Action to Override',\r\n\t\t'user.custom.action.redirect' : 'Override Action',\r\n\t\t'user.custom.trigger.label' : 'Custom Triggers',\r\n\t\t'user.custom.trigger.new' : 'New',\r\n\t\t'user.custom.trigger.delete' : 'Delete',\r\n\t\t'navbar.admin.label' : 'Admin',\r\n\t\t'navbar.admin.operators' : 'Operators',\r\n\t\t'navbar.admin.users' : 'Users',\r\n\t\t'navbar.admin.robots' : 'Robots',\r\n\t\t'navbar.admin.settings' : 'Settings',\r\n\t\t'navbar.action.label' : 'Action',\r\n\t\t'navbar.action.edit' : 'Create/Edit',\r\n\t\t'navbar.action.test' : 'Test',\r\n\t\t'navbar.action.import' : 'Import',\r\n\t\t'navbar.trigger.label' : 'Trigger',\r\n\t\t'navbar.trigger.edit' : 'Create/Edit',\r\n\t\t'navbar.trigger.test' : 'Test',\r\n\t\t'navbar.trigger.import' : 'Import',\r\n\t\t'navbar.interaction.label' : 'Interactions',\r\n\t\t'navbar.interaction.view' : 'View History',\r\n\t\t'navbar.interaction.begin' : 'Begin New',\r\n\t\t'navbar.interaction.manage' : 'Manage History',\r\n\t};\r\n\r\n\treturn enGb;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('common/i18n/Language',['require','../i18n/en-gb'],function(require) {\r\n\tvar enGB = require('../i18n/en-gb');\r\n\r\n\tvar Language = function() {\r\n\t\tthis.language = \"en-gb\";\r\n\r\n\t\tthis.setLanguage = function(language) {\r\n\t\t\tthis.language = language;\r\n\t\t};\r\n\t\t\r\n\t\tthis.getText = function() {\r\n\t\t\treturn enGB;\r\n\t\t};\r\n\t};\r\n\r\n\treturn Language;\r\n});\n","'use strict';\r\n\r\ndefine('common/i18n/languageServices',['require','angular','./Language'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar Language = require('./Language');\r\n\r\n\tvar moduleName = 'kasparGUI.common.languageServices';\r\n\tvar dependancies = [];\r\n\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.service('language', Language);\r\n\r\n\treturn moduleName;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('actions/models/Action',['require'],function(require) {\r\n\tvar Action = function(modelBuilder) {\r\n\t\tvar resource = modelBuilder.getModel('Action', {}, {\r\n\t\t\tcreate : {\r\n\t\t\t\tmethod : 'POST',\r\n\t\t\t\turl : ':type',\r\n\t\t\t\tparams : {\r\n\t\t\t\t\ttype : '@type'\r\n\t\t\t\t},\r\n\t\t\t\tisArray : false,\r\n\t\t\t},\r\n\t\t\tupdate : {\r\n\t\t\t\tmethod : 'PUT',\r\n\t\t\t\turl : ':type/:id',\r\n\t\t\t\tparams : {\r\n\t\t\t\t\ttype : '@type',\r\n\t\t\t\t\tid : '@id',\r\n\t\t\t\t},\r\n\t\t\t\tisArray : false,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\treturn resource;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', Action ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('actions/models/ActionTest',['require'],function(require) {\r\n\tvar ActionTest = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('ActionTest', {}, {}, 'Action/:id/Test');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', ActionTest ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('actions/models/ActionType',['require'],function(require) {\r\n\tvar ActionType = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('ActionType');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', ActionType ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('actions/models/JointPosition',['require'],function(require) {\r\n\tvar JointPosition = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('JointPosition');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', JointPosition ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('actions/models/SequenceOrder',['require'],function(require) {\r\n\tvar SequenceOrder = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('SequenceOrder');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', SequenceOrder ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('actions/models',['require','angular','angularResource','./models/Action','./models/ActionTest','./models/ActionType','./models/JointPosition','./models/SequenceOrder'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar angularResource = require('angularResource');\r\n\tvar Action = require('./models/Action');\r\n\tvar ActionTest = require('./models/ActionTest');\r\n\tvar ActionType = require('./models/ActionType');\r\n\tvar JointPosition = require('./models/JointPosition');\r\n\tvar SequenceOrder = require('./models/SequenceOrder');\r\n\r\n\tvar moduleName = 'kasparGUI.actions.models';\r\n\tvar dependancies = [ \r\n\t\t\t\t\t\tangularResource,\r\n\t\t\t\t\t\t];\r\n\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.factory('Action', Action)\r\n\t\t.factory('ActionTest', ActionTest)\r\n\t\t.factory('ActionType', ActionType)\r\n\t\t.factory('JointPosition', JointPosition)\r\n\t\t.factory('SequenceOrder', SequenceOrder);\r\n\r\n\treturn moduleName;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('common/services/HotkeyFormatter',['require'],function(require) {\r\n\r\n\tvar HotkeyFormatter = function() {\r\n\t\tthis.getDisplayFromEvent = function(keyEvent) {\r\n\t\t\tvar code = keyEvent.which || keyEvent.keyCode; // Not-IE || IE\r\n\t\t\tvar modifiers = \"\";\r\n\t\t\tif (keyEvent.altKey) {\r\n\t\t\t\tmodifiers += \"alt+\";\r\n\t\t\t}\r\n\r\n\t\t\tif (keyEvent.ctrlKey) {\r\n\t\t\t\tmodifiers += \"ctrl+\";\r\n\t\t\t}\r\n\r\n\t\t\tif (keyEvent.shiftKey) {\r\n\t\t\t\tmodifiers += \"shift+\";\r\n\t\t\t}\r\n\r\n\t\t\tvar disp = this.getCharDisplay(code);\r\n\t\t\tif (disp !== \"\" || modifiers !== \"\") {\r\n\t\t\t\treturn modifiers + disp;\r\n\t\t\t} else {\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.getCharDisplay = function(charCode) {\r\n\t\t\t// http://www.cambiaresearch.com/articles/15/javascript-char-codes-key-codes\r\n\t\t\tvar char;\r\n\t\t\tif (charCode == 8)\r\n\t\t\t\tchar = \"backspace\";\r\n\t\t\telse if (charCode == 9)\r\n\t\t\t\tchar = \"\"; // tab\r\n\t\t\telse if (charCode == 13)\r\n\t\t\t\tchar = \"enter\";\r\n\t\t\telse if (charCode == 16)\r\n\t\t\t\tchar = \"\"; // shift\r\n\t\t\telse if (charCode == 17)\r\n\t\t\t\tchar = \"\"; // ctrl\r\n\t\t\telse if (charCode == 18)\r\n\t\t\t\tchar = \"\"; // alt\r\n\t\t\telse if (charCode == 19)\r\n\t\t\t\tchar = \"\"; // pause/break\r\n\t\t\telse if (charCode == 20)\r\n\t\t\t\tchar = \"\"; // caps\r\n\t\t\telse if (charCode == 27)\r\n\t\t\t\tchar = \"escape\";\r\n\t\t\telse if (charCode == 32)\r\n\t\t\t\tchar = \"space\";\r\n\t\t\telse if (charCode == 33)\r\n\t\t\t\tchar = \"pageup\";\r\n\t\t\telse if (charCode == 34)\r\n\t\t\t\tchar = \"pagedown\";\r\n\t\t\telse if (charCode == 35)\r\n\t\t\t\tchar = \"end\";\r\n\t\t\telse if (charCode == 36)\r\n\t\t\t\tchar = \"home\";\r\n\t\t\telse if (charCode == 37)\r\n\t\t\t\tchar = \"left\";\r\n\t\t\telse if (charCode == 38)\r\n\t\t\t\tchar = \"up\";\r\n\t\t\telse if (charCode == 39)\r\n\t\t\t\tchar = \"right\";\r\n\t\t\telse if (charCode == 40)\r\n\t\t\t\tchar = \"down\";\r\n\t\t\telse if (charCode == 45)\r\n\t\t\t\tchar = \"ins\";\r\n\t\t\telse if (charCode == 46)\r\n\t\t\t\tchar = \"del\";\r\n\t\t\telse if (charCode == 91)\r\n\t\t\t\tchar = \"\"; // left win\r\n\t\t\telse if (charCode == 92)\r\n\t\t\t\tchar = \"\"; // right win\r\n\t\t\telse if (charCode == 93)\r\n\t\t\t\tchar = \"\"; // select\r\n\t\t\telse if (charCode == 96)\r\n\t\t\t\tchar = \"0\";\r\n\t\t\telse if (charCode == 97)\r\n\t\t\t\tchar = \"1\";\r\n\t\t\telse if (charCode == 98)\r\n\t\t\t\tchar = \"2\";\r\n\t\t\telse if (charCode == 99)\r\n\t\t\t\tchar = \"3\";\r\n\t\t\telse if (charCode == 100)\r\n\t\t\t\tchar = \"4\";\r\n\t\t\telse if (charCode == 101)\r\n\t\t\t\tchar = \"5\";\r\n\t\t\telse if (charCode == 102)\r\n\t\t\t\tchar = \"6\";\r\n\t\t\telse if (charCode == 103)\r\n\t\t\t\tchar = \"7\";\r\n\t\t\telse if (charCode == 104)\r\n\t\t\t\tchar = \"8\";\r\n\t\t\telse if (charCode == 105)\r\n\t\t\t\tchar = \"9\";\r\n\t\t\telse if (charCode == 106)\r\n\t\t\t\tchar = \"*\";\r\n\t\t\telse if (charCode == 107)\r\n\t\t\t\tchar = \"+\";\r\n\t\t\telse if (charCode == 109)\r\n\t\t\t\tchar = \"-\";\r\n\t\t\telse if (charCode == 110)\r\n\t\t\t\tchar = \".\";\r\n\t\t\telse if (charCode == 111)\r\n\t\t\t\tchar = \"/\";\r\n\t\t\telse if (charCode == 112)\r\n\t\t\t\tchar = \"F1\";\r\n\t\t\telse if (charCode == 113)\r\n\t\t\t\tchar = \"F2\";\r\n\t\t\telse if (charCode == 114)\r\n\t\t\t\tchar = \"F3\";\r\n\t\t\telse if (charCode == 115)\r\n\t\t\t\tchar = \"F4\";\r\n\t\t\telse if (charCode == 116)\r\n\t\t\t\tchar = \"F5\";\r\n\t\t\telse if (charCode == 117)\r\n\t\t\t\tchar = \"F6\";\r\n\t\t\telse if (charCode == 118)\r\n\t\t\t\tchar = \"F7\";\r\n\t\t\telse if (charCode == 119)\r\n\t\t\t\tchar = \"F8\";\r\n\t\t\telse if (charCode == 120)\r\n\t\t\t\tchar = \"F9\";\r\n\t\t\telse if (charCode == 121)\r\n\t\t\t\tchar = \"F10\";\r\n\t\t\telse if (charCode == 122)\r\n\t\t\t\tchar = \"F11\";\r\n\t\t\telse if (charCode == 123)\r\n\t\t\t\tchar = \"F12\";\r\n\t\t\telse if (charCode == 144)\r\n\t\t\t\tchar = \"\"; // num lock\r\n\t\t\telse if (charCode == 145)\r\n\t\t\t\tchar = \"\"; // scroll lock\r\n\t\t\telse if (charCode == 186)\r\n\t\t\t\tchar = \";\";\r\n\t\t\telse if (charCode == 187)\r\n\t\t\t\tchar = \"=\";\r\n\t\t\telse if (charCode == 188)\r\n\t\t\t\tchar = \",\";\r\n\t\t\telse if (charCode == 189)\r\n\t\t\t\tchar = \"-\";\r\n\t\t\telse if (charCode == 190)\r\n\t\t\t\tchar = \".\";\r\n\t\t\telse if (charCode == 191)\r\n\t\t\t\tchar = \"/\";\r\n\t\t\telse if (charCode == 192)\r\n\t\t\t\tchar = \"`\";\r\n\t\t\telse if (charCode == 219)\r\n\t\t\t\tchar = \"[\";\r\n\t\t\telse if (charCode == 220)\r\n\t\t\t\tchar = \"\\\\\";\r\n\t\t\telse if (charCode == 221)\r\n\t\t\t\tchar = \"]\";\r\n\t\t\telse if (charCode == 222)\r\n\t\t\t\tchar = \"'\";\r\n\t\t\telse\r\n\t\t\t\tchar = String.fromCharCode(charCode);\r\n\t\t\treturn char;\r\n\t\t};\r\n\t};\r\n\r\n\treturn HotkeyFormatter;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('common/services/displayServices',['require','angular','./HotkeyFormatter'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar HotkeyFormatter = require('./HotkeyFormatter'); \r\n\r\n\tvar moduleName = 'kasparGUI.common.displayServices';\r\n\tvar dependancies = [];\r\n\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.service('hotkeyFormatter', HotkeyFormatter);\r\n\r\n\treturn moduleName;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('robots/services/RobotInterface',['require'],function(require) {\r\n\tvar Sensor = function() {\r\n\t\treturn {\r\n\t\t\tid : null,\r\n\t\t\tname : null,\r\n\t\t\tvalue : null,\r\n\t\t};\r\n\t};\r\n\r\n\tvar Servo = function() {\r\n\t\treturn {\r\n\t\t\tid : null,\r\n\t\t\tactual : {\r\n\t\t\t\tposition : null,\r\n\t\t\t\tposeable : null\r\n\t\t\t},\r\n\t\t\tposeable : null,\r\n\t\t\tposition : null,\r\n\t\t\tjointName : null,\r\n\t\t};\r\n\t};\r\n\r\n\tvar RobotInterface = function($q, $timeout, $rootScope, RobotInterface) {\r\n\t\tvar self = this;\r\n\t\tvar connected = false;\r\n\t\tvar robotId = null;\r\n\t\tvar delayedSave = null;\r\n\t\tvar saving = false;\r\n\t\tvar components = {\r\n\t\t\tservos : {},\r\n\t\t\tsensors : {},\r\n\t\t\tid : null,\r\n\t\t\ttimestamp : null,\r\n\t\t};\r\n\r\n\t\tvar sendChanges = function(newValue, oldValue) {\r\n\t\t\tif (robotId === null || !connected) { return; }\r\n\r\n\t\t\tif (saving) {\r\n\t\t\t\tdelayedSave = newValue;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar servos = [];\r\n\t\t\tfor ( var servoName in newValue) {\r\n\t\t\t\tvar servo = newValue[servoName];\r\n\t\t\t\tif (oldValue === undefined || oldValue[servoName] === undefined || servo.position != oldValue[servoName].position || servo.poseable != oldValue[servoName].poseable) {\r\n\t\t\t\t\tservos.push({\r\n\t\t\t\t\t\tid : servo.id,\r\n\t\t\t\t\t\tposition : servo.position,\r\n\t\t\t\t\t\tposeable : servo.poseable,\r\n\t\t\t\t\t\tjointName : servoName,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (servos.length > 0) {\r\n\t\t\t\tvar packet = {\r\n\t\t\t\t\tservos : servos,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsaving = true;\r\n\t\t\t\tvar save = RobotInterface.save({\r\n\t\t\t\t\tid : robotId\r\n\t\t\t\t}, packet);\r\n\t\t\t\tsave.$promise.then(function() {\r\n\t\t\t\t\tsaving = false;\r\n\t\t\t\t\tif (delayedSave !== null) {\r\n\t\t\t\t\t\tvar ds = delayedSave;\r\n\t\t\t\t\t\tdelayedSave = null;\r\n\t\t\t\t\t\tsendChanges(ds);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tif (delayedSave !== null) {\r\n\t\t\t\t\tvar ds = delayedSave;\r\n\t\t\t\t\tdelayedSave = null;\r\n\t\t\t\t\tsendChanges(ds);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar updateStatus = function(lastUpdateTime) {\r\n\t\t\tif (!connected) { return; }\r\n\r\n\t\t\tvar status = lastUpdateTime === undefined ? RobotInterface.get({\r\n\t\t\t\tid : robotId\r\n\t\t\t}) : RobotInterface.get({\r\n\t\t\t\tid : robotId,\r\n\t\t\t\ttimestamp : lastUpdateTime\r\n\t\t\t});\r\n\t\t\tstatus.$promise.then(processUpdate).then(updateStatus);\r\n\t\t};\r\n\r\n\t\tvar processUpdate = function(dataPackage) {\r\n\t\t\tfor (var servoIndex = 0; servoIndex < dataPackage.servos.length; servoIndex++) {\r\n\t\t\t\tvar servo = dataPackage.servos[servoIndex];\r\n\t\t\t\tif (components.servos[servo.jointName] === undefined) {\r\n\t\t\t\t\tcomponents.servos[servo.jointName] = new Servo();\r\n\t\t\t\t\tcomponents.servos[servo.jointName].jointName = servo.jointName;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcomponents.servos[servo.jointName].id = servo.id;\r\n\t\t\t\tcomponents.servos[servo.jointName].actual.position = servo.position;\r\n\t\t\t\tcomponents.servos[servo.jointName].actual.poseable = servo.poseable;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var sensorIndex = 0; sensorIndex < dataPackage.sensors.length; sensorIndex++) {\r\n\t\t\t\tvar sensor = dataPackage.sensors[sensorIndex];\r\n\t\t\t\tif (components.sensors[sensor.name] === undefined) {\r\n\t\t\t\t\tcomponents.sensors[sensor.name] = new Sensor();\r\n\t\t\t\t\tcomponents.sensors[sensor.name].name = sensor.name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcomponents.sensors[sensor.name].id = sensor.id;\r\n\t\t\t\tcomponents.sensors[sensor.name].value = sensor.value;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$rootScope.$$phase) {\r\n\t\t\t\t$rootScope.$digest();\r\n\t\t\t}\r\n\t\t\treturn dataPackage.timestamp;\r\n\t\t};\r\n\r\n\t\t$rootScope.$watch(function() {\r\n\t\t\treturn components.servos;\r\n\t\t}, sendChanges, true);\r\n\r\n\t\tthis.setRobot = function(robot) {\r\n\t\t\tif (robot === undefined || robot === null && robotId !== null) {\r\n\t\t\t\tthis.setConnected(false);\r\n\t\t\t\trobotId = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (robot.id != robotId) {\r\n\t\t\t\tvar connected = this.connected;\r\n\t\t\t\tthis.setConnected(false);\r\n\t\t\t\trobotId = robot.id;\r\n\t\t\t\tthis.setConnected(connected);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.setConnected = function(connectedState) {\r\n\t\t\tconnected = connectedState;\r\n\t\t\tif (connected) {\r\n\t\t\t\tupdateStatus();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.getSensor = function(sensorName) {\r\n\t\t\tif (sensorName === undefined) { return null; }\r\n\r\n\t\t\tif (components.sensors[sensorName] === undefined) {\r\n\t\t\t\tcomponents.sensors[sensorName] = new Sensor();\r\n\t\t\t\tcomponents.sensors[sensorName].name = sensorName;\r\n\t\t\t}\r\n\r\n\t\t\treturn components.sensors[sensorName];\r\n\t\t};\r\n\r\n\t\tthis.getServo = function(componentName) {\r\n\t\t\tif (componentName === undefined) { return null; }\r\n\r\n\t\t\tif (components.servos[componentName] === undefined) {\r\n\t\t\t\tcomponents.servos[componentName] = new Servo();\r\n\t\t\t\tcomponents.servos[componentName].jointName = componentName;\r\n\t\t\t}\r\n\r\n\t\t\treturn components.servos[componentName];\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ '$q', '$timeout', '$rootScope', 'RobotInterface', RobotInterface ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('robots/services/interfaceServices',['require','angular','./RobotInterface'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar RobotInterface = require('./RobotInterface'); \r\n\r\n\tvar moduleName = 'kasparGUI.robot.interfaceServices';\r\n\tvar dependancies = [];\r\n\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.service('robotInterface', RobotInterface);\r\n\r\n\treturn moduleName;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('common/filters/ExceptFilter',['require'],function(require) {\r\n\tvar ExceptFilter = function() {\r\n\t\treturn function(inputList, objList, property) {\r\n\t\t\tvar ret = [];\r\n\t\t\tif (objList === undefined) { return inputList; }\r\n\t\t\tproperty = typeof (property) !== 'undefined' ? property : 'id';\r\n\r\n\t\t\tif (Object.prototype.toString.call(objList) != '[object Array]') {\r\n\t\t\t\tobjList = [ objList ];\r\n\t\t\t}\r\n\r\n\t\t\tif (inputList !== undefined) {\r\n\t\t\t\tfor (var i = 0; i < inputList.length; i++) {\r\n\t\t\t\t\tvar eq = false;\r\n\t\t\t\t\tfor (var j = 0; j < objList.length; j++) {\r\n\t\t\t\t\t\tif (property === '') {\r\n\t\t\t\t\t\t\teq = objList[j] == inputList[i];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\teq = objList[j][property] == inputList[i][property];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (eq) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!eq) {\r\n\t\t\t\t\t\tret.push(inputList[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ret;\r\n\t\t};\r\n\t};\r\n\r\n\treturn ExceptFilter;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('common/filters/InterpolateFilter',['require'],function(require) {\r\n\tvar InterpolateFilter = function(version) {\r\n\t\treturn function(text) {\r\n\t\t\treturn String(text).replace(/\\%VERSION\\%/mg, version);\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ 'version', InterpolateFilter ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('common/filters/IntersectFilter',['require'],function(require) {\r\n\tvar IntersectFilter = function() {\r\n\t\treturn function(inputList, inputProp, objList, objProp) {\r\n\t\t\tvar ret = [];\r\n\t\t\tif (objList === undefined) { return ret; }\r\n\t\t\tif (Object.prototype.toString.call(objList) != '[object Array]') {\r\n\t\t\t\tobjList = [ objList ];\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < inputList.length; i++) {\r\n\t\t\t\tfor (var j = 0; j < objList.length; j++) {\r\n\t\t\t\t\tvar eq = false;\r\n\t\t\t\t\tif (objProp === '' && inputProp === '') {\r\n\t\t\t\t\t\teq = objList[j] == inputList[i];\r\n\t\t\t\t\t} else if (objProp === '' && inputProp !== '') {\r\n\t\t\t\t\t\teq = objList[j] === inputList[i][inputProp];\r\n\t\t\t\t\t} else if (objProp !== '' && inputProp === '') {\r\n\t\t\t\t\t\teq = objList[j][objProp] == inputList[i];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\teq = objList[j][objProp] == inputList[i][inputProp];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (eq) {\r\n\t\t\t\t\t\tret.push(inputList[i]);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ret;\r\n\t\t};\r\n\t};\r\n\r\n\treturn IntersectFilter;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('common/filters',['require','angular','./filters/ExceptFilter','./filters/InterpolateFilter','./filters/IntersectFilter'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar ExceptFilter = require('./filters/ExceptFilter');\r\n\tvar InterpolateFilter = require('./filters/InterpolateFilter');\r\n\tvar IntersectFilter = require('./filters/IntersectFilter');\r\n\r\n\tvar moduleName = 'kasparGUI.common.filters';\r\n\tvar dependancies = [];\r\n\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.filter('except', ExceptFilter)\r\n\t\t.filter('interpolate', InterpolateFilter)\r\n\t\t.filter('intersect', IntersectFilter);\r\n\r\n\treturn moduleName;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('common/models/Menu',['require'],function(require) {\r\n\tvar Menu = function(modelBuilder) {\r\n\t\treturn modelBuilder.getModel('Menu');\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', Menu ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('common/models/Setting',['require'],function(require) {\r\n\tvar Setting = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('Setting');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', Setting ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('common/models',['require','angular','common/services/modelServices','./models/Menu','./models/Setting'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar angularResource = require('common/services/modelServices');\r\n\tvar Menu = require('./models/Menu');\r\n\tvar Setting = require('./models/Setting');\r\n\r\n\tvar moduleName = 'kasparGUI.common.models';\r\n\tvar dependancies = [\r\n\t\t\t\t\t\tangularResource,\r\n\t\t\t\t\t\t];\r\n\t\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.factory('Menu', Menu)\r\n\t\t.factory('Setting', Setting);\r\n\t\r\n\treturn moduleName;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('robots/models/Robot',['require'],function(require) {\r\n\tvar Robot = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('Robot');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', Robot ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('robots/models/RobotInterface',['require'],function(require) {\r\n\tvar RobotInterface = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('RobotInterface', {}, {\r\n\t\t\tget : {\r\n\t\t\t\tmethod : 'GET',\r\n\t\t\t\tcache : false\r\n\t\t\t}\r\n\t\t}, 'Robot/:id/Interface');\r\n\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', RobotInterface ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('robots/models/RobotModel',['require'],function(require) {\r\n\tvar RobotModel = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('RobotModel');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', RobotModel ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('robots/models/Sensor',['require'],function(require) {\r\n\tvar Sensor = function(modelBuilder) {\r\n\t\tvar resource = modelBuilder.getModel('Sensor');\r\n\r\n\t\treturn resource;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', Sensor ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('robots/models/SensorGroup',['require'],function(require) {\r\n\tvar SensorGroup = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('SensorGroup');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', SensorGroup ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('robots/models/SensorModel',['require'],function(require) {\r\n\tvar SensorModel = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('SensorModel');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', SensorModel ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('robots/models/SensorValueType',['require'],function(require) {\r\n\tvar SensorValueType = function(modelBuilder) {\r\n\t\tvar resource = modelBuilder.getModel('SensorValueType');\r\n\r\n\t\treturn resource;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', SensorValueType ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('robots/models/Servo',['require'],function(require) {\r\n\tvar Servo = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('Servo');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', Servo ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('robots/models/ServoConfig',['require'],function(require) {\r\n\tvar ServoConfig = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('ServoConfig');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', ServoConfig ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('robots/models/ServoGroup',['require'],function(require) {\r\n\tvar ServoGroup = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('ServoGroup');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', ServoGroup ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('robots/models/ServoInterface',['require'],function(require) {\r\n\tvar ServoInterface = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('ServoInterface');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', ServoInterface ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('robots/models/ServoModel',['require'],function(require) {\r\n\tvar ServoModel = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('ServoModel');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', ServoModel ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('robots/models',['require','angular','angularResource','./models/Robot','./models/RobotInterface','./models/RobotModel','./models/Sensor','./models/SensorGroup','./models/SensorModel','./models/SensorValueType','./models/Servo','./models/ServoConfig','./models/ServoGroup','./models/ServoInterface','./models/ServoModel'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar angularResource = require('angularResource');\r\n\tvar Robot = require('./models/Robot');\r\n\tvar RobotInterface = require('./models/RobotInterface');\r\n\tvar RobotModel = require('./models/RobotModel');\r\n\tvar Sensor = require('./models/Sensor');\r\n\tvar SensorGroup = require('./models/SensorGroup');\r\n\tvar SensorModel = require('./models/SensorModel');\r\n\tvar SensorValueType = require('./models/SensorValueType');\r\n\tvar Servo = require('./models/Servo');\r\n\tvar ServoConfig = require('./models/ServoConfig');\r\n\tvar ServoGroup = require('./models/ServoGroup');\r\n\tvar ServoInterface = require('./models/ServoInterface');\r\n\tvar ServoModel = require('./models/ServoModel');\r\n\r\n\tvar moduleName = 'kasparGUI.robots.models';\r\n\tvar dependancies = [\r\n\t\t\t\t\t\tangularResource,\r\n\t\t\t\t\t\t];\r\n\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.factory('Robot', Robot)\r\n\t\t.factory('RobotInterface', RobotInterface)\r\n\t\t.factory('RobotModel', RobotModel)\r\n\t\t.factory('Sensor', Sensor)\r\n\t\t.factory('SensorGroup', SensorGroup)\r\n\t\t.factory('SensorModel', SensorModel)\r\n\t\t.factory('Servo', Servo)\r\n\t\t.factory('ServoConfig', ServoConfig)\r\n\t\t.factory('ServoGroup', ServoGroup)\r\n\t\t.factory('SensorValueType', SensorValueType)\r\n\t\t.factory('ServoInterface', ServoInterface)\r\n\t\t.factory('ServoModel', ServoModel);\r\n\r\n\treturn moduleName;\r\n});\r\n\n","\ndefine('text!robots/directives/robotEditor.tpl.html',[],function () { return '<div>\\r\\n\\t<form\\r\\n\\t\\tnovalidate\\r\\n\\t\\tname=\"robotForm\"\\r\\n\\t\\tmodel=\"robot\">\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.name\\']}}</span>\\r\\n\\t\\t\\t<input\\r\\n\\t\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\t\\tname=\"name\"\\r\\n\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\tplaceholder=\"Name\"\\r\\n\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\tng-model=\"robot.name\"\\r\\n\\t\\t\\t\\trequired>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.model\\']}}</span>\\r\\n\\t\\t\\t<select\\r\\n\\t\\t\\t\\tng-disabled=\"robotForm.model.$pristine && robotForm.model.$valid\"\\r\\n\\t\\t\\t\\tname=\"model\"\\r\\n\\t\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\t\\tng-model=\"robot.model_id\"\\r\\n\\t\\t\\t\\tng-options=\"model.id as model.name for model in models | orderBy:\\'model.name\\'\"\\r\\n\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\trequired>\\r\\n\\t\\t\\t\\t<option value=\"\">{{language[\\'robot.model.select.prompt\\']}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.version\\']}}</span>\\r\\n\\t\\t\\t<input\\r\\n\\t\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\t\\tname=\"version\"\\r\\n\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\tplaceholder=\"Version\"\\r\\n\\t\\t\\t\\tng-disabled=\"robotForm.model.$pristine && robotForm.model.$valid\"\\r\\n\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\tng-model=\"robot.version\"\\r\\n\\t\\t\\t\\trequired>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n\\t<hr />\\r\\n\\t<tabset ng-show=\"robot != null\"> <tab heading=\"Servo Details\">\\r\\n\\t<view-robot robot=\"robot\"></view-robot> </tab> <tab\\r\\n\\t\\theading=\"Servo Calibration\"> <calibrate-robot robot=\"robot\"></calibrate-robot>\\r\\n\\t</tab></tabset>\\r\\n</div>';});\n\n","'use strict';\r\n\r\ndefine('robots/directives/RobotEditor',['require','angular','robots/models','text!./robotEditor.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('robots/models');\r\n\tvar template = require('text!./robotEditor.tpl.html');\r\n\r\n\tvar RobotEditor = function(RobotModel, language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\trobot : \"=\",\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t\t$scope.models = RobotModel.query();\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ 'RobotModel', 'language', RobotEditor ];\r\n});\r\n\n","\ndefine('text!robots/directives/batteryLevel.tpl.html',[],function () { return '<div class=\"battery\">\\r\\n\\t<div class=\"icon col-lg-1\">&nbsp;</div>\\r\\n\\t<progressbar\\r\\n\\t\\tmax=\"max\"\\r\\n\\t\\tvalue=\"battery.value\"\\r\\n\\t\\ttype=\"{{type}}\"\\r\\n\\t\\tclass=\"meter col-lg-11\">{{battery.value || \\'Unknown\\'}}</progressbar>\\r\\n</div>';});\n\n","'use strict';\r\n\r\ndefine('robots/directives/BatteryLevel',['require','angular','robots/services/interfaceServices','text!./batteryLevel.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('robots/services/interfaceServices');\r\n\tvar template = require('text!./batteryLevel.tpl.html');\r\n\r\n\tvar BatteryLevel = function(robotInterface, $timeout) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.battery = robotInterface.getSensor('BATTERY');\r\n\t\t\t\t$scope.$watch('battery.value', function(value) {\r\n\t\t\t\t\tif (value === null || value < 0) {\r\n\t\t\t\t\t\t$scope.type = 'unknown';\r\n\t\t\t\t\t} else if (value > 25) {\r\n\t\t\t\t\t\t$scope.type = 'success';\r\n\t\t\t\t\t} else if (value > 10) {\r\n\t\t\t\t\t\t$scope.type = 'warning';\r\n\t\t\t\t\t} else if (value >= 0) {\r\n\t\t\t\t\t\t$scope.type = 'danger';\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ 'robotInterface', '$timeout', BatteryLevel ];\r\n});\r\n\n","\ndefine('text!robots/directives/robotInterface.tpl.html',[],function () { return '\\r\\n<div class=\"col-lg-12\">\\r\\n\\t<div class=\"row\">\\r\\n\\t\\t<div class=\"col-lg-12 input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">\\r\\n\\t\\t\\t\\t<span class=\"hidden-xs\">{{language[\\'robot.interface.robot\\']}}</span>\\r\\n\\t\\t\\t\\t<span class=\"visible-xs\">{{language[\\'robot.interface.robot.short\\']}}</span>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t\\t<select\\r\\n\\t\\t\\t\\tng-disabled=\"connected || configured || !robots\"\\r\\n\\t\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\t\\tng-model=\"robot\"\\r\\n\\t\\t\\t\\tng-options=\"(item.name + \\' (\\' + item.version + \\')\\' ) for item in robots | orderBy:\\'name\\'\">\\r\\n\\t\\t\\t\\t<option value=\"\">{{language[\\'robot.interface.robot.select.prompt\\']}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t\\t<span class=\"input-group-btn\" ng-if=\"showConnect\">\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-disabled=\"!robot\"\\r\\n\\t\\t\\t\\t\\tng-hide=\"connected\"\\r\\n\\t\\t\\t\\t\\tng-click=\"setConnected(true)\">{{language[\\'robot.interface.connect\\']}}</button>\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-show=\"connected\"\\r\\n\\t\\t\\t\\t\\tng-click=\"setConnected(false)\">{{language[\\'robot.interface.disconnect\\']}}</button>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<!-- \\t\\t<div class=\"btn-group row\"> -->\\r\\n\\t<!-- \\t\\t\\t<button class=\"btn btn-default\" ng-disabled=\"true\" type=\"button\" ng-click=\"advancedPositioning(selected)\">Advanced Positioning</button> -->\\r\\n\\t<!-- \\t\\t\\t<button class=\"btn btn-default\" ng-disabled=\"true\" type=\"button\" ng-click=\"setPositioning(selected, true)\" ng-hide=\"selected.poseEnable\">Enable Positioning</button> -->\\r\\n\\t<!-- \\t\\t\\t<button class=\"btn btn-default\" ng-disabled=\"true\" type=\"button\" ng-click=\"setPositioning(selected, false)\" ng-show=\"selected.poseEnabled\">Disable Positioning</button> -->\\r\\n\\t<!-- \\t\\t\\t<button class=\"btn btn-default\" ng-disabled=\"true\" type=\"button\" ng-click=\"getCurrentPose(jointPositionsRaw)\">Record Current Position</button> -->\\r\\n\\t<!-- \\t\\t</div> -->\\r\\n</div>\\r\\n';});\n\n","'use strict';\r\n\r\ndefine('robots/directives/RobotInterface',['require','angular','common/models','robots/models','robots/services/interfaceServices','text!./robotInterface.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('common/models');\r\n\trequire('robots/models');\r\n\trequire('robots/services/interfaceServices');\r\n\tvar template = require('text!./robotInterface.tpl.html');\r\n\r\n\tvar RobotInterface = function($q, Robot, robotInterface, Setting, language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\trobot : \"=\",\r\n\t\t\t\tshowConnect : \"=?\"\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t\tif ($scope.showConnect === undefined) {\r\n\t\t\t\t\t$scope.showConnect = false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar settings = Setting.query({\r\n\t\t\t\t\t'key' : 'robot'\r\n\t\t\t\t});\r\n\t\t\t\t$scope.robots = Robot.query();\r\n\r\n\t\t\t\t$q.all($scope.robots.$promise, settings.$promise).then(function() {\r\n\t\t\t\t\tif (settings.length > 0) {\r\n\t\t\t\t\t\tfor (var i = 0; i < $scope.robots.length; i++) {\r\n\t\t\t\t\t\t\tif ($scope.robots[i].name == settings[0].value) {\r\n\t\t\t\t\t\t\t\t$scope.robot = $scope.robots[i];\r\n\t\t\t\t\t\t\t\t$scope.configured = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$scope.$watch('robot', function(robot) {\r\n\t\t\t\t\trobotInterface.setRobot(robot);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$scope.setConnected = function(state) {\r\n\t\t\t\t\tif(state) {\r\n\t\t\t\t\t\trobotInterface.setConnected(state);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trobotInterface.setConnected(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t$scope.connected = state;\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ '$q', 'Robot', 'robotInterface', 'Setting', 'language', RobotInterface ];\r\n});\r\n\n","\ndefine('text!robots/directives/calibrateRobot.tpl.html',[],function () { return '<div>Calibrate individual joints or entire robot</div>\\r\\n<div>\\r\\n\\t<strong>TODO</strong>\\r\\n</div>';});\n\n","'use strict';\r\n\r\ndefine('robots/directives/CalibrateRobot',['require','angular','robots/models','text!./calibrateRobot.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('robots/models');\r\n\tvar template = require('text!./calibrateRobot.tpl.html');\r\n\r\n\tvar ViewRobot = function(ServoConfig, ServoGroup, Servo, language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\trobot : \"=\",\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t\t$scope.$watch('robot', function(robot) {\r\n\t\t\t\t\tif(robot !== undefined) {\r\n\t\t\t\t\t\t$scope.servos = robot.servos;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ 'ServoConfig', 'ServoGroup', 'Servo', 'language', ViewRobot ];\r\n});\r\n\n","\ndefine('text!robots/directives/viewRobot.tpl.html',[],function () { return '\\r\\n<accordion close-others=\"true\"> <accordion-group\\r\\n\\tis-open=\"configsOpen\"> <accordion-heading>{{language[\\'robot.view.servoModel.label\\']}}<i\\r\\n\\tclass=\"pull-right glyphicon\"\\r\\n\\tng-class=\"{\\'glyphicon-chevron-down\\': configsOpen, \\'glyphicon-chevron-right\\': !configsOpen}\"></i>\\r\\n</accordion-heading>\\r\\n<div\\r\\n\\tng-repeat=\"item in servoConfigs\"\\r\\n\\tclass=\"col-lg-6 col-sm-12\">\\r\\n\\t<strong>{{item.model.name}}</strong>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servoModel.id\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Not Set\"\\r\\n\\t\\t\\tng-model=\"item.model.id\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servoModel.port\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Not Set\"\\r\\n\\t\\t\\tng-model=\"item.port\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servoModel.portSpeed\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Not Set\"\\r\\n\\t\\t\\tng-model=\"item.portSpeed\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servoModel.position.scale\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Not Set\"\\r\\n\\t\\t\\tng-model=\"item.model.positionScale\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servoModel.position.offset\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Not Set\"\\r\\n\\t\\t\\tng-model=\"item.model.positionOffset\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servoModel.position.min\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Not Set\"\\r\\n\\t\\t\\tng-model=\"item.model.minPosition\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servoModel.position.max\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Not Set\"\\r\\n\\t\\t\\tng-model=\"item.model.maxPosition\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servoModel.position.default\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Not Set\"\\r\\n\\t\\t\\tng-model=\"item.model.defaultPosition\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servoModel.speed.scale\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Not Set\"\\r\\n\\t\\t\\tng-model=\"item.model.speedScale\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servoModel.speed.min\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Not Set\"\\r\\n\\t\\t\\tng-model=\"item.model.minSpeed\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servoModel.speed.max\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Not Set\"\\r\\n\\t\\t\\tng-model=\"item.model.maxSpeed\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servoModel.speed.default\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Not Set\"\\r\\n\\t\\t\\tng-model=\"item.model.defaultSpeed\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servoModel.poseable\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Not Set\"\\r\\n\\t\\t\\tng-model=\"item.model.poseable\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span\\r\\n\\t\\tclass=\"input-group\"\\r\\n\\t\\tng-if=\"item.extraData\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servoModel.otherSettings\\']}}</span>\\r\\n\\t\\t<span class=\"list-group form-control\">\\r\\n\\t\\t\\t<span\\r\\n\\t\\t\\t\\tclass=\"list-group-item\"\\r\\n\\t\\t\\t\\tng-repeat=\"(key, value) in item.extraData\">\\r\\n\\t\\t\\t\\t<span class=\"input-group\">\\r\\n\\t\\t\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{key}}</span>\\r\\n\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\t\\t\\tplaceholder=\"Not Set\"\\r\\n\\t\\t\\t\\t\\t\\tng-model=\"value\"\\r\\n\\t\\t\\t\\t\\t\\tng-disabled=\"true\">\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</span>\\r\\n\\t</span>\\r\\n</div>\\r\\n</accordion-group> <accordion-group is-open=\"groupsOpen\"> <accordion-heading>{{language[\\'robot.view.servoGroups.label\\']}} <i\\r\\n\\tclass=\"pull-right glyphicon\"\\r\\n\\tng-class=\"{\\'glyphicon-chevron-down\\': groupsOpen, \\'glyphicon-chevron-right\\': !groupsOpen}\"></i>\\r\\n</accordion-heading>\\r\\n<div\\r\\n\\tng-repeat=\"item in servoGroups\"\\r\\n\\tclass=\"col-lg-4 col-md-6 col-sm-12\">\\r\\n\\t<strong>{{item.name}}</strong>\\r\\n\\t<span\\r\\n\\t\\tclass=\"input-group\"\\r\\n\\t\\tng-repeat=\"servo in item.servos\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servoGroups.servoName\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Not Set\"\\r\\n\\t\\t\\tng-model=\"servo.jointName\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n</div>\\r\\n</accordion-group> <accordion-group is-open=\"servosOpen\"> <accordion-heading>{{language[\\'robot.view.servos.label\\']}}\\r\\n<i\\r\\n\\tclass=\"pull-right glyphicon\"\\r\\n\\tng-class=\"{\\'glyphicon-chevron-down\\': servosOpen, \\'glyphicon-chevron-right\\': !servosOpen}\"></i>\\r\\n</accordion-heading>\\r\\n<div\\r\\n\\tng-repeat=\"item in servos\"\\r\\n\\tclass=\"col-lg-4 col-md-6 col-sm-12\">\\r\\n\\t<strong>{{item.jointName}}</strong>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servos.model.id\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Not Set\"\\r\\n\\t\\t\\tng-model=\"item.model_id\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servos.position.min\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Inherit\"\\r\\n\\t\\t\\tng-model=\"item.minPosition\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servos.position.max\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Inherit\"\\r\\n\\t\\t\\tng-model=\"item.maxPosition\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servos.position.default\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Inherit\"\\r\\n\\t\\t\\tng-model=\"item.defaultPosition\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servos.speed.min\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Inherit\"\\r\\n\\t\\t\\tng-model=\"item.minSpeed\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servos.speed.max\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Inherit\"\\r\\n\\t\\t\\tng-model=\"item.maxSpeed\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servos.speed.default\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Inherit\"\\r\\n\\t\\t\\tng-model=\"item.defaultSpeed\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servos.poseable\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Inherit\"\\r\\n\\t\\t\\tng-model=\"item.poseable\"\\r\\n\\t\\t\\tng-disabled=\"true\">\\r\\n\\t</span>\\r\\n\\t<span\\r\\n\\t\\tclass=\"input-group\"\\r\\n\\t\\tng-if=\"item.extraData\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.view.servos.otherSettings\\']}}</span>\\r\\n\\t\\t<span class=\"list-group form-control\">\\r\\n\\t\\t\\t<span\\r\\n\\t\\t\\t\\tclass=\"list-group-item\"\\r\\n\\t\\t\\t\\tng-repeat=\"(key, value) in item.extraData\">\\r\\n\\t\\t\\t\\t<span class=\"input-group\">\\r\\n\\t\\t\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{key}}</span>\\r\\n\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\t\\t\\tplaceholder=\"Not Set\"\\r\\n\\t\\t\\t\\t\\t\\tng-model=\"value\"\\r\\n\\t\\t\\t\\t\\t\\tng-disabled=\"true\">\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</span>\\r\\n\\t</span>\\r\\n</div>\\r\\n</accordion-group> </accordion>\\r\\n';});\n\n","'use strict';\r\n\r\ndefine('robots/directives/ViewRobot',['require','angular','robots/models','text!./viewRobot.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('robots/models');\r\n\tvar template = require('text!./viewRobot.tpl.html');\r\n\r\n\tvar ViewRobot = function(ServoConfig, ServoGroup, Servo, language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\trobot : \"=\",\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t\t$scope.groupsOpen = false;\r\n\t\t\t\t$scope.configsOpen = false;\r\n\t\t\t\t$scope.servosOpen = false;\r\n\t\t\t\t$scope.$watch('robot', function(robot) {\r\n\t\t\t\t\tif (robot !== undefined) {\r\n\t\t\t\t\t\t$scope.servoConfigs = ServoConfig.query({\r\n\t\t\t\t\t\t\trobot_id : robot.id\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t$scope.servoGroups = ServoGroup.query({\r\n\t\t\t\t\t\t\trobot_id : robot.id\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t$scope.servos = robot.servos;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ 'ServoConfig', 'ServoGroup', 'Servo', 'language', ViewRobot ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('robots/directives',['require','angular','common/i18n/languageServices','common/services/displayServices','robots/services/interfaceServices','common/filters','common/models','robots/models','./directives/RobotEditor','./directives/BatteryLevel','./directives/RobotInterface','./directives/CalibrateRobot','./directives/ViewRobot'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar languageServices = require('common/i18n/languageServices');\r\n\tvar displayServices = require('common/services/displayServices');\r\n\tvar interfaceServices = require('robots/services/interfaceServices');\r\n\tvar filters = require('common/filters');\r\n\tvar commonModels = require('common/models');\r\n\tvar robotModels = require('robots/models');\r\n\tvar RobotEditor = require('./directives/RobotEditor');\r\n\tvar BatteryLevel = require('./directives/BatteryLevel');\r\n\tvar RobotInterface = require('./directives/RobotInterface');\r\n\tvar CalibrateRobot = require('./directives/CalibrateRobot');\r\n\tvar ViewRobot = require('./directives/ViewRobot');\r\n\r\n\tvar moduleName = 'kasparGUI.robots.directives';\r\n\tvar dependancies = [\r\n\t\t\t\t\t\tdisplayServices,\r\n\t\t\t\t\t\tlanguageServices,\r\n\t\t\t\t\t\tinterfaceServices,\r\n\t\t\t\t\t\tfilters,\r\n\t\t\t\t\t\tcommonModels,\r\n\t\t\t\t\t\trobotModels,\r\n\t\t\t\t\t\t];\r\n\t\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.directive('robotEditor', RobotEditor)\r\n\t\t.directive('batteryLevel', BatteryLevel)\r\n\t\t.directive('robotInterface', RobotInterface)\r\n\t\t.directive('calibrateRobot', CalibrateRobot)\r\n\t\t.directive('viewRobot', ViewRobot);\r\n\r\n\treturn moduleName;\r\n});\t\t\r\n\n","\ndefine('text!actions/directives/actionEditor.tpl.html',[],function () { return '<poseaction-editor\\r\\n\\tng-if=\"action.type==\\'PoseAction\\'\"\\r\\n\\taction=\"action\"\\r\\n\\tactions=\"actions\"></poseaction-editor>\\r\\n<groupaction-editor\\r\\n\\tng-if=\"action.type==\\'GroupAction\\'\"\\r\\n\\taction=\"action\"\\r\\n\\tactions=\"actions\"></groupaction-editor>\\r\\n<soundaction-editor\\r\\n\\tng-if=\"action.type==\\'SoundAction\\'\"\\r\\n\\taction=\"action\"\\r\\n\\tactions=\"actions\"></soundaction-editor>\\r\\n<sequenceaction-editor\\r\\n\\tng-if=\"action.type==\\'SequenceAction\\'\"\\r\\n\\taction=\"action\"\\r\\n\\tactions=\"actions\"></sequenceaction-editor>\\r\\n';});\n\n","'use strict';\r\n\r\ndefine('actions/directives/ActionEditor',['require','angular','text!./actionEditor.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar template = require('text!./actionEditor.tpl.html');\r\n\r\n\tvar ActionEditor = function($compile, language) {\r\n\t\treturn {\r\n\t\t\ttemplate: template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\taction : \"=\",\r\n\t\t\t\tactions : \"=\",\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ '$compile', 'language', ActionEditor ];\r\n});\r\n\n","\ndefine('text!actions/directives/advancedPoseEditor.tpl.html',[],function () { return '\\r\\n<div\\r\\n\\tclass=\"panel panel-default\"\\r\\n\\tng-repeat=\"group in groups | orderBy:\\'name\\'\">\\r\\n\\t<div class=\"panel-heading\">\\r\\n\\t\\t<h4 class=\"panel-title\">{{group.name}}</h4>\\r\\n\\t</div>\\r\\n\\t<div class=\"panel-body\">\\r\\n\\t\\t<div\\r\\n\\t\\t\\tclass=\"col-lg-4 col-md-6 col-sm-12 col-xs-12 jointEditor\"\\r\\n\\t\\t\\tng-repeat=\"jointPosition in group.rows | orderBy:\\'jointName\\'\">\\r\\n\\t\\t\\t<joint-editor\\r\\n\\t\\t\\t\\tjoint-names=\"joints\"\\r\\n\\t\\t\\t\\tjoint-position=\"jointPosition\"\\r\\n\\t\\t\\t\\tservo-position=\"getPosition(jointPosition.jointName, servoPositions)\"\\r\\n\\t\\t\\t\\tservo=\"getServo(jointPosition.jointName, robot.servos)\"></joint-editor>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>';});\n\n","'use strict';\r\n\r\ndefine('actions/directives/AdvancedPoseEditor',['require','angular','text!./advancedPoseEditor.tpl.html','actions/models','common/filters','robots/directives'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar template = require('text!./advancedPoseEditor.tpl.html');\r\n\trequire('actions/models');\r\n\trequire('common/filters');\r\n\trequire('robots/directives');\r\n\r\n\tvar AdvancedPoseEditor = function(JointPosition, language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\tpose : \"=\",\r\n\t\t\t\trobot : \"=\",\r\n\t\t\t\tconnected : \"=\",\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t\t$scope.$watch('pose.jointPositions', function(jointPositions) {\r\n\t\t\t\t\t$scope.getGroups(jointPositions, $scope.robot);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$scope.$watch('robot.servos', function(servos) {\r\n\t\t\t\t\tservos = servos || [];\r\n\t\t\t\t\t$scope.joints = [];\r\n\t\t\t\t\tfor (var i = 0; i < servos.length; i++) {\r\n\t\t\t\t\t\t$scope.joints.push(servos[i].jointName);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($scope.pose !== undefined) {\r\n\t\t\t\t\t\t$scope.getGroups($scope.pose.jointPositions, $scope.robot);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar processGroup = function(servoGroup, positions) {\r\n\t\t\t\t\tvar joints = [];\r\n\t\t\t\t\tvar ids = [];\r\n\t\t\t\t\tfor ( var servoIndex in servoGroup.servos) {\r\n\t\t\t\t\t\tvar servo = servoGroup.servos[servoIndex];\r\n\t\t\t\t\t\tvar posId = null;\r\n\t\t\t\t\t\tfor ( var posIndex in positions) {\r\n\t\t\t\t\t\t\tif (positions[posIndex].jointName == servo.jointName) {\r\n\t\t\t\t\t\t\t\tposId = positions[posIndex].id;\r\n\t\t\t\t\t\t\t\tjoints.push(positions[posIndex]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (posId === null) {\r\n\t\t\t\t\t\t\tjoints.push(new JointPosition({\r\n\t\t\t\t\t\t\t\t'position' : servo.defaultPosition,\r\n\t\t\t\t\t\t\t\t'speed' : servo.defaultSpeed,\r\n\t\t\t\t\t\t\t\t'jointName' : servo.jointName,\r\n\t\t\t\t\t\t\t\t'pose_id' : $scope.pose.id\r\n\t\t\t\t\t\t\t}));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tids.push(posId);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar result = null;\r\n\t\t\t\t\tif (joints.length > 0) {\r\n\t\t\t\t\t\tresult = [ ids, {\r\n\t\t\t\t\t\t\t'name' : servoGroup.name,\r\n\t\t\t\t\t\t\t'rows' : joints\r\n\t\t\t\t\t\t} ];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.getGroups = function(jointPositions, robot) {\r\n\t\t\t\t\tjointPositions = jointPositions || [];\r\n\t\t\t\t\tvar posCopy = [];\r\n\t\t\t\t\tfor ( var index in jointPositions) {\r\n\t\t\t\t\t\tposCopy.push(jointPositions[index]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar groups = [];\r\n\t\t\t\t\tif (robot === undefined) {\r\n\t\t\t\t\t\t$scope.groups = [ {\r\n\t\t\t\t\t\t\t'name' : 'Pose Joints',\r\n\t\t\t\t\t\t\t'rows' : posCopy\r\n\t\t\t\t\t\t} ];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trobot.getProperty('servoGroups').$promise.then(function(servoGroups) {\r\n\t\t\t\t\t\t\tvar res = [];\r\n\t\t\t\t\t\t\tfor (var servoGroupIndex = 0; servoGroupIndex < servoGroups.length; servoGroupIndex++) {\r\n\t\t\t\t\t\t\t\tres.push(processGroup(servoGroups[servoGroupIndex], posCopy));\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvar groups = [];\r\n\t\t\t\t\t\t\tfor (var resultIndex = 0; resultIndex < res.length; resultIndex++) {\r\n\t\t\t\t\t\t\t\tif (res[resultIndex] !== null) {\r\n\t\t\t\t\t\t\t\t\tgroups.push(res[resultIndex][1]);\r\n\t\t\t\t\t\t\t\t\tfor (var idIdx = 0; idIdx < res[resultIndex][0].length; idIdx++) {\r\n\t\t\t\t\t\t\t\t\t\tfor (var posIdx = 0; posIdx < posCopy.length; posIdx++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (posCopy[posIdx].id == res[resultIndex][0][idIdx]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvar elm = posCopy.splice(posIdx, 1);\r\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (posCopy.length > 0) {\r\n\t\t\t\t\t\t\t\tgroups.push({\r\n\t\t\t\t\t\t\t\t\t'name' : 'No Group',\r\n\t\t\t\t\t\t\t\t\t'rows' : posCopy\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t$scope.groups = groups;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.getServo = function(jointName, servos) {\r\n\t\t\t\t\tif (servos !== undefined) {\r\n\t\t\t\t\t\tvar servo = null;\r\n\t\t\t\t\t\tfor (var i = 0; i < servos.length; i++) {\r\n\t\t\t\t\t\t\tif (servos[i].jointName == jointName) {\r\n\t\t\t\t\t\t\t\tservo = servos[i];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn servo;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.getPosition = function(jointName, positions) {\r\n\t\t\t\t\tif (positions !== undefined) {\r\n\t\t\t\t\t\tvar position = null;\r\n\t\t\t\t\t\tfor (var i = 0; i < positions.length; i++) {\r\n\t\t\t\t\t\t\tif (positions[i].jointName == jointName) {\r\n\t\t\t\t\t\t\t\tposition = positions[i];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn position;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ 'JointPosition', 'language', AdvancedPoseEditor ];\r\n});\r\n\n","\ndefine('text!actions/directives/basicPoseEditor.tpl.html',[],function () { return '\\r\\n<div>\\r\\n\\t<strong>TODO</strong>\\r\\n\\t<span>Allow for editing the a pose by manually adjusting the\\r\\n\\t\\trobots joints</span>\\r\\n</div>\\r\\n';});\n\n","'use strict';\r\n\r\ndefine('actions/directives/BasicPoseEditor',['require','angular','text!./basicPoseEditor.tpl.html','actions/models','common/filters','robots/directives'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar template = require('text!./basicPoseEditor.tpl.html');\r\n\trequire('actions/models');\r\n\trequire('common/filters');\r\n\trequire('robots/directives');\r\n\r\n\tvar BasicPoseEditor = function(JointPosition, language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\tpose : \"=\",\r\n\t\t\t\trobot : \"=\",\r\n\t\t\t\tconnected : \"=\",\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ 'JointPosition', 'language', BasicPoseEditor ];\r\n});\r\n\n","\ndefine('text!actions/directives/groupEditor.tpl.html',[],function () { return '<form\\r\\n\\tname=\"groupForm\"\\r\\n\\tmodel=\"group\">\\r\\n\\t<div class=\"col-lg-12 input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'action.group.name\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Group Name\"\\r\\n\\t\\t\\trequired\\r\\n\\t\\t\\tsaveable\\r\\n\\t\\t\\tng-model=\"group.name\">\\r\\n\\t</div>\\r\\n\\t<div class=\"row\">\\r\\n\\t\\t<div class=\"col-lg-5\">\\r\\n\\t\\t\\t<div class=\"panel panel-default\">\\r\\n\\t\\t\\t\\t<div class=\"panel-heading\">{{language[\\'action.group.actions.list.label\\']}}</div>\\r\\n\\t\\t\\t\\t<div class=\"input-group fill\">\\r\\n\\t\\t\\t\\t\\t<select\\r\\n\\t\\t\\t\\t\\t\\tclass=\"selectpicker fill form-control\"\\r\\n\\t\\t\\t\\t\\t\\tmultiple\\r\\n\\t\\t\\t\\t\\t\\tng-multiple=\"true\"\\r\\n\\t\\t\\t\\t\\t\\tng-model=\"toAdd\"\\r\\n\\t\\t\\t\\t\\t\\tng-options=\"action.name for action in actions | except:group | except:group.actions | orderBy:\\'name\\'\">\\r\\n\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"col-lg-2\">\\r\\n\\t\\t\\t<div class=\"row\">&nbsp;</div>\\r\\n\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default col-lg-12\"\\r\\n\\t\\t\\t\\t\\tng-disabled=\"!toAdd || toAdd.length == 0\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-click=\"addActions(toAdd);toAdd=[]\">{{language[\\'action.group.actions.add\\']}} &rarr;</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default col-lg-12\"\\r\\n\\t\\t\\t\\t\\tng-disabled=\"!toRemove || toRemove.length == 0\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-click=\"removeActions(toRemove);toRemove=[]\">&larr;\\r\\n\\t\\t\\t\\t\\t{{language[\\'action.group.actions.remove\\']}}</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"col-lg-5\">\\r\\n\\t\\t\\t<div class=\"panel panel-default\">\\r\\n\\t\\t\\t\\t<div class=\"panel-heading\">{{language[\\'action.group.actions.title\\']}}</div>\\r\\n\\t\\t\\t\\t<div class=\"input-group fill\">\\r\\n\\t\\t\\t\\t\\t<select\\r\\n\\t\\t\\t\\t\\t\\tclass=\"selectpicker fill form-control\"\\r\\n\\t\\t\\t\\t\\t\\tmultiple\\r\\n\\t\\t\\t\\t\\t\\tng-multiple=\"true\"\\r\\n\\t\\t\\t\\t\\t\\tng-model=\"toRemove\"\\r\\n\\t\\t\\t\\t\\t\\tng-options=\"action.name for action in group.actions | orderBy:\\'name\\'\">\\r\\n\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</form>\\r\\n<div class=\"row\">\\r\\n\\t<div class=\"col-lg-12\">\\r\\n\\t\\t<small>{{language[\\'action.group.help.short\\']}}</small>\\r\\n\\t</div>\\r\\n</div>';});\n\n","'use strict';\r\n\r\ndefine('actions/directives/GroupEditor',['require','angular','text!./groupEditor.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar template = require('text!./groupEditor.tpl.html');\r\n\r\n\tvar GroupEditor = function(language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\tgroup : \"=action\",\r\n\t\t\t\tactions : \"=\",\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t\t$scope.addActions = function(actions) {\r\n\t\t\t\t\tif ($scope.group.actions === undefined) {\r\n\t\t\t\t\t\t$scope.group.actions = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (var i = 0; i < actions.length; i++) {\r\n\t\t\t\t\t\t$scope.group.actions.push(actions[i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$scope.group.$save();\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.removeActions = function(actions) {\r\n\t\t\t\t\tfor (var i = 0; i < actions.length; i++) {\r\n\t\t\t\t\t\t$scope.group.actions.splice($scope.group.actions.indexOf(actions[i]), 1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$scope.group.$save();\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n\treturn ['language', GroupEditor];\r\n});\r\n\n","\ndefine('text!actions/directives/poseEditor.tpl.html',[],function () { return '<div class=\"row\">\\r\\n\\t<form\\r\\n\\t\\tname=\"poseForm\"\\r\\n\\t\\tmodel=\"pose\">\\r\\n\\t\\t<div class=\"col-lg-12\">\\r\\n\\t\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'action.pose.name\\']}}</span>\\r\\n\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\t\\tplaceholder=\"Pose Name\"\\r\\n\\t\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\t\\tname=\"name\"\\r\\n\\t\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\t\\tng-model=\"pose.name\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t\\t<span class=\"input-group-addon inputLabel\">\\r\\n\\t\\t\\t\\t\\t<span class=\"hidden-xs\">{{language[\\'action.pose.speedModifier\\']}}</span>\\r\\n\\t\\t\\t\\t\\t<span class=\"visible-xs\">{{language[\\'action.pose.speedModifier.short\\']}}</span>\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t<div ui-slider\\r\\n\\t\\t\\t\\t\\tname=\"speedModifier\"\\r\\n\\t\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\t\\tmin=\"1\"\\r\\n\\t\\t\\t\\t\\tmax=\"300\"\\r\\n\\t\\t\\t\\t\\tng-model=\"pose.speedModifier\"\\r\\n\\t\\t\\t\\t\\tstep=\"1\"> </div>\\r\\n\\t\\t\\t\\t<span class=\"input-group-addon\">{{pose.speedModifier}}%</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t\\t<span class=\"input-group-addon inputLabel\">\\r\\n\\t\\t\\t\\t\\t<span class=\"hidden-xs\">{{language[\\'action.pose.minLength\\']}}</span>\\r\\n\\t\\t\\t\\t\\t<span class=\"visible-xs\">{{language[\\'action.pose.minLength.short\\']}}</span>\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\ttype=\"number\"\\r\\n\\t\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\t\\tmin=\"0\"\\r\\n\\t\\t\\t\\t\\tplaceholder=\"Minimum Pose Length\"\\r\\n\\t\\t\\t\\t\\tname=\"length\"\\r\\n\\t\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\t\\tinteger\\r\\n\\t\\t\\t\\t\\tng-model=\"pose.minLength\">\\r\\n\\t\\t\\t\\t<span class=\"input-group-addon\">{{language[\\'action.pose.minLength.units\\']}}</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n</div>\\r\\n<hr />\\r\\n<robot-interface\\r\\n\\trobot=\"robot\"\\r\\n\\tshow-connect=\"true\"></robot-interface>\\r\\n<hr />\\r\\n<accordion close-others=\"true\"> <accordion-group\\r\\n\\tis-open=\"basicopen\"> <accordion-heading>\\r\\nBasic <i\\r\\n\\tclass=\"pull-right glyphicon\"\\r\\n\\tng-class=\"{\\'glyphicon-chevron-down\\': basicopen, \\'glyphicon-chevron-right\\': !basicopen}\"></i>\\r\\n</accordion-heading> <basic-pose-editor\\r\\n\\tpose=\"pose\"\\r\\n\\trobot=\"robot\"></basic-pose-editor></accordion-group> <accordion-group\\r\\n\\tis-open=\"advancedopen\"> <accordion-heading>\\r\\nDetailed <i\\r\\n\\tclass=\"pull-right glyphicon\"\\r\\n\\tng-class=\"{\\'glyphicon-chevron-down\\': advancedopen, \\'glyphicon-chevron-right\\': !advancedopen}\"></i>\\r\\n</accordion-heading> <advanced-pose-editor\\r\\n\\tpose=\"pose\"\\r\\n\\tconnected=\"connected\"\\r\\n\\trobot=\"robot\"></advanced-pose-editor> </accordion-group> </accordion>';});\n\n","'use strict';\r\n\r\ndefine('actions/directives/PoseEditor',['require','angular','text!./poseEditor.tpl.html','actions/models','robots/directives'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar template = require('text!./poseEditor.tpl.html');\r\n\trequire('actions/models');\r\n\trequire('robots/directives');\r\n\r\n\tvar PoseEditor = function(JointPosition, RobotInterface, language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\tpose : \"=action\",\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t\t$scope.advancedopen = true;\r\n\t\t\t\t$scope.basicopen = false;\r\n\t\t\t\t\r\n\t\t\t\t$scope.$watch('pose', function(pose) {\r\n\t\t\t\t\tif(pose !== undefined && pose.speedModifier === undefined) {\r\n\t\t\t\t\t\tpose.speedModifier = 100;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ 'JointPosition', 'RobotInterface', 'language', PoseEditor ];\r\n});\r\n\n","\ndefine('text!actions/directives/jointEditor.tpl.html',[],function () { return '<div class=\"row\">\\r\\n\\t<div class=\"col-lg-12\">\\r\\n\\t\\t<ng-form\\r\\n\\t\\t\\tname=\"jointForm\"\\r\\n\\t\\t\\tng-class=\"{\\'has-info\\': !jointPosition.id && jointForm.$pristine}\"\\r\\n\\t\\t\\tmodel=\"jointPosition\">\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">\\r\\n\\t\\t\\t\\t<span class=\"hidden-xs\">{{language[\\'action.pose.joint.name\\']}}</span>\\r\\n\\t\\t\\t\\t<span class=\"visible-xs\">{{language[\\'action.pose.joint.name.short\\']}}</span>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t\\t<select\\r\\n\\t\\t\\t\\tname=\"jointname\"\\r\\n\\t\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\t\\tng-options=\"name for name in (jointNames || [jointPosition.jointName]) | orderBy:\\'toString()\\'\"\\r\\n\\t\\t\\t\\tng-model=\"jointPosition.jointName\"\\r\\n\\t\\t\\t\\tng-disabled=\"jointForm.jointname.$pristine && jointForm.jointname.$valid\"\\r\\n\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\tnotEmpty\\r\\n\\t\\t\\t\\tsaveable>\\r\\n\\t\\t\\t\\t<option value=\"\">{{language[\\'action.pose.joint.select.prompt\\']}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t\\t<span\\r\\n\\t\\t\\t\\tclass=\"input-group-btn\"\\r\\n\\t\\t\\t\\tng-if=\"jointPosition.id\">\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-click=\"removeJoint()\">{{language[\\'action.pose.joint.delete\\']}}</button>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div\\r\\n\\t\\t\\tclass=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'action.pose.joint.position\\']}}</span>\\r\\n\\t\\t\\t<div ui-slider\\r\\n\\t\\t\\t\\tname=\"jointposition\"\\r\\n\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\tmin=\"{{coalesce(servo.minPosition, servoModel.minPosition, -180)}}\"\\r\\n\\t\\t\\t\\tmax=\"{{coalesce(servo.maxPosition, servoModel.maxPosition, 180)}}\"\\r\\n\\t\\t\\t\\tng-model=\"jointPosition.position\"\\r\\n\\t\\t\\t\\tstep=\"1\"> </div>\\r\\n\\t\\t\\t<span class=\"input-group-addon\">{{jointPosition.position}}&deg;</span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div\\r\\n\\t\\t\\tclass=\"input-group noselect\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'action.pose.joint.speed\\']}}</span>\\r\\n\\t\\t\\t<div ui-slider\\r\\n\\t\\t\\t\\tname=\"jointspeed\"\\r\\n\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\tng-model=\"jointPosition.speed\"\\r\\n\\t\\t\\t\\tmin=\"{{coalesce(servo.minSpeed, servoModel.minSpeed, 1)}}\"\\r\\n\\t\\t\\t\\tmax=\"{{coalesce(servo.maxSpeed, servoModel.maxSpeed, 300)}}\"\\r\\n\\t\\t\\t\\tstep=\"1\"> </div>\\r\\n\\t\\t\\t<span class=\"input-group-addon\">{{jointPosition.speed}}%</span>\\r\\n\\t\\t</div>\\r\\n\\t\\t</ng-form>\\r\\n\\t</div>\\r\\n</div>\\r\\n';});\n\n","'use strict';\r\n\r\ndefine('actions/directives/JointEditor',['require','angular','robots/services/interfaceServices','text!./jointEditor.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('robots/services/interfaceServices');\r\n\tvar template = require('text!./jointEditor.tpl.html');\r\n\r\n\tvar JointEditor = function(robotInterface, JointPosition, ServoModel, language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\tjointNames : \"=\",\r\n\t\t\t\tjointPosition : \"=\",\r\n\t\t\t\tservo : \"=\",\r\n\t\t\t\tservoPositions : \"=\",\r\n\t\t\t\tconnected : \"=\",\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\r\n\t\t\t\tvar checkPositions = function() {\r\n\t\t\t\t\tif($scope.jointPosition !== undefined) {\r\n\t\t\t\t\t\tif($scope.jointPosition.position === undefined || $scope.jointPosition.position === null) {\r\n\t\t\t\t\t\t\tif($scope.servo !== undefined && $scope.servo !== null &&\r\n\t\t\t\t\t\t\t\t$scope.servo.defaultPosition !== undefined && $scope.servo.defaultPosition !== null) {\r\n\t\t\t\t\t\t\t\t$scope.jointPosition.position = $scope.servo.defaultPosition;\t\r\n\t\t\t\t\t\t\t} else if($scope.servoModel !== undefined && $scope.servoModel !== null && \r\n\t\t\t\t\t\t\t\t\t$scope.servoModel.defaultPosition !== undefined && $scope.servoModel.defaultPosition !== null) {\r\n\t\t\t\t\t\t\t\t$scope.jointPosition.position = $scope.servoModel.defaultPosition;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$scope.jointPosition.position = 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif($scope.jointPosition.speed === undefined || $scope.jointPosition.speed === null) {\r\n\t\t\t\t\t\t\tif($scope.servo !== undefined && $scope.servo !== null &&\r\n\t\t\t\t\t\t\t\t$scope.servo.defaultSpeed !== undefined && $scope.servo.defaultSpeed !== null) {\r\n\t\t\t\t\t\t\t\t$scope.jointPosition.speed = $scope.servo.defaultSpeed;\t\r\n\t\t\t\t\t\t\t} else if($scope.servoModel !== undefined && $scope.servoModel !== null && \r\n\t\t\t\t\t\t\t\t\t$scope.servoModel.defaultPosition !== undefined && $scope.servoModel.defaultSpeed !== null) {\r\n\t\t\t\t\t\t\t\t$scope.jointPosition.speed = $scope.servoModel.defaultSpeed;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$scope.jointPosition.speed = 100;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\t$scope.$watch('servo', checkPositions);\r\n\t\t\t\t$scope.$watch('jointPosition', checkPositions);\r\n\t\t\t\t\r\n\t\t\t\t$scope.$watch('servo.jointName', function(jointName) {\r\n\t\t\t\t\t$scope.servoInt = robotInterface.getServo(jointName);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$scope.removeJoint = function() {\r\n\t\t\t\t\tvar promise;\r\n\t\t\t\t\tif ($scope.jointPosition.$delete === undefined) {\r\n\t\t\t\t\t\tpromise = JointPosition.delete({id: $scope.jointPosition.id});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpromise = $scope.jointPosition.$delete();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpromise.then(function() {\r\n\t\t\t\t\t\tdelete $scope.jointPosition.id;\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.$watch('servo.model_id', function(modelId) {\r\n\t\t\t\t\tif (modelId !== undefined) {\r\n\t\t\t\t\t\t$scope.servoModel = ServoModel.get({\r\n\t\t\t\t\t\t\tid : modelId,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$scope.$watch('connected', function(value) {\r\n\t\t\t\t\tif (value) {\r\n\t\t\t\t\t\t$scope.writeToServo();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$scope.coalesce = function() {\r\n\t\t\t\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\t\t\t\tif (arguments[i] !== undefined && arguments[i] !== null) { return arguments[i]; }\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.writeToServo = function() {\r\n\t\t\t\t\tif ($scope.jointPosition !== undefined && $scope.servoInt !== undefined) {\r\n\t\t\t\t\t\t$scope.servoInt.speed = $scope.jointPosition.speed;\r\n\t\t\t\t\t\t$scope.servoInt.position = $scope.jointPosition.position;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.$watch('jointPosition.position', function() {\r\n\t\t\t\t\t$scope.writeToServo();\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ 'robotInterface', 'JointPosition', 'ServoModel', 'language', JointEditor ];\r\n});\r\n\n","\ndefine('text!actions/directives/sequenceEditor.tpl.html',[],function () { return '<form\\r\\n\\tname=\"sequenceForm\"\\r\\n\\tmodel=\"sequence\">\\r\\n\\t<div class=\"col-lg-12 input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'action.sequence.name\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Sequence Name\"\\r\\n\\t\\t\\trequired\\r\\n\\t\\t\\tsaveable\\r\\n\\t\\t\\tname=\"name\"\\r\\n\\t\\t\\tng-model=\"sequence.name\">\\r\\n\\t</div>\\r\\n\\t<div class=\"row\">\\r\\n\\t\\t<div class=\"col-lg-5\">\\r\\n\\t\\t\\t<div class=\"panel panel-default\">\\r\\n\\t\\t\\t\\t<div class=\"panel-heading\">{{language[\\'action.sequence.actions.list.label\\']}}</div>\\r\\n\\t\\t\\t\\t<div class=\"input-group fill\">\\r\\n\\t\\t\\t\\t\\t<select\\r\\n\\t\\t\\t\\t\\t\\tclass=\"selectpicker fill form-control\"\\r\\n\\t\\t\\t\\t\\t\\tmultiple\\r\\n\\t\\t\\t\\t\\t\\tng-multiple=\"true\"\\r\\n\\t\\t\\t\\t\\t\\tng-model=\"toAdd\"\\r\\n\\t\\t\\t\\t\\t\\tng-options=\"action.name for action in actions | except:sequence | orderBy:\\'name\\'\">\\r\\n\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"col-lg-2\">\\r\\n\\t\\t\\t<div class=\"row\">&nbsp;</div>\\r\\n\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default col-lg-12\"\\r\\n\\t\\t\\t\\t\\tng-disabled=\"!toAdd || toAdd.length == 0\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-click=\"addActions(toAdd);toAdd=[]\">{{language[\\'action.sequence.actions.add\\']}} &rarr;</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default col-lg-12\"\\r\\n\\t\\t\\t\\t\\tng-disabled=\"!toRemove || toRemove.length == 0\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-click=\"removeActions(toRemove);toRemove=[]\">&larr;\\r\\n\\t\\t\\t\\t\\t{{language[\\'action.sequence.actions.remove\\']}}</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default col-lg-12\"\\r\\n\\t\\t\\t\\t\\tng-disabled=\"!toRemove || toRemove.length == 0\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-click=\"moveActions(toRemove, -1);toRemove=[]\">&uarr;\\r\\n\\t\\t\\t\\t\\t{{language[\\'action.sequence.actions.moveUp\\']}}</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"row\">\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default col-lg-12\"\\r\\n\\t\\t\\t\\t\\tng-disabled=\"!toRemove || toRemove.length == 0\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-click=\"moveActions(toRemove, 1);toRemove=[]\">&darr;\\r\\n\\t\\t\\t\\t\\t{{language[\\'action.sequence.actions.moveDown\\']}}</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"col-lg-5\">\\r\\n\\t\\t\\t<div class=\"panel panel-default\">\\r\\n\\t\\t\\t\\t<div class=\"panel-heading\">{{action.sequence.actions.title}}</div>\\r\\n\\t\\t\\t\\t<div class=\"input-group fill\">\\r\\n\\t\\t\\t\\t\\t<select\\r\\n\\t\\t\\t\\t\\t\\tclass=\"selectpicker fill form-control\"\\r\\n\\t\\t\\t\\t\\t\\tmultiple\\r\\n\\t\\t\\t\\t\\t\\tng-multiple=\"true\"\\r\\n\\t\\t\\t\\t\\t\\tng-model=\"toRemove\"\\r\\n\\t\\t\\t\\t\\t\\tng-options=\"((action.order + 1) + \\'. \\' + getName(action.action_id)) for action in sequence.ordered_actions | orderBy:\\'order\\'\">\\r\\n\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</form>\\r\\n<div class=\"row\">\\r\\n\\t<div class=\"col-lg-12\">\\r\\n\\t\\t<small>{{language[\\'action.sequence.help.short\\']}}</small>\\r\\n\\t</div>\\r\\n</div>\\r\\n';});\n\n","'use strict';\r\n\r\ndefine('actions/directives/SequenceEditor',['require','angular','text!./sequenceEditor.tpl.html','actions/models'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar template = require('text!./sequenceEditor.tpl.html');\r\n\trequire('actions/models');\r\n\r\n\tvar SequenceEditor = function(SequenceOrder, language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\tsequence : \"=action\",\r\n\t\t\t\tactions : \"=\",\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t\t$scope.getName = function(actionId) {\r\n\t\t\t\t\tif ($scope.actions !== undefined) {\r\n\t\t\t\t\t\tfor (var i = 0; i < $scope.actions.length; i++) {\r\n\t\t\t\t\t\t\tif ($scope.actions[i].id == actionId) { return $scope.actions[i].name; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn \"Unknown action\";\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.moveActions = function(oactions, change) {\r\n\t\t\t\t\t// Change == 1\r\n\t\t\t\t\t// oactions.length = 3\r\n\t\t\t\t\t// ordered_actions.lenght = 7\r\n\t\t\t\t\t// for action in oactions:\r\n\t\t\t\t\t// order += change\r\n\t\t\t\t\t// if exists(ordered_actions.order)\r\n\t\t\t\t\t// ordered_actions.order -= change\r\n\t\t\t\t\tif (oactions !== undefined && oactions.length > 0) {\r\n\t\t\t\t\t\tfor (var i = 0; i < oactions.length; i++) {\r\n\t\t\t\t\t\t\toactions[i].order += change;\r\n\t\t\t\t\t\t\tif (oactions[i].order < 0) {\r\n\t\t\t\t\t\t\t\toactions[i].order = 0;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (var j = 0; j < $scope.sequence.ordered_actions.length; j++) {\r\n\t\t\t\t\t\t\t\tvar test = $scope.sequence.ordered_actions[j];\r\n\t\t\t\t\t\t\t\tif (test != oactions[i] && test.order == oactions[i].order) {\r\n\t\t\t\t\t\t\t\t\ttest.order -= change;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$scope.saveAll();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.saveAll = function() {\r\n\t\t\t\t\t// Collapse gaps and fix duplicates\r\n\t\t\t\t\tfor (var i = 0; i < $scope.sequence.ordered_actions.length;) {\r\n\t\t\t\t\t\tvar left = $scope.sequence.ordered_actions[i];\r\n\t\t\t\t\t\tvar next = false;\r\n\r\n\t\t\t\t\t\tfor (var j = 0; j < $scope.sequence.ordered_actions.length; j++) {\r\n\t\t\t\t\t\t\tvar right = $scope.sequence.ordered_actions[j];\r\n\t\t\t\t\t\t\tif (left != right) {\r\n\t\t\t\t\t\t\t\tif (left.order == right.order) {\r\n\t\t\t\t\t\t\t\t\tright.order += 1;\r\n\t\t\t\t\t\t\t\t} else if (left.order - 1 == right.order) {\r\n\t\t\t\t\t\t\t\t\tnext = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (next || left.order === 0) {\r\n\t\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tleft.order -= 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$scope.sequence.$save();\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.addActions = function(actions) {\r\n\t\t\t\t\tif ($scope.sequence.ordered_actions === undefined) {\r\n\t\t\t\t\t\t$scope.sequence.ordered_actions = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar successFunc = function(result) {\r\n\t\t\t\t\t\t$scope.sequence.ordered_actions.push(result);\r\n\t\t\t\t\t\t$scope.saveAll();\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (var i = 0; i < actions.length; i++) {\r\n\t\t\t\t\t\tvar oa = new SequenceOrder();\r\n\t\t\t\t\t\toa.order = $scope.sequence.ordered_actions.length;\r\n\t\t\t\t\t\toa.sequence_id = $scope.sequence.id;\r\n\t\t\t\t\t\toa.action_id = actions[i].id;\r\n\t\t\t\t\t\toa.$save().then(successFunc);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.removeActions = function(oactions) {\r\n\t\t\t\t\tfor (var i = 0; i < oactions.length; i++) {\r\n\t\t\t\t\t\tvar action = $scope.sequence.ordered_actions.splice($scope.sequence.ordered_actions.indexOf(oactions[i]), 1);\r\n\t\t\t\t\t\taction.$delete();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$scope.saveAll();\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ 'SequenceOrder', 'language', SequenceEditor ];\r\n});\r\n\n","\ndefine('text!actions/directives/soundEditor.tpl.html',[],function () { return '<div>\\r\\n\\t<form\\r\\n\\t\\tname=\"soundForm\"\\r\\n\\t\\tmodel=\"sound\">\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'action.sound.name\\']}}</span>\\r\\n\\t\\t\\t<input\\r\\n\\t\\t\\t\\tname=\"name\"\\r\\n\\t\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\tplaceholder=\"Sound Name\"\\r\\n\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\tng-model=\"sound.name\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'action.sound.selectFile\\']}}</span>\\r\\n\\t\\t\\t<input\\r\\n\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\ttype=\"file\"\\r\\n\\t\\t\\t\\tonchange=\"angular.element(this).scope().setFiles(this)\" />\\r\\n\\t\\t\\t<span class=\"input-group-btn\">\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-click=\"uploadFile(file)\">{{language[\\'action.sound.upload\\']}}</button>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n\\t<div>\\r\\n\\t\\t<strong>TODO:</strong>\\r\\n\\t\\t<ul>\\r\\n\\t\\t\\t<li>Show if current sound set</li>\\r\\n\\t\\t\\t<li>Play current sound</li>\\r\\n\\t\\t</ul>\\r\\n\\t</div>\\r\\n</div>';});\n\n","'use strict';\r\n\r\ndefine('actions/directives/SoundEditor',['require','angular','text!./soundEditor.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar template = require('text!./soundEditor.tpl.html');\r\n\r\n\tvar SoundEditor = function(language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\tsound : \"=action\",\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n\treturn ['language', SoundEditor];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('actions/directives',['require','angular','angularSlider','common/services/displayServices','robots/services/interfaceServices','robots/directives','common/filters','actions/models','./directives/ActionEditor','./directives/AdvancedPoseEditor','./directives/BasicPoseEditor','./directives/GroupEditor','./directives/PoseEditor','./directives/JointEditor','./directives/SequenceEditor','./directives/SoundEditor'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar angularSlider = require('angularSlider');\r\n\tvar displayServices = require('common/services/displayServices');\r\n\tvar interfaceServices = require('robots/services/interfaceServices');\r\n\tvar robotDirectives = require('robots/directives');\r\n\tvar filters = require('common/filters');\r\n\tvar actionModels = require('actions/models');\r\n\tvar ActionEditor = require('./directives/ActionEditor');\r\n\tvar AdvancedPoseEditor = require('./directives/AdvancedPoseEditor');\r\n\tvar BasicPoseEditor = require('./directives/BasicPoseEditor');\r\n\tvar GroupEditor = require('./directives/GroupEditor');\r\n\tvar PoseEditor = require('./directives/PoseEditor');\r\n\tvar JointEditor = require('./directives/JointEditor');\r\n\tvar SequenceEditor = require('./directives/SequenceEditor');\r\n\tvar SoundEditor = require('./directives/SoundEditor');\r\n\r\n\tvar moduleName = 'kasparGUI.actions.directives';\r\n\tvar dependancies = [ \r\n\t\t\t\t\t\tdisplayServices,\r\n\t\t\t\t\t\tangularSlider,\r\n\t\t\t\t\t\tinterfaceServices,\r\n\t\t\t\t\t\tfilters, \r\n\t\t\t\t\t\tactionModels,\r\n\t\t\t\t\t\trobotDirectives,\r\n\t\t\t\t\t\t];\r\n\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.directive('actionEditor', ActionEditor)\r\n\t\t.directive('advancedPoseEditor', AdvancedPoseEditor)\r\n\t\t.directive('basicPoseEditor', BasicPoseEditor)\r\n\t\t.directive('groupactionEditor', GroupEditor)\r\n\t\t.directive('poseactionEditor', PoseEditor)\r\n\t\t.directive('sequenceactionEditor', SequenceEditor)\r\n\t\t.directive('soundactionEditor', SoundEditor)\r\n\t\t.directive('jointEditor', JointEditor);\r\n\r\n\treturn moduleName;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('actions/ActionController',['require','angular','actions/models','actions/directives'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('actions/models');\r\n\trequire('actions/directives');\r\n\r\n\tvar ActionController = function($scope, $http, Action, ActionType, language) {\r\n\t\t$scope.language = language.getText();\r\n\t\t$scope.actions = Action.query();\r\n\t\t$scope.types = ActionType.query();\r\n\r\n\t\t$scope.$watch('action', function(action) {\r\n\t\t\tif (action !== undefined) {\r\n\t\t\t\tvar abstractAction = $scope.action;\r\n\t\t\t\tvar concreteAction = $scope.action.getConcreteClassInstance();\r\n\t\t\t\tconcreteAction.$promise.then(function() {\r\n\t\t\t\t\t$scope.actions[$scope.actions.indexOf(abstractAction)] = concreteAction;\r\n\t\t\t\t\t$scope.action = concreteAction;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$scope.setFiles = function(element) {\r\n\t\t\t$scope.$apply(function($scope) {\r\n\t\t\t\t$scope.files = element.files;\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.newAction = function() {\r\n\t\t\t$scope.action = new Action({\r\n\t\t\t\ttype : 'Action'\r\n\t\t\t});\r\n\t\t\t$scope.actions.push($scope.action);\r\n\t\t};\r\n\r\n\t\t$scope.deleteAction = function(action) {\r\n\t\t\t$scope.actions.splice($scope.actions.indexOf(action), 1);\r\n\t\t\t$scope.action = $scope.actions[0];\r\n\t\t};\r\n\r\n\t\t$scope.uploadSound = function(file) {\r\n\t\t\tvar fd = new FormData();\r\n\t\t\tfd.append(\"data\", file);\r\n\t\t\tvar obj = $http.post('/api/SoundAction/upload', fd, {\r\n\t\t\t\theader : {\r\n\t\t\t\t\t'Content-Type' : undefined\r\n\t\t\t\t},\r\n\t\t\t\ttransformRequest : angular.identity\r\n\t\t\t}).success(function(data, status, headers, config) {\r\n\t\t\t\t$scope.fileId = data;\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tvar errorFunc = function(status) {\r\n\t\t\tconsole.log(\"Error sending file:\" + status);\r\n\t\t};\r\n\r\n\t\tvar successFunc = function(data, status, headers, config) {\r\n\t\t\t$scope.newobjs.push(data);\r\n\t\t};\r\n\r\n\t\t$scope.importFiles = function(files) {\r\n\r\n\t\t\tfor (var i = 0; i < files.length; i++) {\r\n\t\t\t\tvar fd = new FormData();\r\n\t\t\t\tfd.append(\"data\", files[i]);\r\n\r\n\t\t\t\tvar obj = $http.post('/api/Action/Import', fd, {\r\n\t\t\t\t\theaders : {\r\n\t\t\t\t\t\t'Content-Type' : undefined\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttransformRequest : angular.identity\r\n\t\t\t\t}).success(successFunc).error(errorFunc);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ '$scope', '$http', 'Action', 'ActionType', 'language', ActionController ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('actions/ActionTestController',['require','angular','actions/models'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('actions/models');\r\n\r\n\tvar ActionTestController = function($scope, $http, $q, $timeout, Action, ActionTest, language) {\r\n\t\t$scope.language = language.getText();\r\n\t\t$scope.running = false;\r\n\t\t$scope.actions = Action.query();\r\n\t\t$scope.output = '';\r\n\r\n\t\t$scope.startAction = function(action) {\r\n\t\t\t$scope.output += 'Start action ' + action.name + '\\n';\r\n\t\t\tActionTest.save({\r\n\t\t\t\tid : $scope.action.id\r\n\t\t\t}).$promise.then(getOutput());\r\n\t\t};\r\n\r\n\t\tvar getOutput = function() {\r\n\t\t\t$scope.output += 'TODO: live update of running actions\\n';\r\n\t\t};\r\n\r\n\t\t$scope.stopAction = function(action) {\r\n\t\t\t$scope.output += 'TODO: Stop action ' + action.name + '\\n';\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ '$scope', '$http', '$q', '$timeout', 'Action', 'ActionTest', 'language', ActionTestController ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('actions/controllers',['require','angular','common/i18n/languageServices','actions/models','actions/directives','./ActionController','./ActionTestController'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar languageServices = require('common/i18n/languageServices');\r\n\tvar actionModels = require('actions/models');\r\n\tvar actionDirectives = require('actions/directives');\r\n\tvar ActionController = require('./ActionController');\r\n\tvar ActionTestController = require('./ActionTestController');\r\n\r\n\tvar moduleName = 'kasparGUI.actions';\r\n\tvar dependancies = [ \r\n\t\t\t\t\t\tactionModels, \r\n\t\t\t\t\t\tactionDirectives,\r\n\t\t\t\t\t\tlanguageServices\r\n\t\t\t\t\t\t];\r\n\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.controller('actionController', ActionController)\r\n\t\t.controller('actionTestController', ActionTestController);\r\n\r\n\treturn moduleName;\r\n});\r\n\n","\ndefine('text!actions/index.tpl.html',[],function () { return '<ui-view />';});\n\n","\ndefine('text!actions/actionEdit.tpl.html',[],function () { return '<strong>TODO</strong>\\r\\n<ul>\\r\\n\\t<li><strong> Feedback on Saving </strong>\\r\\n\\t\\t<ul>\\r\\n\\t\\t\\t<li>Sound</li>\\r\\n\\t\\t\\t<li>Group</li>\\r\\n\\t\\t\\t<li>Sequence</li>\\r\\n\\t\\t</ul></li>\\r\\n</ul>\\r\\n<div\\r\\n\\tng-cloak\\r\\n\\tid=\"actionsList\">\\r\\n\\t<div class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'action.label\\']}}</span>\\r\\n\\t\\t<select\\r\\n\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\tng-model=\"action\"\\r\\n\\t\\t\\tng-disabled=\"actions.length == 0\"\\r\\n\\t\\t\\tng-options=\"action.name group by action.type for action in actions | orderBy:\\'name\\'\">\\r\\n\\t\\t\\t<option value=\"\">{{language[\\'action.select.prompt\\']}}</option>\\r\\n\\t\\t</select>\\r\\n\\t\\t<span class=\"input-group-btn\">\\r\\n\\t\\t\\t<button\\r\\n\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\tng-click=\"newAction()\">{{language[\\'action.new\\']}}</button>\\r\\n\\t\\t\\t<button\\r\\n\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\tng-click=\"deleteAction(action)\">{{language[\\'action.delete\\']}}</button>\\r\\n\\t\\t</span>\\r\\n\\t</div>\\r\\n\\t<hr />\\r\\n\\t<div ng-if=\"action\">\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'action.type.label\\']}}</span>\\r\\n\\t\\t\\t<select\\r\\n\\t\\t\\t\\tng-disabled=\"action.id\"\\r\\n\\t\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\t\\tng-model=\"action.type\"\\r\\n\\t\\t\\t\\tng-options=\"type.name as type.disp for type in types | orderBy:\\'type.disp\\'\">\\r\\n\\t\\t\\t\\t<option value=\"\">{{language[\\'action.type.select.prompt\\']}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t{{action.type}}\\r\\n\\t\\t<action-editor\\r\\n\\t\\t\\taction=\"action\"\\r\\n\\t\\t\\tactions=\"actions\"></action-editor>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!actions/actionImport.tpl.html',[],function () { return '<div>\\r\\n\\t<div class=\"btn-group\">\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'action.import.selectFiles\\']}}</span>\\r\\n\\t\\t\\t<input\\r\\n\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\ttype=\"file\"\\r\\n\\t\\t\\t\\tmultiple=\"multiple\"\\r\\n\\t\\t\\t\\tonchange=\"angular.element(this).scope().setFiles(this)\" />\\r\\n\\t\\t\\t<span class=\"input-group-btn\">\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-click=\"importFiles(files)\">{{language[\\'import.upload\\']}}</button>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div>\\r\\n\\t\\t<div ng-repeat=\"obj in newobjs\">{{obj}}</div>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!actions/actionTest.tpl.html',[],function () { return '<div>\\r\\n\\t<div class=\"input-group col-lg-12\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'action.label\\']}}</span>\\r\\n\\t\\t<select\\r\\n\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\tng-model=\"action\"\\r\\n\\t\\t\\tng-options=\"action.name group by action.type for action in actions | orderBy:\\'name\\'\"\\r\\n\\t\\t\\tng-disabled=\"actions.length == 0\">\\r\\n\\t\\t\\t<option value=\"\">{{language[\\'action.select.prompt\\']}}</option>\\r\\n\\t\\t</select>\\r\\n\\t\\t<span class=\"input-group-btn\">\\r\\n\\t\\t\\t<button\\r\\n\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\tng-if=\"!actionTest.active\"\\r\\n\\t\\t\\t\\tng-disabled=\"!action\"\\r\\n\\t\\t\\t\\tng-click=\"startAction(action)\">{{language[\\'action.test\\']}}</button>\\r\\n\\t\\t\\t<button\\r\\n\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\tng-if=\"actionTest.active\"\\r\\n\\t\\t\\t\\tng-disabled=\"!action\"\\r\\n\\t\\t\\t\\tng-click=\"stopAction(action)\">{{language[\\'action.stop\\']}}</button>\\r\\n\\t\\t</span>\\r\\n\\t</div>\\r\\n\\t<div class=\"col-lg-6\"></div>\\r\\n</div>\\r\\n<hr />\\r\\n<div\\r\\n\\tclass=\"logWindow\"\\r\\n\\tng-show=\"action != \\'\\'\">\\r\\n\\t<div class=\"col-lg-12 well maxHeight\">\\r\\n\\t\\t<pre class=\"scrollable maxHeight\">{{output}}</pre>\\r\\n\\t</div>\\r\\n</div>';});\n\n","'use strict';\r\n\r\ndefine('categories/action',['require','angular','angularUIRouter','actions/controllers','text!actions/index.tpl.html','text!actions/actionEdit.tpl.html','text!actions/actionImport.tpl.html','text!actions/actionTest.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar uiRouter = require('angularUIRouter');\r\n\tvar actionControllers = require('actions/controllers');\r\n\tvar defaultTemplate = require('text!actions/index.tpl.html');\r\n\tvar editTemplate = require('text!actions/actionEdit.tpl.html');\r\n\tvar importTemplate = require('text!actions/actionImport.tpl.html');\r\n\tvar testTemplate = require('text!actions/actionTest.tpl.html');\r\n\r\n\tvar moduleName = 'kasparGUI.menu.action';\r\n\tvar dependancies = [ uiRouter, actionControllers ];\r\n\r\n\tvar Routes = function($stateProvider, $urlRouterProvider) {\r\n\t\t$urlRouterProvider.otherwise(\"/\");\r\n\t\t$stateProvider.state('action', {\r\n\t\t\turl : '/action',\r\n\t\t\ttemplate : defaultTemplate,\r\n\t\t\tabstract : true,\r\n\t\t}).state('action.edit', {\r\n\t\t\turl : '{id:(?:/[0-9]{1,8})?}/edit',\r\n\t\t\ttemplate : editTemplate,\r\n\t\t\tcontroller : 'actionController',\r\n\t\t}).state('action.test', {\r\n\t\t\turl : '{id:(?:/[0-9]{1,8})?}/test',\r\n\t\t\ttemplate : testTemplate,\r\n\t\t\tcontroller : 'actionTestController',\r\n\t\t}).state('action.import', {\r\n\t\t\turl : '/import',\r\n\t\t\ttemplate : importTemplate,\r\n\t\t\tcontroller : 'actionController',\r\n\t\t});\r\n\t};\r\n\r\n\tvar module = angular.module(moduleName, dependancies);\r\n\tmodule.config([ '$stateProvider', '$urlRouterProvider', Routes ]);\r\n\treturn moduleName;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('users/models/CustomAction',['require'],function(require) {\r\n\tvar CustomAction = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('CustomAction');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', CustomAction ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('users/models/CustomTrigger',['require'],function(require) {\r\n\tvar CustomTrigger = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('CustomTrigger');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', CustomTrigger ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('users/models/User',['require'],function(require) {\r\n\tvar User = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('User');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', User ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('users/models/UserAction',['require'],function(require) {\r\n\tvar UserAction = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('UserAction');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', UserAction ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('users/models',['require','angular','angularResource','./models/CustomAction','./models/CustomTrigger','./models/User','./models/UserAction'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar angularResource = require('angularResource');\r\n\tvar CustomAction = require('./models/CustomAction');\r\n\tvar CustomTrigger = require('./models/CustomTrigger');\r\n\tvar User = require('./models/User');\r\n\tvar UserAction = require('./models/UserAction');\r\n\r\n\tvar moduleName = 'kasparGUI.users.models';\r\n\tvar dependancies = [ angularResource, ];\r\n\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.factory('CustomAction', CustomAction)\r\n\t\t.factory('CustomTrigger', CustomTrigger)\r\n\t\t.factory('User', User)\r\n\t\t.factory('UserAction', UserAction);\r\n\r\n\treturn moduleName;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('operators/models/Operator',['require'],function(require) {\r\n\tvar Operator = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('Operator');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', Operator ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('operators/models',['require','angular','angularResource','./models/Operator'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar angularResource = require('angularResource');\r\n\tvar Operator = require('./models/Operator');\r\n\r\n\tvar moduleName = 'kasparGUI.operators.models';\r\n\tvar dependancies = [\r\n\t\t\t\t\t\tangularResource,\r\n\t\t\t\t\t\t];\r\n\t\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.factory('Operator', Operator);\r\n\r\n\treturn moduleName;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('operators/OperatorController',['require','angular','users/models','operators/models'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('users/models');\r\n\trequire('operators/models');\r\n\r\n\tvar OperatorController = function($scope, Operator, User, language) {\r\n\t\t$scope.language = language.getText();\r\n\t\t$scope.operators = Operator.query(function(operators) {\r\n\t\t\t$scope.selectedOperator = operators[0];\r\n\t\t});\r\n\r\n\t\t$scope.usersSaved = false;\r\n\t\t$scope.users = User.query();\r\n\t\t$scope.$watch('operatorsForm.$pristine', function(value) {\r\n\t\t\tif (!value) {\r\n\t\t\t\t$scope.usersSaved = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$scope.saveOperator = function() {\r\n\t\t\tif ($scope.formCtrl.$valid) {\r\n\t\t\t\tif ($scope.selectedOperator.$fromServer) {\r\n\t\t\t\t\t$scope.selectedOperator.$save(function() {\r\n\t\t\t\t\t\t$scope.usersSaved = true;\r\n\t\t\t\t\t\t$scope.operatorsForm.$setPristine();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$scope.newOperator = function() {\r\n\t\t\tvar newOp = new Operator({\r\n\t\t\t\tfullname : '',\r\n\t\t\t\tname : '',\r\n\t\t\t\tusers : []\r\n\t\t\t});\r\n\t\t\t$scope.selectedOperator = newOp;\r\n\t\t\t$scope.operators.push(newOp);\r\n\t\t};\r\n\r\n\t\t$scope.deleteOperator = function(operator) {\r\n\t\t\toperator.$delete();\r\n\t\t\t$scope.operators.splice($scope.operators.indexOf(operator), 1);\r\n\t\t\t$scope.selectedOperator = $scope.operators[0];\r\n\t\t};\r\n\r\n\t\t$scope.toggleOperatorUser = function(operator, user) {\r\n\t\t\tif (operator === undefined || operator.users === undefined) { return; }\r\n\r\n\t\t\tvar found = false;\r\n\t\t\tfor (var i = 0; i < operator.users.length; i++) {\r\n\t\t\t\tif (operator.users[i].id == user.id) {\r\n\t\t\t\t\toperator.users.splice(i, 1);\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(!found) {\r\n\t\t\t\toperator.users.push(user);\r\n\t\t\t}\r\n\r\n\t\t\t$scope.saveOperator();\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ '$scope', 'Operator', 'User', 'language', OperatorController ];\r\n\r\n});\r\n\n","'use strict';\r\n\r\ndefine('operators/controllers',['require','angular','common/i18n/languageServices','users/models','operators/models','./OperatorController'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar languageServices = require('common/i18n/languageServices');\r\n\tvar userModels = require('users/models');\r\n\tvar operatorModels = require('operators/models');\r\n\tvar OperatorController = require('./OperatorController');\r\n\t\r\n\tvar moduleName = 'kasparGUI.operators.controllers';\r\n\tvar dependancies = [ \r\n\t\t\t\t\t\tuserModels,\r\n\t\t\t\t\t\tlanguageServices,\r\n\t\t\t\t\t\toperatorModels,\r\n\t\t\t\t\t\t];\r\n\t\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.controller('operatorController', OperatorController);\r\n\r\n\treturn moduleName;\r\n});\t\r\n\n","\ndefine('text!operators/index.tpl.html',[],function () { return '<div>\\r\\n\\t<div id=\"operatorsList\">\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'operator.label\\']}}</span>\\r\\n\\t\\t\\t<select\\r\\n\\t\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\t\\tng-model=\"selectedOperator\"\\r\\n\\t\\t\\t\\tng-options=\"operator.fullname for operator in operators | orderBy:\\'fullname\\'\">\\r\\n\\t\\t\\t\\t<option value=\"\">{{language[\\'operator.select.prompt\\']}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t\\t<span class=\"input-group-btn\">\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-click=\"newOperator()\">{{language[\\'operator.new\\']}}</button>\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-click=\"deleteOperator(selectedOperator)\">{{language[\\'operator.delete\\']}}</button>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<form\\r\\n\\t\\tng-show=\"selectedOperator\"\\r\\n\\t\\tname=\"operatorsForm\"\\r\\n\\t\\tmodel=\"selectedOperator\">\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'operator.name\\']}}</span>\\r\\n\\t\\t\\t<input\\r\\n\\t\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\tplaceholder=\"Full Name\"\\r\\n\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\tname=\"fullname\"\\r\\n\\t\\t\\t\\tng-model=\"selectedOperator.fullname\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'operator.users\\']}}</span>\\r\\n\\t\\t\\t<div\\r\\n\\t\\t\\t\\tclass=\"list-group form-control listForm\"\\r\\n\\t\\t\\t\\tng-blur=\"saveOperator()\"\\r\\n\\t\\t\\t\\tng-class=\"{ \\'has-success\\': usersSaved, \\'has-warning\\': operatorsForm.$dirty && !userSaved }\">\\r\\n\\t\\t\\t\\t<span\\r\\n\\t\\t\\t\\t\\tclass=\"list-group-item\"\\r\\n\\t\\t\\t\\t\\tng-repeat=\"user in users\">\\r\\n\\t\\t\\t\\t\\t<span class=\"input-group\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\"input-group-addon\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttype=\"checkbox\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tng-disabled=\"!selectedOperator\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tng-checked=\"(selectedOperator.users | filter:{id:user.id}:true).length == 1\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tng-click=\"toggleOperatorUser(selectedOperator, user)\">\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\t\\t\\t\\tng-click=\"toggleOperatorUser(selectedOperator, user)\"\\r\\n\\t\\t\\t\\t\\t\\t\\tvalue=\"{{user.fullname}}\"\\r\\n\\t\\t\\t\\t\\t\\t\\tng-disabled=\"true\">\\r\\n\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n</div>\\r\\n<div ui-view></div>';});\n\n","'use strict';\r\n\r\ndefine('triggers/models/ButtonHotkey',['require'],function(require) {\r\n\tvar ButtonHotkey = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('ButtonHotkey');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', ButtonHotkey ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('triggers/models/Trigger',['require'],function(require) {\r\n\tvar Trigger = function($rootScope, modelBuilder) {\r\n\t\tvar resource = modelBuilder.getModel('Trigger', {}, {\r\n\t\t\tcreate : {\r\n\t\t\t\tmethod : 'POST',\r\n\t\t\t\turl : ':type',\r\n\t\t\t\tparams : {\r\n\t\t\t\t\ttype : '@type'\r\n\t\t\t\t},\r\n\t\t\t\tisArray : false,\r\n\t\t\t},\r\n\t\t\tupdate : {\r\n\t\t\t\tmethod : 'PUT',\r\n\t\t\t\turl : ':type/:id',\r\n\t\t\t\tparams : {\r\n\t\t\t\t\ttype : '@type',\r\n\t\t\t\t\tid : '@id',\r\n\t\t\t\t},\r\n\t\t\t\tisArray : false,\r\n\t\t\t},\r\n\t\t});\r\n\t\treturn resource;\r\n\t};\r\n\r\n\treturn [ '$rootScope', 'modelBuilder', Trigger ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('triggers/models/ButtonTrigger',['require'],function(require) {\r\n\tvar ButtonTrigger = function($rootScope, modelBuilder) {\r\n\t\tvar resource = modelBuilder.getModel('ButtonTrigger');\r\n\r\n\t\treturn resource;\r\n\t};\r\n\r\n\treturn [ '$rootScope', 'modelBuilder', ButtonTrigger ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('triggers/models/TriggerType',['require'],function(require) {\r\n\tvar TriggerType = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('TriggerType');\r\n\t\t\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', TriggerType ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('triggers/models',['require','angular','angularResource','./models/ButtonHotkey','./models/Trigger','./models/ButtonTrigger','./models/TriggerType'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar angularResource = require('angularResource');\r\n\tvar ButtonHotkey = require('./models/ButtonHotkey');\r\n\tvar Trigger = require('./models/Trigger');\r\n\tvar ButtonTrigger = require('./models/ButtonTrigger');\r\n\tvar TriggerType = require('./models/TriggerType');\r\n\r\n\tvar moduleName = 'kasparGUI.triggers.models';\r\n\tvar dependancies = [\r\n\t\t\t\t\t\tangularResource\r\n\t\t\t\t\t];\r\n\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.factory('ButtonHotkey', ButtonHotkey)\r\n\t\t.factory('Trigger', Trigger)\r\n\t\t.factory('ButtonTrigger', ButtonTrigger)\r\n\t\t.factory('TriggerType', TriggerType);\r\n\r\n\treturn moduleName;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('users/UserController',['require','angular','actions/models','triggers/models','users/models'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('actions/models');\r\n\trequire('triggers/models');\r\n\trequire('users/models');\r\n\r\n\tvar UserController = function($scope, $filter, User, CustomAction, CustomTrigger, Action, Trigger, language) {\r\n\t\t$scope.language = language.getText();\r\n\t\t$scope.users = User.query();\r\n\t\t\r\n\t\t$scope.$watch('selectedUser', function(user) {\r\n\t\t\tif(user !== undefined && user.speedmodifier === undefined) {\r\n\t\t\t\tuser.speedmodifier = 100;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn [ '$scope', '$filter', 'User', 'CustomAction', 'CustomTrigger', 'Action', 'Trigger', 'language', UserController ];\r\n\r\n});\r\n\n","'use strict';\r\n\r\ndefine('users/controllers',['require','angular','common/i18n/languageServices','actions/models','triggers/models','users/models','./UserController'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar languageServices = require('common/i18n/languageServices');\r\n\tvar actionModels = require('actions/models');\r\n\tvar triggerModels = require('triggers/models');\r\n\tvar userModels = require('users/models');\r\n\tvar UserController = require('./UserController');\r\n\r\n\tvar moduleName = 'kasparGUI.users.controllers';\r\n\tvar dependancies = [\r\n\t\t\t\t\t\tactionModels, \r\n\t\t\t\t\t\tlanguageServices, \r\n\t\t\t\t\t\ttriggerModels, \r\n\t\t\t\t\t\tuserModels, \r\n\t\t\t\t\t];\r\n\r\n\tvar module = angular.module(moduleName, dependancies).controller('userController', UserController);\r\n\r\n\treturn moduleName;\r\n});\r\n\n","\ndefine('text!users/index.tpl.html',[],function () { return '<div>\\r\\n\\t<div id=\"userList\">\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'user.label\\']}}</span>\\r\\n\\t\\t\\t<select\\r\\n\\t\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\t\\tng-model=\"selectedUser\"\\r\\n\\t\\t\\t\\tng-options=\"user.fullname for user in users | orderBy:\\'fullname\\'\">\\r\\n\\t\\t\\t\\t<option value=\"\">{{language[\\'user.select.prompt\\']}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t\\t<span class=\"input-group-btn\">\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-click=\"newObj(User, users)\">{{language[\\'user.new\\']}}</button>\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-click=\"deleteObj(item, users)\">{{language[\\'user.delete\\']}}</button>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<form\\r\\n\\t\\tng-show=\"selectedUser\"\\r\\n\\t\\tname=\"userForm\"\\r\\n\\t\\tmodel=\"selectedUser\">\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'user.name\\']}}</span>\\r\\n\\t\\t\\t<input\\r\\n\\t\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\tplaceholder=\"Full Name\"\\r\\n\\t\\t\\t\\tname=\"fullname\"\\r\\n\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\tng-model=\"selectedUser.fullname\"\\r\\n\\t\\t\\t\\tsaveable>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'user.custom.action.label\\']}}</span>\\r\\n\\t\\t\\t<select\\r\\n\\t\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\t\\tng-model=\"selectedAction\"\\r\\n\\t\\t\\t\\tng-options=\"action.name for action in selectedUser.actions | orderBy:\\'name\\'\">\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t\\t<span class=\"input-group-btn\">\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-disabled=\"true\"\\r\\n\\t\\t\\t\\t\\tng-click=\"newAction()\">{{language[\\'user.custom.action.new\\']}}</button>\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-disabled=\"true\"\\r\\n\\t\\t\\t\\t\\tng-click=\"deleteAction(selectedAction)\">{{language[\\'user.custom.action.delete\\']}}</button>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'user.custom.trigger.label\\']}}</span>\\r\\n\\t\\t\\t<select\\r\\n\\t\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\t\\tng-model=\"selectedTrigger\"\\r\\n\\t\\t\\t\\tng-options=\"trigger.name for trigger in selectedUser.triggers | orderBy:\\'name\\'\">\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t\\t<span class=\"input-group-btn\">\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-click=\"newTrigger()\"\\r\\n\\t\\t\\t\\t\\tng-disabled=\"true\">{{language[\\'user.custom.trigger.new\\']}}</button>\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-disabled=\"true\"\\r\\n\\t\\t\\t\\t\\tng-click=\"deleteTrigger(selectedTrigger)\">{{language[\\'user.custom.trigger.delete\\']}}</button>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'user.speedModifier\\']}}</span>\\r\\n\\t\\t\\t<div ui-slider\\r\\n\\t\\t\\t\\tname=\"speed\"\\r\\n\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\tmin=\"1\"\\r\\n\\t\\t\\t\\tmax=\"300\"\\r\\n\\t\\t\\t\\tng-disabled=\"true\"\\r\\n\\t\\t\\t\\tng-model=\"selectedUser.speedmodifier\"\\r\\n\\t\\t\\t\\tstep=\"1\"> </div>\\r\\n\\t\\t\\t<span class=\"input-group-addon\">{{selectedUser.speedmodifier}}%</span>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n</div>\\r\\n<div ui-view></div>';});\n\n","'use strict';\r\n\r\ndefine('robots/RobotController',['require','angular','robots/models'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('robots/models');\r\n\r\n\tvar RobotController = function($scope, Robot, language) {\r\n\t\t$scope.language = language.getText();\r\n\t\t$scope.robots = Robot.query();\r\n\r\n\t\t$scope.connected = false;\r\n\r\n\t\t$scope.connect = function(robot) {\r\n\t\t\t$scope.connected = true;\r\n\t\t};\r\n\r\n\t\t$scope.disconnect = function(robot) {\r\n\t\t\t$scope.connected = false;\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ '$scope', 'Robot', 'language', RobotController ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('robots/controllers',['require','angular','common/i18n/languageServices','robots/models','./RobotController'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar languageServices = require('common/i18n/languageServices');\r\n\tvar robotModels = require('robots/models');\r\n\tvar RobotController = require('./RobotController');\r\n\t\r\n\tvar moduleName = 'kasparGUI.robots.controllers';\r\n\tvar dependancies = [ \r\n\t\t\t\t\t\trobotModels, \r\n\t\t\t\t\t\tlanguageServices,\r\n\t\t\t\t\t\t];\r\n\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.controller('robotController', RobotController);\r\n\r\n\treturn moduleName;\r\n});\t\r\n\n","\ndefine('text!robots/index.tpl.html',[],function () { return '<div\\r\\n\\tng-cloak>\\r\\n\\t<div class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'robot.label\\']}}</span>\\r\\n\\t\\t<select\\r\\n\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\tng-model=\"selected\"\\r\\n\\t\\t\\tng-options=\"(item.name + \\' (\\' + item.model.name + \\': \\' + item.version + \\')\\' ) for item in robots | orderBy:\\'name\\'\">\\r\\n\\t\\t\\t<option value=\"\">{{language[\\'robot.select.prompt\\']}}</option>\\r\\n\\t\\t</select>\\r\\n\\t\\t<span class=\"input-group-btn\">\\r\\n\\t\\t\\t<button\\r\\n\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\tng-disabled=\"true\"\\r\\n\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\tng-click=\"newObj()\">{{language[\\'robot.new\\']}}</button>\\r\\n\\t\\t\\t<button\\r\\n\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\tng-disabled=\"true\"\\r\\n\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\tng-click=\"deleteObj(selected)\">{{language[\\'robot.delete\\']}}</button>\\r\\n\\t\\t</span>\\r\\n\\t</div>\\r\\n\\t<hr />\\r\\n\\t<robot-editor robot=\"selected\" ng-if=\"selected\"></robot-editor>\\r\\n</div>';});\n\n","'use strict';\r\n\r\ndefine('common/CommonController',['require','angular'],function(require) {\r\n\tvar angular = require('angular');\r\n\r\n\tvar CommonController = function($scope, $rootScope) {\r\n\t\t$scope.version = '3.0 Alpha 10';\r\n\r\n//\t\t$rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams) {\r\n//\t\t\tconsole.log('$stateChangeStart to ' + toState.to + '- fired when the transition begins. toState,toParams : \\n', toState, toParams);\r\n//\t\t});\r\n//\t\t$rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams) {\r\n//\t\t\tconsole.log('$stateChangeError - fired when an error occurs during transition.');\r\n//\t\t\tconsole.log(arguments);\r\n//\t\t});\r\n//\t\t$rootScope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {\r\n//\t\t\tconsole.log('$stateChangeSuccess to ' + toState.name + '- fired once the state transition is complete.');\r\n//\t\t});\r\n//\t\t$rootScope.$on('$viewContentLoaded', function(event) {\r\n//\t\t\tconsole.log('$viewContentLoaded - fired after dom rendered', event);\r\n//\t\t});\r\n//\t\t$rootScope.$on('$stateNotFound', function(event, unfoundState, fromState, fromParams) {\r\n//\t\t\tconsole.log('$stateNotFound ' + unfoundState.to + '  - fired when a state cannot be found by its name.');\r\n//\t\t\tconsole.log(unfoundState, fromState, fromParams);\r\n//\t\t});\r\n\t};\r\n\r\n\treturn [ '$scope', '$rootScope', CommonController ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('common/SettingsController',['require','angular','common/models','robots/models'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('common/models');\r\n\trequire('robots/models');\r\n\r\n\tvar SettingsController = function($q, $scope, Setting, Robot, language) {\r\n\t\t$scope.language = language.getText();\r\n\t\t$scope.robots = Robot.query();\r\n\t\t$scope.settings = Setting.query();\r\n\r\n\t\t$scope.settings.$promise.then(function(settings) {\r\n\t\t\tfor (var i = 0; i < settings.length; i++) {\r\n\t\t\t\tif (settings[i].key == 'robot') {\r\n\t\t\t\t\t$scope.robotSetting = settings[i];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($scope.robotSetting === undefined) {\r\n\t\t\t\t$scope.robotSetting = new Setting({\r\n\t\t\t\t\tkey : 'robot',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$scope.$watch('robotSetting.value', function(newValue, oldValue) {\r\n\t\t\tif (newValue !== undefined) {\r\n\t\t\t\t$scope.robotSetting.$save();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn [ '$q', '$scope', 'Setting', 'Robot', 'language', SettingsController ];\r\n\r\n});\r\n\n","'use strict';\r\n\r\ndefine('common/controllers',['require','angular','common/i18n/languageServices','angularUIRouter','common/models','robots/models','./CommonController','./SettingsController'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar languageServices = require('common/i18n/languageServices');\r\n\tvar uiRouter = require('angularUIRouter');\r\n\tvar commonModels = require('common/models');\r\n\tvar robotModels = require('robots/models');\r\n\tvar CommonController = require('./CommonController');\r\n\tvar SettingsController = require('./SettingsController');\r\n\t\r\n\tvar moduleName = 'kasparGUI.common.controllers';\r\n\tvar dependancies = [\r\n\t\t\t\t\t\tuiRouter,\r\n\t\t\t\t\t\tlanguageServices,\r\n\t\t\t\t\t\tcommonModels,\r\n\t\t\t\t\t\trobotModels,\r\n\t\t\t\t\t\t];\r\n\t\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.controller('commonController', CommonController)\r\n\t\t.controller('settingsController', SettingsController);\r\n\r\n\treturn moduleName;\r\n});\t\r\n\n","\ndefine('text!common/settings.tpl.html',[],function () { return '<div\\r\\n\\tng-cloak>\\r\\n\\t<div class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'common.setting.robot.label\\']}}</span>\\r\\n\\t\\t<select\\r\\n\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\tng-model=\"robotSetting.value\"\\r\\n\\t\\t\\tng-options=\"robot.name as (robot.name + \\' (\\' + robot.model.name + \\': \\' + robot.version + \\')\\' ) for robot in robots | orderBy:\\'name\\'\">\\r\\n\\t\\t\\t<option value=\"\">{{language[\\'common.setting.robot.select.prompt\\']}}</option>\\r\\n\\t\\t</select>\\r\\n\\t</div>\\r\\n</div>';});\n\n","'use strict';\r\n\r\ndefine('categories/admin',['require','angular','angularUIRouter','operators/controllers','text!operators/index.tpl.html','users/controllers','text!users/index.tpl.html','robots/controllers','text!robots/index.tpl.html','common/controllers','text!common/settings.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar uiRouter = require('angularUIRouter');\r\n\tvar operatorControllers = require('operators/controllers');\r\n\tvar operatorTemplate = require('text!operators/index.tpl.html');\r\n\tvar userControllers = require('users/controllers');\r\n\tvar userTemplate = require('text!users/index.tpl.html');\r\n\tvar robotControllers = require('robots/controllers');\r\n\tvar robotTemplate = require('text!robots/index.tpl.html');\r\n\tvar settingsControllers = require('common/controllers');\r\n\tvar settingsTemplate = require('text!common/settings.tpl.html');\r\n\r\n\tvar moduleName = 'kasparGUI.menu.admin';\r\n\tvar dependancies = [ uiRouter, operatorControllers, userControllers, robotControllers, settingsControllers, ];\r\n\r\n\tvar Routes = function($stateProvider, $urlRouterProvider) {\r\n\t\t$urlRouterProvider.otherwise(\"/\");\r\n\t\t$stateProvider.state('admin', {\r\n\t\t\turl : '/admin',\r\n\t\t\ttemplate : '<ui-view/>',\r\n\t\t\tabstract : true,\r\n\t\t}).state('admin.operator', {\r\n\t\t\turl : '/operator{id:(?:/[0-9]{1,8})?}',\r\n\t\t\ttemplate : operatorTemplate,\r\n\t\t\tcontroller : 'operatorController',\r\n\t\t}).state('admin.user', {\r\n\t\t\turl : '/user{id:(?:/[0-9]{1,8})?}',\r\n\t\t\ttemplate : userTemplate,\r\n\t\t\tcontroller : 'userController',\r\n\t\t}).state('admin.robot', {\r\n\t\t\turl : '/robot{id:(?:/[0-9]{1,8})?}',\r\n\t\t\ttemplate : robotTemplate,\r\n\t\t\tcontroller : 'robotController',\r\n\t\t}).state('admin.setting', {\r\n\t\t\turl : '/setting',\r\n\t\t\ttemplate : settingsTemplate,\r\n\t\t\tcontroller : 'settingsController',\r\n\t\t});\r\n\t};\r\n\r\n\tvar module = angular.module(moduleName, dependancies);\r\n\tmodule.config([ '$stateProvider', '$urlRouterProvider', Routes ]);\r\n\treturn moduleName;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('interactions/models/Interaction',['require'],function(require) {\r\n\tvar Interaction = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('Interaction', {}, {\r\n\t\t\tget : {\r\n\t\t\t\tmethod : 'GET',\r\n\t\t\t\tcache : false\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', Interaction ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('interactions/models/InteractionLog',['require'],function(require) {\r\n\tvar Interaction = function(modelBuilder) {\r\n\t\tvar _service = modelBuilder.getModel('InteractionLog', {}, {\r\n\t\t\tget : {\r\n\t\t\t\tmethod : 'GET',\r\n\t\t\t\tcache : false\r\n\t\t\t}\r\n\t\t}, 'Interaction/:interactionId/Log/:id');\r\n\r\n\t\treturn _service;\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', Interaction ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('interactions/models',['require','angular','angularResource','./models/Interaction','./models/InteractionLog'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar angularResource = require('angularResource');\r\n\tvar Interaction = require('./models/Interaction');\r\n\tvar InteractionLog = require('./models/InteractionLog');\r\n\r\n\tvar moduleName = 'kasparGUI.interactions.models';\r\n\tvar dependancies = [\r\n\t\t\t\t\t\tangularResource, \r\n\t\t\t\t\t\t];\r\n\t\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.factory('Interaction', Interaction)\r\n\t\t.factory('InteractionLog', InteractionLog);\r\n\r\n\treturn moduleName;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('interactions/InteractionController',['require','angular','operators/models','users/models','triggers/models','interactions/models'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('operators/models');\r\n\trequire('users/models');\r\n\trequire('triggers/models');\r\n\trequire('interactions/models');\r\n\r\n\tvar InteractionController = function($q, $scope, Operator, User, Interaction, ButtonTrigger, language) {\r\n\t\t$scope.language = language.getText();\r\n\t\t$scope.operators = Operator.query();\r\n\t\t$scope.users = User.query();\r\n\t\t$scope.interaction = null;\r\n\t\t$scope.keyBind = true;\r\n\t\t$scope.showHotKeys = true;\r\n\t\tvar activeInteractions = Interaction.query({\r\n\t\t\tendTime : null\r\n\t\t});\r\n\t\tactiveInteractions.$promise.then(function(result) {\r\n\t\t\tif (result !== undefined && result.length > 0) {\r\n\t\t\t\t$scope.interaction = result[0];\r\n\t\t\t\t$scope.operator_id = $scope.interaction.operator_id;\r\n\t\t\t\t$scope.user_id = $scope.interaction.user_id;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$scope.buttons = ButtonTrigger.query();\r\n\r\n\t\t$scope.start = function() {\r\n\t\t\t$scope.interaction = new Interaction({\r\n\t\t\t\tstartTime : new Date(),\r\n\t\t\t\tuser_id : $scope.user_id,\r\n\t\t\t\trobot_id : $scope.robot.id,\r\n\t\t\t\toperator_id : $scope.operator_id,\r\n\t\t\t});\r\n\r\n\t\t\t$scope.interaction.$save();\r\n\t\t};\r\n\r\n\t\t$scope.stop = function() {\r\n\t\t\t$scope.interaction.endTime = new Date();\r\n\t\t\t$scope.interaction.$save().then(function() {\r\n\t\t\t\t$scope.interaction = null;\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$scope.getCategory = function(user, userList) {\r\n\t\t\tif (userList === undefined || user === undefined) { return; }\r\n\t\t\tfor (var i = 0; i < userList.length; i++) {\r\n\t\t\t\tif (userList[i].id == user.id) { return \"Common\"; }\r\n\t\t\t}\r\n\r\n\t\t\treturn \"All\";\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ '$q', '$scope', 'Operator', 'User', 'Interaction', 'ButtonTrigger', 'language', InteractionController ];\r\n});\r\n\n","\ndefine('text!interactions/directives/actionButton.tpl.html',[],function () { return '<div ng-class=\"{\\'input-group\\': showHotKeys && keyDisplay }\" class=\"actionButton\">\\r\\n\\t<span ng-class=\"{\\'input-group-btn\\': showHotKeys && keyDisplay }\" class=\"button\">\\r\\n\\t\\t<button\\r\\n\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\tng-class=\"{active: active}\"\\r\\n\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\tng-click=\"callButton(button.id)\">{{button.name}}</button>\\r\\n\\t</span>\\r\\n\\t<span\\r\\n\\t\\tclass=\"form-control hotkey\"\\r\\n\\t\\tng-show=\"showHotKeys && keyDisplay\"\\r\\n\\t\\tng-disabled=\"true\">{{keyDisplay}}</span>\\r\\n</div>\\r\\n';});\n\n","'use strict';\r\n\r\ndefine('interactions/directives/ActionButton',['require','angular','common/services/displayServices','actions/models','mousetrap','text!./actionButton.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('common/services/displayServices');\r\n\trequire('actions/models');\r\n\tvar Mousetrap = require('mousetrap');\r\n\tvar template = require('text!./actionButton.tpl.html');\r\n\r\n\tvar ActionButton = function($q, $timeout, InteractionLog, hotkeyFormatter, language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\tbutton : \"=\",\r\n\t\t\t\tinteraction : \"=\",\r\n\t\t\t\tshowHotKeys : \"=\",\r\n\t\t\t\tkeyBind : \"=\",\r\n\t\t\t},\r\n\t\t\tlink : function(scope, element, attrs, controller) {\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t\t$scope.active = false;\r\n\t\t\t\tvar keyBinds = null;\r\n\r\n\t\t\t\t$scope.$watch('button', function(newValue, oldValue) {\r\n\t\t\t\t\tif (newValue !== undefined) {\r\n\t\t\t\t\t\tvar kb = [];\r\n\t\t\t\t\t\tfor (var i = 0; i < $scope.button.hotKeys.length; i++) {\r\n\t\t\t\t\t\t\tkb.push($scope.button.hotKeys[i].keyString);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$scope.keyDisplay = kb.join(' | ');\r\n\t\t\t\t\t\tif (keyBinds !== null) {\r\n\t\t\t\t\t\t\tMousetrap.unbind(keyBinds);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tkeyBinds = kb;\r\n\r\n\t\t\t\t\t\tMousetrap.bind(keyBinds, function() {\r\n\t\t\t\t\t\t\t$scope.active = true;\r\n\t\t\t\t\t\t\t$timeout(function() {\r\n\t\t\t\t\t\t\t\t$scope.active = false;\r\n\t\t\t\t\t\t\t}, 2000);\r\n\t\t\t\t\t\t\tif ($scope.keyBind) {\r\n\t\t\t\t\t\t\t\t$scope.callButton($scope.button.id);\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$scope.callButton = function(buttonId) {\r\n\t\t\t\t\tInteractionLog.save({\r\n\t\t\t\t\t\tinteractionId : $scope.interaction.id\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t'button_id' : buttonId,\r\n\t\t\t\t\t\t'interaction_id' : $scope.interaction.id\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ '$q', '$timeout', 'InteractionLog', 'hotkeyFormatter', 'language', ActionButton ];\r\n});\r\n\n","\ndefine('text!interactions/directives/actionButtons.tpl.html',[],function () { return '<div class=\"row\">\\r\\n\\t<div\\r\\n\\t\\tclass=\"col-lg-3 col-md-6 col-sm-12 col-xs-12\"\\r\\n\\t\\tng-repeat=\"button in buttons | orderBy:\\'name\\'\">\\r\\n\\t\\t<action-button\\r\\n\\t\\t\\tbutton=\"button\"\\r\\n\\t\\t\\tinteraction=\"interaction\"\\r\\n\\t\\t\\tuser=\"user\"\\r\\n\\t\\t\\tshow-hot-keys=\"showHotKeys\"\\r\\n\\t\\t\\tkey-bind=\"keyBind\" />\\r\\n\\t</div>\\r\\n</div>';});\n\n","'use strict';\r\n\r\ndefine('interactions/directives/ActionButtons',['require','angular','common/services/displayServices','actions/models','text!./actionButtons.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('common/services/displayServices');\r\n\trequire('actions/models');\r\n\tvar template = require('text!./actionButtons.tpl.html');\r\n\r\n\tvar ActionButtons = function($q, UserAction, hotkeyFormatter, language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\tbuttons : \"=\",\r\n\t\t\t\tuser : \"=\",\r\n\t\t\t\tinteraction : \"=\",\r\n\t\t\t\tshowHotKeys : \"=\",\r\n\t\t\t\tkeyBind : \"=\",\r\n\t\t\t},\r\n\t\t\tlink : function(scope, element, attrs, controller) {\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ '$q', 'UserAction', 'hotkeyFormatter', 'language', ActionButtons ];\r\n});\r\n\n","\ndefine('text!interactions/directives/operatorInteraction.tpl.html',[],function () { return '<div>\\r\\n\\t<strong>TODO</strong>\\r\\n\\t<ul>\\r\\n\\t\\t<li><strong>Feedback on keypress</strong></li>\\r\\n\\t\\t<li><strong>Log window with ???</strong></li>\\r\\n\\t\\t<li><strong>Images from webcam(s)?</strong></li>\\r\\n\\t</ul>\\r\\n\\t<accordion close-others=\"true\"> <accordion-group\\r\\n\\t\\tis-open=\"isopen\"> <accordion-heading>{{language[\\'interaction.operator.view.buttons.label\\']}}<i\\r\\n\\t\\tclass=\"pull-right glyphicon\"\\r\\n\\t\\tng-class=\"{\\'glyphicon-chevron-down\\': isopen, \\'glyphicon-chevron-right\\': !isopen}\"></i>\\r\\n\\t</accordion-heading>\\r\\n\\t<div class=\"btn-group\">\\r\\n\\t\\t<button\\r\\n\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\tclass=\"btn btn-primary check\"\\r\\n\\t\\t\\tng-model=\"keyBind\"\\r\\n\\t\\t\\tng-click=\"setBinding(keyBind)\"\\r\\n\\t\\t\\tbtn-checkbox>{{language[\\'interaction.operator.view.activateBindings\\']}}</button>\\r\\n\\t\\t<button\\r\\n\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\tclass=\"btn btn-primary check\"\\r\\n\\t\\t\\tng-model=\"showHotKeys\"\\r\\n\\t\\t\\tbtn-checkbox>{{language[\\'interaction.operator.view.showHotkeys\\']}}</button>\\r\\n\\t</div>\\r\\n\\t<hr />\\r\\n\\t<action-buttons\\r\\n\\t\\tinteraction=\"interaction\"\\r\\n\\t\\tbuttons=\"buttons\"\\r\\n\\t\\tshow-hot-keys=\"showHotKeys\"\\r\\n\\t\\tuser=\"user\"\\r\\n\\t\\tkey-bind=\"keyBind\" /></accordion-group> </accordion>\\r\\n</div>';});\n\n","'use strict';\r\n\r\ndefine('interactions/directives/OperatorInteraction',['require','angular','text!./operatorInteraction.tpl.html','mousetrap'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar template = require('text!./operatorInteraction.tpl.html');\r\n\tvar Mousetrap = require('mousetrap');\r\n\r\n\tvar OperatorInteraction = function(language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\toperator : \"=\",\r\n\t\t\t\tuser : \"=\",\r\n\t\t\t\tinteraction : \"=\",\r\n\t\t\t\tbuttons : \"=\",\r\n\t\t\t\tshowHotKeys : \"=\",\r\n\t\t\t\tkeyBind : \"=\",\r\n\t\t\t},\r\n\t\t\tlink : function(scope, element, attrs, controller) {\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t\t$scope.isopen = true;\r\n\r\n\t\t\t\t$scope.setBinding = function(value) {\r\n\t\t\t\t\t// Reversed as this is called BEFORE updating keyBind\r\n\t\t\t\t\tif (!value) {\r\n\t\t\t\t\t\tMousetrap.unpause();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tMousetrap.pause();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n\treturn ['language', OperatorInteraction];\r\n});\r\n\n","\ndefine('text!interactions/directives/userInteraction.tpl.html',[],function () { return '<div>\\r\\n\\t<strong>TODO</strong>\\r\\n\\t<ul>\\r\\n\\t\\t<li><strong> FullScreen/No Menus </strong></li>\\r\\n\\t\\t<li><strong> Other ?? </strong></li>\\r\\n\\t</ul>\\r\\n<!-- \\t<action-buttons -->\\r\\n<!-- \\t\\tinteraction=\"interaction\" -->\\r\\n<!-- \\t\\tbuttons=\"buttons\" -->\\r\\n<!-- \\t\\tshow-hot-keys=\"showHotKeys\" -->\\r\\n<!-- \\t\\tuser=\"user\" -->\\r\\n<!-- \\t\\tkey-bind=\"keyBind\" /> -->\\r\\n</div>\\r\\n';});\n\n","'use strict';\r\n\r\ndefine('interactions/directives/UserInteraction',['require','angular','text!./userInteraction.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar template = require('text!./userInteraction.tpl.html');\r\n\r\n\tvar UserInteraction = function(language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\tuser : \"=\",\r\n\t\t\t\tinteraction : \"=\",\r\n\t\t\t\tbuttons : \"=\",\r\n\t\t\t\tshowHotKeys : \"=\",\r\n\t\t\t\tkeyBind : \"=\",\r\n\t\t\t},\r\n\t\t\tlink : function(scope, element, attrs, controller) {\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n\treturn ['language', UserInteraction];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('interactions/directives',['require','angular','common/i18n/languageServices','common/services/displayServices','common/filters','interactions/models','./directives/ActionButton','./directives/ActionButtons','./directives/OperatorInteraction','./directives/UserInteraction'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar languageServices = require('common/i18n/languageServices');\r\n\tvar displayServices = require('common/services/displayServices');\r\n\tvar filters = require('common/filters');\r\n\tvar interactionModels = require('interactions/models');\r\n\tvar ActionButton = require('./directives/ActionButton');\r\n\tvar ActionButtons = require('./directives/ActionButtons');\r\n\tvar OperatorInteraction = require('./directives/OperatorInteraction');\r\n\tvar UserInteraction = require('./directives/UserInteraction');\r\n\r\n\tvar moduleName = 'kasparGUI.interactions.directives';\r\n\tvar dependancies = [\r\n\t\t\t\t\t\tdisplayServices,\r\n\t\t\t\t\t\tlanguageServices,\r\n\t\t\t\t\t\tfilters,\r\n\t\t\t\t\t\tinteractionModels,\r\n\t\t\t\t\t\t];\r\n\t\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.directive('actionButton', ActionButton)\r\n\t\t.directive('actionButtons', ActionButtons)\r\n\t\t.directive('operatorInteraction', OperatorInteraction)\r\n\t\t.directive('userInteraction', UserInteraction);\r\n\r\n\treturn moduleName;\r\n});\t\t\r\n\n","'use strict';\r\n\r\ndefine('interactions/controllers',['require','angular','common/i18n/languageServices','operators/models','users/models','triggers/models','interactions/models','./InteractionController','interactions/directives'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar languageServices = require('common/i18n/languageServices');\r\n\tvar operatorModels = require('operators/models');\r\n\tvar userModels = require('users/models');\r\n\tvar triggerModels = require('triggers/models');\r\n\tvar interactionModels = require('interactions/models');\r\n\tvar InteractionController = require('./InteractionController');\r\n\tvar interactionDirectives = require('interactions/directives');\r\n\t\r\n\tvar moduleName = 'kasparGUI.interactions.controllers';\r\n\tvar dependancies = [\r\n\t\t\t\t\t\toperatorModels,\r\n\t\t\t\t\t\tlanguageServices,\r\n\t\t\t\t\t\tuserModels,\r\n\t\t\t\t\t\ttriggerModels,\r\n\t\t\t\t\t\tinteractionModels,\r\n\t\t\t\t\t\tinteractionDirectives,\r\n\t\t\t\t\t\t];\r\n\t\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.controller('interactionController', InteractionController);\r\n\r\n\treturn moduleName;\r\n});\t\r\n\n","\ndefine('text!interactions/index.tpl.html',[],function () { return '<ui-view />';});\n\n","\ndefine('text!interactions/begin.tpl.html',[],function () { return '<div>\\r\\n\\t<div class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'interaction.operator.label\\']}}</span>\\r\\n\\t\\t<select\\r\\n\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\tng-model=\"operator_id\"\\r\\n\\t\\t\\tng-disabled=\"interaction\"\\r\\n\\t\\t\\tng-options=\"operator.id as operator.fullname for operator in operators | orderBy:\\'fullname\\'\">\\r\\n\\t\\t\\t<option value=\"\">{{language[\\'interaction.operator.select.prompt\\']}}</option>\\r\\n\\t\\t</select>\\r\\n\\t</div>\\r\\n\\t<div class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'interaction.user.label\\']}}</span>\\r\\n\\t\\t<select\\r\\n\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\tng-model=\"user_id\"\\r\\n\\t\\t\\tng-disabled=\"interaction\"\\r\\n\\t\\t\\tng-options=\"user.id as user.fullname group by getCategory(user, operator.users) for user in users | orderBy:\\'fullname\\'\">\\r\\n\\t\\t\\t<option value=\"\">{{language[\\'interaction.user.select.prompt\\']}}</option>\\r\\n\\t\\t</select>\\r\\n\\t</div>\\r\\n\\t<robot-interface robot=\"robot\"></robot-interface>\\r\\n\\t<div class=\"btn-toolbar\">\\r\\n\\t\\t<div class=\"btn-group\">\\r\\n\\t\\t\\t<button\\r\\n\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\tng-disabled=\"!(user_id && operator_id && robot.id)\"\\r\\n\\t\\t\\t\\tng-if=\"interaction == null\"\\r\\n\\t\\t\\t\\tng-click=\"start()\">{{language[\\'interaction.start\\']}}</button>\\r\\n\\t\\t\\t<button\\r\\n\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\tng-if=\"interaction != null\"\\r\\n\\t\\t\\t\\tng-click=\"stop()\">{{language[\\'interaction.stop\\']}}</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<tabset ng-show=\"interaction != null\"> <tab\\r\\n\\t\\theading=\"Operator View\"> <operator-interaction\\r\\n\\t\\toperator=\"operator\"\\r\\n\\t\\tbuttons=\"buttons\"\\r\\n\\t\\tuser=\"user\"\\r\\n\\t\\tinteraction=\"interaction\"\\r\\n\\t\\tkey-bind=\"keyBind\"\\r\\n\\t\\tshow-hot-keys=\"showHotKeys\"></operator-interaction> </tab> <tab\\r\\n\\t\\theading=\"User View\"> <user-interaction\\r\\n\\t\\tuser=\"user\"\\r\\n\\t\\tbuttons=\"buttons\"\\r\\n\\t\\tinteraction=\"interaction\"\\r\\n\\t\\tkey-bind=\"keyBind\"\\r\\n\\t\\tshow-hot-keys=\"showHotKeys\"></user-interaction> </tab></tabset>\\r\\n</div>\\r\\n';});\n\n","\ndefine('text!interactions/log.tpl.html',[],function () { return '<h3 class=\"text-center\">Past Interaction View Window</h3>\\r\\n<strong>TODO</strong>\\r\\n<ul>\\r\\n\\t<li><strong> View details of history </strong></li>\\r\\n\\t<li><strong> Merge with Manage screen? </strong></li>\\r\\n</ul>';});\n\n","\ndefine('text!interactions/manage.tpl.html',[],function () { return '<h3 class=\"text-center\">Past Interaction Management Window</h3>\\r\\n<strong>TODO</strong>\\r\\n<ul>\\r\\n\\t<li><strong> Remove history </strong></li>\\r\\n\\t<li><strong> Annotate history </strong></li>\\r\\n\\t<li>Do we need the ability to prepare an interaction (choose activities, pre-interaction questionnaire)?</li>\\r\\n\\t<li>This would a be a good place for the post-interaction questionnaire from the IROMEC project</li>\\r\\n</ul>\\r\\n';});\n\n","'use strict';\r\n\r\ndefine('categories/interaction',['require','angular','angularUIRouter','interactions/controllers','text!interactions/index.tpl.html','text!interactions/begin.tpl.html','text!interactions/log.tpl.html','text!interactions/manage.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar uiRouter = require('angularUIRouter');\r\n\tvar interactionControllers = require('interactions/controllers');\r\n\tvar defaultTemplate = require('text!interactions/index.tpl.html');\r\n\tvar beginTemplate = require('text!interactions/begin.tpl.html');\r\n\tvar viewTemplate = require('text!interactions/log.tpl.html');\r\n\tvar manageTemplate = require('text!interactions/manage.tpl.html');\r\n\r\n\tvar moduleName = 'kasparGUI.menu.interaction';\r\n\tvar dependancies = [ uiRouter, interactionControllers, ];\r\n\r\n\tvar Routes = function($stateProvider, $urlRouterProvider) {\r\n\t\t$urlRouterProvider.otherwise(\"/\");\r\n\t\t$stateProvider.state('interaction', {\r\n\t\t\turl : '/interaction',\r\n\t\t\ttemplate : defaultTemplate,\r\n\t\t\tabstract : true,\r\n\t\t}).state('interaction.begin', {\r\n\t\t\turl : '/begin',\r\n\t\t\ttemplate : beginTemplate,\r\n\t\t\tcontroller : 'interactionController',\r\n\t\t}).state('interaction.view', {\r\n\t\t\turl : '{id:(?:/[0-9]{1,8})?}/view',\r\n\t\t\ttemplate : viewTemplate,\r\n\t\t\tcontroller : 'interactionController',\r\n\t\t}).state('interaction.manage', {\r\n\t\t\turl : '{id:(?:/[0-9]{1,8})?}/manage',\r\n\t\t\ttemplate : manageTemplate,\r\n\t\t\tcontroller : 'interactionController',\r\n\t\t});\r\n\t};\r\n\r\n\tvar module = angular.module(moduleName, dependancies);\r\n\tmodule.config([ '$stateProvider', '$urlRouterProvider', Routes ]);\r\n\treturn moduleName;\r\n});\r\n\n","\ndefine('text!triggers/directives/buttonTriggerEditor.tpl.html',[],function () { return '<div>\\r\\n\\t<ng-form\\r\\n\\t\\tname=\"buttonEditor\"\\r\\n\\t\\tmodel=\"button\">\\r\\n\\t<div class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'trigger.button.name\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\tname=\"buttonName\"\\r\\n\\t\\t\\tsaveable\\r\\n\\t\\t\\trequired\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Button Trigger Name\"\\r\\n\\t\\t\\tng-model=\"button.name\">\\r\\n\\t</div>\\r\\n\\t<div class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'trigger.button.action\\']}}</span>\\r\\n\\t\\t<select\\r\\n\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\tsaveable\\r\\n\\t\\t\\tname=\"action\"\\r\\n\\t\\t\\tng-model=\"button.action_id\"\\r\\n\\t\\t\\tng-options=\"action.id as action.name group by action.type for action in actions | orderBy:\\'name\\'\">\\r\\n\\t\\t\\t<option value=\"\">{{language[\\'trigger.button.action.select.prompt\\']}}</option>\\r\\n\\t\\t</select>\\r\\n\\t</div>\\r\\n\\t<hotkey-editor\\r\\n\\t\\thotkey=\"hotkey\"\\r\\n\\t\\tbutton=\"button\"\\r\\n\\t\\tng-repeat=\"hotkey in button.hotKeys\"></hotkey-editor>\\r\\n\\t<button\\r\\n\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\ttype=\"button\"\\r\\n\\t\\tng-click=\"addButton()\">{{language[\\'trigger.button.hotkey.new\\']}}</button>\\r\\n\\t</ng-form>\\r\\n</div>';});\n\n","'use strict';\r\n\r\ndefine('triggers/directives/ButtonTriggerEditor',['require','angular','triggers/models','text!./buttonTriggerEditor.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('triggers/models');\r\n\tvar template = require('text!./buttonTriggerEditor.tpl.html');\r\n\r\n\tvar ButtonTriggerEditor = function(ButtonHotkey, language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\tbutton : \"=trigger\",\r\n\t\t\t\tactions : \"=\",\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t\t$scope.addButton = function() {\r\n\t\t\t\t\tif ($scope.button.hotKeys === undefined) {\r\n\t\t\t\t\t\t$scope.button.hotKeys = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$scope.button.hotKeys.push(new ButtonHotkey({\r\n\t\t\t\t\t\t'trigger_id' : $scope.button.id\r\n\t\t\t\t\t}));\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ 'ButtonHotkey', 'language', ButtonTriggerEditor ];\r\n});\r\n\n","\ndefine('text!triggers/directives/compoundTriggerEditor.tpl.html',[],function () { return '<form\\r\\n\\tname=\"compountTriggerForm\"\\r\\n\\tmodel=\"compound\">\\r\\n\\t<div class=\"row\">\\r\\n\\t\\t<div class=\"col-lg-12\">\\r\\n\\t\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t\\t<span class=\"input-group-addon inputLabel\">Name</span>\\r\\n\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\t\\tplaceholder=\"Compound Trigger Name\"\\r\\n\\t\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\t\\tname=\"name\"\\r\\n\\t\\t\\t\\t\\tng-model=\"time.name\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t\\t<span class=\"input-group-addon inputLabel\">Action</span>\\r\\n\\t\\t\\t\\t<select\\r\\n\\t\\t\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\t\\t\\tng-model=\"time.action_id\"\\r\\n\\t\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\t\\tname=\"actionId\"\\r\\n\\t\\t\\t\\t\\tng-options=\"action.id as action.name group by action.type for action in actions | orderBy:\\'name\\'\">\\r\\n\\t\\t\\t\\t\\t<option value=\"\">No Action</option>\\r\\n\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row\">\\r\\n\\t\\t<strong>TODO:</strong>\\r\\n\\t\\t<ul>\\r\\n\\t\\t\\t<li>When any selected are active</li>\\r\\n\\t\\t\\t<li>When all selected are active</li>\\r\\n\\t\\t</ul>\\r\\n\\t</div>\\r\\n</form>';});\n\n","'use strict';\r\n\r\ndefine('triggers/directives/CompoundTriggerEditor',['require','angular','text!./compoundTriggerEditor.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar template = require('text!./compoundTriggerEditor.tpl.html');\r\n\r\n\tvar CompoundTriggerEditor = function(language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\tcompound : \"=trigger\",\r\n\t\t\t\tactions : \"=\",\r\n\t\t\t\ttriggers : \"=\",\r\n\t\t\t},\r\n\t\t\tlink : function(scope, iElement, iAttrs, controller) {\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t\t$scope.addTriggers = function(triggers) {\r\n\t\t\t\t\tif ($scope.compound.triggers === undefined) {\r\n\t\t\t\t\t\t$scope.compound.triggers = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (var i = 0; i < triggers.length; i++) {\r\n\t\t\t\t\t\t$scope.compound.triggers.push(triggers[i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsave();\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar save = function() {\r\n\t\t\t\t\tvar selfIndex = -1;\r\n\t\t\t\t\tif ($scope.compound.id !== undefined) {\r\n\t\t\t\t\t\tfor (var i = 0; i < $scope.compound.triggers.length; i++) {\r\n\t\t\t\t\t\t\tif ($scope.compound.triggers[i].id === $scope.compound.id) {\r\n\t\t\t\t\t\t\t\tselfIndex = i;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tselfIndex = $scope.compound.triggers.indexOf($scope.compound);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$scope.compound.mustStayActive = true;\r\n\t\t\t\t\t$scope.compound.time = 0;\r\n\t\t\t\t\t$scope.compound.variance = 0;\r\n\t\t\t\t\t$scope.compound.$save();\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.removeTriggers = function(triggers) {\r\n\t\t\t\t\tfor (var i = 0; i < triggers.length; i++) {\r\n\t\t\t\t\t\t$scope.time.triggers.splice($scope.time.triggers.indexOf(triggers[i]), 1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsave();\r\n\t\t\t\t};\r\n\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n\treturn ['language', CompoundTriggerEditor];\r\n});\r\n\n","\ndefine('text!triggers/directives/hotkeyEditor.tpl.html',[],function () { return '<ng-form\\r\\n\\tname=\"hotkeyEditor\"\\r\\n\\tmodel=\"hotkey\">\\r\\n\\t<div class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'trigger.button.hotkey.label\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tname=\"key\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Click here to enter keys\"\\r\\n\\t\\t\\tsaveable\\r\\n\\t\\t\\tng-keydown=\"updateKey($event, hotkey)\"\\r\\n\\t\\t\\tng-model=\"hotkey.keyString\">\\r\\n\\t\\t<span class=\"input-group-btn\">\\r\\n\\t\\t\\t<button\\r\\n\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\tng-click=\"deleteKey()\">{{language[\\'trigger.button.hotkey.delete\\']}}</button>\\r\\n\\t\\t</span>\\r\\n\\t</div>\\r\\n</ng-form>';});\n\n","'use strict';\r\n\r\ndefine('triggers/directives/HotkeyEditor',['require','angular','mousetrap','mousetrapPause','common/services/displayServices','text!./hotkeyEditor.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('mousetrap');\r\n\trequire('mousetrapPause');\r\n\trequire('common/services/displayServices');\r\n\tvar template = require('text!./hotkeyEditor.tpl.html');\r\n\r\n\tvar HotkeyEditor = function(hotkeyFormatter, language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\thotkey : \"=\",\r\n\t\t\t\tbutton : \"=\",\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t\t$scope.deleteKey = function() {\r\n\t\t\t\t\t$scope.button.hotKeys.splice($scope.button.hotKeys.indexOf($scope.hotkey), 1);\r\n\t\t\t\t\tif ($scope.hotkey.id !== undefined) {\r\n\t\t\t\t\t\t$scope.hotkey.$delete();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.updateKey = function($event, hotKey) {\r\n\t\t\t\t\tvar code = $event.which || $event.keyCode; // Not-IE ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// IE\r\n\t\t\t\t\tvar key = hotkeyFormatter.getDisplayFromEvent($event);\r\n\t\t\t\t\tif (key !== \"\") {\r\n\t\t\t\t\t\thotKey.keyString = key;\r\n\t\t\t\t\t\t$scope.hotkeyEditor.key.$dirty = true;\r\n\t\t\t\t\t\t$event.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ 'hotkeyFormatter', 'language', HotkeyEditor ];\r\n});\r\n\n","\ndefine('text!triggers/directives/sensorTriggerEditor.tpl.html',[],function () { return '<div>\\r\\n\\t<ng-form\\r\\n\\t\\tname=\"sensorEditor\"\\r\\n\\t\\tmodel=\"trigger\">\\r\\n\\t<div class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'trigger.sensor.name\\']}}</span>\\r\\n\\t\\t<input\\r\\n\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\tplaceholder=\"Sensor Trigger Name\"\\r\\n\\t\\t\\tname=\"name\"\\r\\n\\t\\t\\tsaveable\\r\\n\\t\\t\\trequired\\r\\n\\t\\t\\tng-model=\"trigger.name\">\\r\\n\\t</div>\\r\\n\\t<div class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'trigger.sensor.action\\']}}</span>\\r\\n\\t\\t<select\\r\\n\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\tsaveable\\r\\n\\t\\t\\tname=\"action\"\\r\\n\\t\\t\\tng-model=\"trigger.action_id\"\\r\\n\\t\\t\\tng-options=\"action.id as action.name group by action.type for action in actions | orderBy:\\'name\\'\">\\r\\n\\t\\t\\t<option value=\"\">{{language[\\'trigger.sensor.action.select.prompt\\']}}</option>\\r\\n\\t\\t</select>\\r\\n\\t</div>\\r\\n\\t<div class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'trigger.sensor.sensor\\']}}</span>\\r\\n\\t\\t<select\\r\\n\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\tsaveable\\r\\n\\t\\t\\trequired\\r\\n\\t\\t\\tname=\"sensor\"\\r\\n\\t\\t\\tng-model=\"trigger.sensorName\"\\r\\n\\t\\t\\tng-options=\"sensor.name as sensor.name group by sensor.type for sensor in sensors | orderBy:\\'name\\'\">\\r\\n\\t\\t\\t<option value=\"\">{{language[\\'trigger.sensor.sensor.select.prompt\\']}}</option>\\r\\n\\t\\t</select>\\r\\n\\t</div>\\r\\n\\t<sensor-value-editor\\r\\n\\t\\tsensor=\"selectedSensor\"\\r\\n\\t\\ttrigger=\"trigger\"></sensor-value-editor>\\r\\n\\t<div>\\r\\n\\t\\t<span>TODO:</span>\\r\\n\\t\\t<ul>\\r\\n\\t\\t\\t<li>\\'ActionSensor\\' which triggers on action change</li>\\r\\n\\t\\t</ul>\\r\\n\\t</div>\\r\\n\\t</ng-form>\\r\\n</div>';});\n\n","'use strict';\r\n\r\ndefine('triggers/directives/SensorTriggerEditor',['require','angular','robots/models','text!./sensorTriggerEditor.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('robots/models');\r\n\tvar template = require('text!./sensorTriggerEditor.tpl.html');\r\n\r\n\tvar SensorTriggerEditor = function(Sensor, Trigger, language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\ttrigger : \"=\",\r\n\t\t\t\tactions : \"=\",\r\n\t\t\t},\r\n\t\t\tlink : function(scope, iElement, iAttrs, controller) {\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t\t$scope.sensors = Sensor.query();\r\n\r\n\t\t\t\t$scope.$watch('trigger.sensorName', function(sensorName) {\r\n\t\t\t\t\t$scope.sensors.$promise.then(function(sensors) {\r\n\t\t\t\t\t\tif (sensorName !== undefined) {\r\n\t\t\t\t\t\t\tfor (var i = 0; i < sensors.length; i++) {\r\n\t\t\t\t\t\t\t\tif (sensors[i].name == sensorName) {\r\n\t\t\t\t\t\t\t\t\t$scope.selectedSensor = sensors[i];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ 'Sensor', 'Trigger', 'language', SensorTriggerEditor ];\r\n});\r\n\n","\ndefine('text!triggers/directives/sensorValueEditor.tpl.html',[],function () { return '<div>\\r\\n\\t<div ng-show=\"sensor\">\\r\\n\\t\\t<div ng-if=\"sensor.value_type.type==\\'DiscreteValueType\\'\">TODO:\\r\\n\\t\\t\\tShow discrete values</div>\\r\\n\\t\\t<div ng-if=\"sensor.value_type.type==\\'ContinuousValueType\\'\">\\r\\n\\t\\t\\t<button\\r\\n\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\tclass=\"btn btn-primary\"\\r\\n\\t\\t\\t\\tng-disabled=\"true\">{{language[\\'trigger.sensor.connect\\']}}</button>\\r\\n\\t\\t\\t{{language[\\'trigger.sensor.current\\']}}\\r\\n\\t\\t\\t<progressbar\\r\\n\\t\\t\\t\\tclass=\"progress-striped active\"\\r\\n\\t\\t\\t\\tmax=\"sensor.value_type.maxValue - sensor.value_type.minValue\"\\r\\n\\t\\t\\t\\tvalue=\"currentValue\"> <i>{{current_value}}</i></progressbar>\\r\\n\\t\\t</div>\\r\\n\\t\\t<accordion close-others=\"true\"> <accordion-group\\r\\n\\t\\t\\tis-open=\"basicopen\"> <accordion-heading>\\r\\n\\t\\t{{language[\\'trigger.sensor.basic.label\\']}}<i\\r\\n\\t\\t\\tclass=\"pull-right glyphicon\"\\r\\n\\t\\t\\tng-class=\"{\\'glyphicon-chevron-down\\': basicopen, \\'glyphicon-chevron-right\\': !basicopen}\"></i>\\r\\n\\t\\t</accordion-heading>\\r\\n\\t\\t<div>\\r\\n\\t\\t\\t<div class=\"btn-group\">\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-primary\"\\r\\n\\t\\t\\t\\t\\tng-model=\"trigger.sensorValue\"\\r\\n\\t\\t\\t\\t\\tbtn-radio=\"\\'eval::on\\'\">{{language[\\'trigger.sensor.basic.on\\']}}</button>\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-primary\"\\r\\n\\t\\t\\t\\t\\tng-model=\"trigger.sensorValue\"\\r\\n\\t\\t\\t\\t\\tbtn-radio=\"\\'eval::off\\'\">{{language[\\'trigger.sensor.basic.off\\']}}</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<small>{{language[\\'trigger.sensor.basic.help.short\\']}}</small>\\r\\n\\t\\t</div>\\r\\n\\t\\t</accordion-group> <accordion-group is-open=\"advancedopen\"> <accordion-heading>\\r\\n\\t\\t{{language[\\'trigger.sensor.advanced.label\\']}} <i\\r\\n\\t\\t\\tclass=\"pull-right glyphicon\"\\r\\n\\t\\t\\tng-class=\"{\\'glyphicon-chevron-down\\': advancedopen, \\'glyphicon-chevron-right\\': !advancedopen}\"></i>\\r\\n\\t\\t</accordion-heading>\\r\\n\\t\\t<div class=\"col-lg-12\">\\r\\n\\t\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t\\t<div class=\"input-group-addon inputLabel\">{{language[\\'trigger.sensor.advanced.compare.label\\']}}</div>\\r\\n\\t\\t\\t\\t<select\\r\\n\\t\\t\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\t\\t\\tname=\"sensorCompare\"\\r\\n\\t\\t\\t\\t\\tng-model=\"trigger.comparison\"\\r\\n\\t\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\t\\tstyle=\"width: 25%\"\\r\\n\\t\\t\\t\\t\\tng-options=\"value.compare as (value.name + \\' (\\' + value.compare + \\')\\') for value in comparisons\">\\r\\n\\t\\t\\t\\t\\t<option value=\"\">{{language[\\'trigger.sensor.advanced.compare.select.prompt\\']}}</option>\\r\\n\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t<div\\r\\n\\t\\t\\t\\t\\tui-slider\\r\\n\\t\\t\\t\\t\\tname=\"sensorValue\"\\r\\n\\t\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\t\\tstyle=\"width: 75%\"\\r\\n\\t\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\t\\tmin=\"{{sensor.value_type.minValue}}\"\\r\\n\\t\\t\\t\\t\\tmax=\"{{sensor.value_type.maxValue}}\"\\r\\n\\t\\t\\t\\t\\tstep=\"{{math.pow(10, -1 * sensor.value_type.precision)}}\"\\r\\n\\t\\t\\t\\t\\tng-model=\"trigger.sensorValue\"></div>\\r\\n\\t\\t\\t\\t<div\\r\\n\\t\\t\\t\\t\\tng-if=\"sensor.value_type.type==\\'ContinuousValueType\\'\"\\r\\n\\t\\t\\t\\t\\tclass=\"input-group-addon\">{{trigger.sensorValue}}</div>\\r\\n\\t\\t\\t\\t<div\\r\\n\\t\\t\\t\\t\\tng-if=\"sensor.value_type.type==\\'DiscreteValueType\\'\"\\r\\n\\t\\t\\t\\t\\tclass=\"input-group-addon\">TODO: Discrete Values</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t</accordion-group> </accordion>\\r\\n\\t</div>\\r\\n</div>';});\n\n","'use strict';\r\n\r\ndefine('triggers/directives/SensorValueEditor',['require','angular','text!./sensorValueEditor.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar template = require('text!./sensorValueEditor.tpl.html');\r\n\r\n\tvar SensorValueEditor = function(Sensor, modelBuilder, language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\tsensor : \"=\",\r\n\t\t\t\ttrigger : \"=\",\r\n\t\t\t\tcurrentValue : \"=value\",\r\n\t\t\t},\r\n\t\t\tlink : function(scope, iElement, iAttrs, controller) {\r\n\t\t\t\tscope.comparisons = [ {\r\n\t\t\t\t\tname : 'less than',\r\n\t\t\t\t\tcompare : '<'\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname : 'less or equal to',\r\n\t\t\t\t\tcompare : '<='\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname : 'exactly',\r\n\t\t\t\t\tcompare : '=='\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname : 'greater or equal to',\r\n\t\t\t\t\tcompare : '>='\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname : 'greater than',\r\n\t\t\t\t\tcompare : '>'\r\n\t\t\t\t} ];\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope, $window) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t\t$scope.Math = $window.Math;\r\n\t\t\t\t$scope.sensor = null;\r\n\t\t\t\t$scope.basicopen = false;\r\n\t\t\t\t$scope.advancedopen = true;\r\n\t\t\t\t$scope.$watch('trigger.sensorValue', function(value) {\r\n\t\t\t\t\tif (value !== undefined && value !== null) {\r\n\t\t\t\t\t\t$scope.basicopen = value.indexOf !== undefined && value.indexOf('eval::') === 0;\r\n\t\t\t\t\t\t$scope.advancedopen = !$scope.basicopen;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t$scope.$watch('sensor', function(sensor) {\r\n\t\t\t\t\tif (sensor !== undefined && sensor.id !== undefined) {\r\n\t\t\t\t\t\tif (sensor._link === undefined) {\r\n\t\t\t\t\t\t\t$scope.sensor = Sensor.get({\r\n\t\t\t\t\t\t\t\tid : sensor.id\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t$scope.sensor.$promise.then(function(sensor) {\r\n\t\t\t\t\t\t\t\tif ($scope.sensor !== undefined) {\r\n\t\t\t\t\t\t\t\t\t$scope.sensor = $scope.sensor.getConcreteClassInstance();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar Model = modelBuilder.getModel(sensor._link.model);\r\n\t\t\t\t\t\t\t$scope.model = Model.get({\r\n\t\t\t\t\t\t\t\tid : $scope.model\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ 'Sensor', 'modelBuilder', 'language', SensorValueEditor ];\r\n});\r\n\n","\ndefine('text!triggers/directives/timeTriggerEditor.tpl.html',[],function () { return '<form\\r\\n\\tname=\"timeTriggerForm\"\\r\\n\\tmodel=\"time\">\\r\\n\\t<div class=\"row\">\\r\\n\\t\\t<div class=\"col-lg-12\">\\r\\n\\t\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'trigger.time.name\\']}}</span>\\r\\n\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\ttype=\"text\"\\r\\n\\t\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\t\\tplaceholder=\"Time Trigger Name\"\\r\\n\\t\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\t\\tname=\"name\"\\r\\n\\t\\t\\t\\t\\tng-model=\"time.name\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'trigger.time.action\\']}}</span>\\r\\n\\t\\t\\t\\t<select\\r\\n\\t\\t\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\t\\t\\tng-model=\"time.action_id\"\\r\\n\\t\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\t\\tname=\"actionId\"\\r\\n\\t\\t\\t\\t\\tng-options=\"action.id as action.name group by action.type for action in actions | orderBy:\\'name\\'\">\\r\\n\\t\\t\\t\\t\\t<option value=\"\">{{language[\\'trigger.time.action.select.prompt\\']}}</option>\\r\\n\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'trigger.time.trigger\\']}}</span>\\r\\n\\t\\t\\t\\t<select\\r\\n\\t\\t\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\t\\t\\tng-model=\"time.trigger_id\"\\r\\n\\t\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\t\\tname=\"triggerId\"\\r\\n\\t\\t\\t\\t\\tng-options=\"trigger.id as trigger.name group by trigger.type for trigger in triggers | orderBy:\\'name\\'\">\\r\\n\\t\\t\\t\\t\\t<option value=\"\">{{language[\\'trigger.time.trigger.select.prompt\\']}}</option>\\r\\n\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\"row\">\\r\\n\\t\\t<div class=\"col-lg-12\">\\r\\n\\t\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t\\t<div class=\"input-group-addon inputLabel\">{{language[\\'trigger.time.time\\']}}</div>\\r\\n\\t\\t\\t\\t<span class=\"input-group-btn\">\\r\\n\\t\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\"btn btn-primary\"\\r\\n\\t\\t\\t\\t\\t\\tng-model=\"time.mustStayActive\"\\r\\n\\t\\t\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\t\\t\\tname=\"whileActive\"\\r\\n\\t\\t\\t\\t\\t\\tbtn-radio=\"true\">{{language[\\'trigger.time.time.while\\']}}</button>\\r\\n\\t\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\"btn btn-primary\"\\r\\n\\t\\t\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\t\\t\\tname=\"stayActive\"\\r\\n\\t\\t\\t\\t\\t\\tng-model=\"time.mustStayActive\"\\r\\n\\t\\t\\t\\t\\t\\tbtn-radio=\"false\">{{language[\\'trigger.time.time.since\\']}}</button>\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t<div\\r\\n\\t\\t\\t\\t\\tui-slider\\r\\n\\t\\t\\t\\t\\tname=\"time\"\\r\\n\\t\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\t\\tmin=\"0\"\\r\\n\\t\\t\\t\\t\\tmax=\"300\"\\r\\n\\t\\t\\t\\t\\tng-model=\"time.time\"\\r\\n\\t\\t\\t\\t\\tstep=\"1\"></div>\\r\\n\\t\\t\\t\\t<div class=\"input-group-addon\">{{time.time}}\\r\\n\\t\\t\\t\\t\\t{{language[\\'trigger.time.time.units\\']}} &#177;</div>\\r\\n\\t\\t\\t\\t<div\\r\\n\\t\\t\\t\\t\\tui-slider\\r\\n\\t\\t\\t\\t\\tname=\"variance\"\\r\\n\\t\\t\\t\\t\\tsaveable\\r\\n\\t\\t\\t\\t\\trequired\\r\\n\\t\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\t\\tmin=\"0\"\\r\\n\\t\\t\\t\\t\\tmax=\"{{time.time}}\"\\r\\n\\t\\t\\t\\t\\tng-model=\"time.variance\"\\r\\n\\t\\t\\t\\t\\tstep=\"1\"></div>\\r\\n\\t\\t\\t\\t<div class=\"input-group-addon\">{{time.variance}}\\r\\n\\t\\t\\t\\t\\t{{language[\\'trigger.time.time.units\\']}}</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</form>';});\n\n","'use strict';\r\n\r\ndefine('triggers/directives/TimeTriggerEditor',['require','angular','triggers/models','text!./timeTriggerEditor.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('triggers/models');\r\n\tvar template = require('text!./timeTriggerEditor.tpl.html');\r\n\r\n\tvar TimeTriggerEditor = function(language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\ttime : \"=trigger\",\r\n\t\t\t\tactions : \"=\",\r\n\t\t\t\ttriggers : \"=\",\r\n\t\t\t},\r\n\t\t\tlink : function(scope, iElement, iAttrs, controller) {\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t\t$scope.addTriggers = function(triggers) {\r\n\t\t\t\t\tif ($scope.time.triggers === undefined) {\r\n\t\t\t\t\t\t$scope.time.triggers = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (var i = 0; i < triggers.length; i++) {\r\n\t\t\t\t\t\t$scope.time.triggers.push(triggers[i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsave();\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar save = function() {\r\n\t\t\t\t\tvar selfIndex = -1;\r\n\t\t\t\t\tif ($scope.time.id !== undefined) {\r\n\t\t\t\t\t\tfor (var i = 0; i < $scope.time.triggers.length; i++) {\r\n\t\t\t\t\t\t\tif ($scope.time.triggers[i].id === $scope.time.id) {\r\n\t\t\t\t\t\t\t\tselfIndex = i;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tselfIndex = $scope.time.triggers.indexOf($scope.time);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (selfIndex >= 0) {\r\n\t\t\t\t\t\t$scope.time.triggers.splice(selfIndex, 1);\r\n\t\t\t\t\t\t$scope.time.selfRef = true;\r\n\t\t\t\t\t\t$scope.time.$save(function() {\r\n\t\t\t\t\t\t\tselfIndex = -1;\r\n\t\t\t\t\t\t\tfor (var i = 0; i < $scope.time.triggers.length; i++) {\r\n\t\t\t\t\t\t\t\tif ($scope.time.triggers[i].id === $scope.time.id) {\r\n\t\t\t\t\t\t\t\t\tselfIndex = i;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (selfIndex < 0) {\r\n\t\t\t\t\t\t\t\t$scope.time.triggers.push($scope.time);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$scope.time.$save();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.removeTriggers = function(triggers) {\r\n\t\t\t\t\tfor (var i = 0; i < triggers.length; i++) {\r\n\t\t\t\t\t\t$scope.time.triggers.splice($scope.time.triggers.indexOf(triggers[i]), 1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsave();\r\n\t\t\t\t};\r\n\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n\treturn ['language', TimeTriggerEditor];\r\n});\r\n\n","\ndefine('text!triggers/directives/triggerEditor.tpl.html',[],function () { return '<buttontrigger-editor\\r\\n\\tng-if=\"trigger.type==\\'ButtonTrigger\\'\"\\r\\n\\ttrigger=\"trigger\"\\r\\n\\tactions=\"actions\"></buttontrigger-editor>\\r\\n<compoundtrigger-editor\\r\\n\\tng-if=\"trigger.type==\\'CompoundTrigger\\'\"\\r\\n\\ttrigger=\"trigger\"\\r\\n\\ttriggers=\"triggers\"\\r\\n\\tactions=\"actions\"></compoundtrigger-editor>\\r\\n<sensortrigger-editor\\r\\n\\tng-if=\"trigger.type==\\'SensorTrigger\\'\"\\r\\n\\ttrigger=\"trigger\"\\r\\n\\tactions=\"actions\"></sensortrigger-editor>\\r\\n<timetrigger-editor\\r\\n\\tng-if=\"trigger.type==\\'TimeTrigger\\'\"\\r\\n\\ttrigger=\"trigger\"\\r\\n\\ttriggers=\"triggers\"\\r\\n\\tactions=\"actions\"></timetrigger-editor>';});\n\n","'use strict';\r\n\r\ndefine('triggers/directives/TriggerEditor',['require','angular','text!./triggerEditor.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar template = require('text!./triggerEditor.tpl.html');\r\n\r\n\tvar TriggerEditor = function($compile, language) {\r\n\t\treturn {\r\n\t\t\ttemplate: template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\ttrigger : \"=\",\r\n\t\t\t\ttriggers : \"=\",\r\n\t\t\t\tactions : \"=\",\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ '$compile', 'language', TriggerEditor ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('triggers/directives',['require','angular','common/i18n/languageServices','common/services/displayServices','common/filters','triggers/models','robots/models','./directives/ButtonTriggerEditor','./directives/CompoundTriggerEditor','./directives/HotkeyEditor','./directives/SensorTriggerEditor','./directives/SensorValueEditor','./directives/TimeTriggerEditor','./directives/TriggerEditor'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar languageServices = require('common/i18n/languageServices');\r\n\tvar displayServices = require('common/services/displayServices');\r\n\tvar filters = require('common/filters');\r\n\tvar triggerModels = require('triggers/models');\r\n\tvar robotModels = require('robots/models');\r\n\tvar ButtonTriggerEditor = require('./directives/ButtonTriggerEditor');\r\n\tvar CompoundTriggerEditor = require('./directives/CompoundTriggerEditor');\r\n\tvar HotkeyEditor = require('./directives/HotkeyEditor');\r\n\tvar SensorTriggerEditor = require('./directives/SensorTriggerEditor');\r\n\tvar SensorValueEditor = require('./directives/SensorValueEditor');\r\n\tvar TimeTriggerEditor = require('./directives/TimeTriggerEditor');\r\n\tvar TriggerEditor = require('./directives/TriggerEditor');\r\n\r\n\tvar moduleName = 'kasparGUI.triggers.directives';\r\n\tvar dependancies = [\r\n\t\t\t\t\t\tdisplayServices,\r\n\t\t\t\t\t\tlanguageServices,\r\n\t\t\t\t\t\tfilters,\r\n\t\t\t\t\t\trobotModels,\r\n\t\t\t\t\t\ttriggerModels,\r\n\t\t\t\t\t\t];\r\n\t\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.directive('buttontriggerEditor', ButtonTriggerEditor)\r\n\t\t.directive('compoundtriggerEditor', CompoundTriggerEditor)\r\n\t\t.directive('hotkeyEditor', HotkeyEditor)\r\n\t\t.directive('sensortriggerEditor', SensorTriggerEditor)\r\n\t\t.directive('sensorValueEditor', SensorValueEditor)\r\n\t\t.directive('timetriggerEditor', TimeTriggerEditor)\r\n\t\t.directive('triggerEditor', TriggerEditor);\r\n\r\n\treturn moduleName;\r\n});\t\t\r\n\n","'use strict';\r\n\r\ndefine('triggers/TriggerController',['require','angular','actions/models','triggers/models','robots/models'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('actions/models');\r\n\trequire('triggers/models');\r\n\trequire('robots/models');\r\n\r\n\tvar TriggerController = function($scope, $http, Action, Trigger, TriggerType, Robot, language) {\r\n\t\t$scope.language = language.getText();\r\n\t\t$scope.triggers = Trigger.query();\r\n\t\t$scope.actions = Action.query();\r\n\t\t$scope.types = TriggerType.query();\r\n\t\t$scope.newobjs = [];\r\n\r\n\t\t$scope.setFiles = function(element) {\r\n\t\t\t$scope.$apply(function($scope) {\r\n\t\t\t\t$scope.files = element.files;\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\t$scope.$watch('trigger', function(action) {\r\n\t\t\tif (action !== undefined) {\r\n\t\t\t\tvar abstractTrigger = $scope.trigger;\r\n\t\t\t\tvar concreteTrigger = $scope.trigger.getConcreteClassInstance();\r\n\t\t\t\tconcreteTrigger.$promise.then(function(){ \r\n\t\t\t\t\t$scope.triggers[$scope.triggers.indexOf(abstractTrigger)] = concreteTrigger;\r\n\t\t\t\t\t$scope.trigger = concreteTrigger;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t$scope.newTrigger = function() {\r\n\t\t\t$scope.trigger = new Trigger();\r\n\t\t\t$scope.triggers.push($scope.trigger);\r\n\t\t};\r\n\r\n\t\t$scope.deleteTrigger = function(trigger) {\r\n\t\t\t$scope.triggers.splice($scope.triggers.indexOf(trigger), 1);\r\n\t\t\t$scope.trigger = $scope.triggers[0];\r\n\t\t\ttrigger.$delete();\r\n\t\t};\r\n\r\n\t\tvar errorFunc = function(status) {\r\n\t\t\tconsole.log(\"Error sending file:\" + status);\r\n\t\t};\r\n\t\t\r\n\t\tvar successFunc = function(data, status, headers, config) {\r\n\t\t\t$scope.newobjs.push(data);\r\n\t\t};\r\n\t\t\r\n\t\t$scope.importFiles = function(files) {\r\n\t\t\tfor (var i = 0; i < files.length; i++) {\r\n\t\t\t\tvar fd = new FormData();\r\n\t\t\t\tfd.append(\"data\", files[i]);\r\n\r\n\t\t\t\tvar obj = $http.post('/api/Trigger/import', fd, {\r\n\t\t\t\t\theaders : {\r\n\t\t\t\t\t\t'Content-Type' : undefined\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttransformRequest : angular.identity\r\n\t\t\t\t}).success(successFunc).error(errorFunc);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ '$scope', '$http', 'Action', 'Trigger', 'TriggerType', 'Robot', 'language', TriggerController ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('triggers/controllers',['require','angular','common/i18n/languageServices','actions/models','triggers/models','triggers/directives','./TriggerController'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar languageServices = require('common/i18n/languageServices');\r\n\tvar actionModels = require('actions/models');\r\n\tvar triggerModels = require('triggers/models');\r\n\tvar triggerDirectives = require('triggers/directives');\r\n\tvar TriggerController = require('./TriggerController');\r\n\t\r\n\tvar moduleName = 'kasparGUI.triggers.controllers';\r\n\tvar dependancies = [\r\n\t\t\t\t\t\tactionModels,\r\n\t\t\t\t\t\tlanguageServices,\r\n\t\t\t\t\t\ttriggerModels,\r\n\t\t\t\t\t\ttriggerDirectives,\r\n\t\t\t\t\t\t];\r\n\t\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.controller('triggerController', TriggerController);\r\n\r\n\treturn moduleName;\r\n});\t\r\n\n","\ndefine('text!triggers/index.tpl.html',[],function () { return '<ui-view />';});\n\n","\ndefine('text!triggers/triggerEdit.tpl.html',[],function () { return '<div\\r\\n\\tid=\"triggersList\">\\r\\n\\t<div class=\"input-group\">\\r\\n\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'trigger.label\\']}}</span>\\r\\n\\t\\t<select\\r\\n\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\tng-model=\"trigger\"\\r\\n\\t\\t\\tng-disabled=\"triggers.length == 0\"\\r\\n\\t\\t\\tng-options=\"item.name group by item.type for item in triggers | orderBy:\\'name\\'\">\\r\\n\\t\\t\\t<option value=\"\">{{language[\\'trigger.select.prompt\\']}}</option>\\r\\n\\t\\t</select>\\r\\n\\t\\t<span class=\"input-group-btn\">\\r\\n\\t\\t\\t<button\\r\\n\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\tng-click=\"newTrigger()\">{{language[\\'trigger.new\\']}}</button>\\r\\n\\t\\t\\t<button\\r\\n\\t\\t\\t\\tng-disabled=\"!trigger\"\\r\\n\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\tng-click=\"deleteTrigger(trigger)\">{{language[\\'trigger.delete\\']}}</button>\\r\\n\\t\\t</span>\\r\\n\\t</div>\\r\\n\\t<div ng-show=\"trigger\">\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'trigger.type.label\\']}}</span>\\r\\n\\t\\t\\t<select\\r\\n\\t\\t\\t\\tng-disabled=\"trigger.id\"\\r\\n\\t\\t\\t\\tclass=\"selectpicker form-control\"\\r\\n\\t\\t\\t\\tng-model=\"trigger.type\"\\r\\n\\t\\t\\t\\tng-options=\"type.name as type.disp for type in types | orderBy:\\'type.disp\\'\">\\r\\n\\t\\t\\t\\t<option value=\"\">{{language[\\'trigger.type.select.prompt\\']}}</option>\\r\\n\\t\\t\\t</select>\\r\\n\\t\\t</div>\\r\\n\\t\\t<trigger-editor\\r\\n\\t\\t\\ttrigger=\"trigger\"\\r\\n\\t\\t\\tactions=\"actions\"\\r\\n\\t\\t\\ttriggers=\"triggers\"></trigger-editor>\\r\\n\\t</div>\\r\\n</div>';});\n\n","\ndefine('text!triggers/triggerTest.tpl.html',[],function () { return '<h3 class=\"text-center\">Trigger Test Window</h3>\\r\\n<div>Test trigger conditions without running action</div>\\r\\n<div>\\r\\n\\t<strong>TODO</strong>\\r\\n\\t<ul>\\r\\n\\t\\t<li><strong> Will need to revisit after all triggers are\\r\\n\\t\\t\\t\\tavailable </strong></li>\\r\\n\\t</ul>\\r\\n</div>';});\n\n","\ndefine('text!triggers/triggerImport.tpl.html',[],function () { return '<div>\\r\\n\\t<div class=\"btn-group\">\\r\\n\\t\\t<div class=\"input-group\">\\r\\n\\t\\t\\t<span class=\"input-group-addon inputLabel\">{{language[\\'trigger.import.selectFiles\\']}}</span>\\r\\n\\t\\t\\t<input\\r\\n\\t\\t\\t\\tclass=\"form-control\"\\r\\n\\t\\t\\t\\ttype=\"file\"\\r\\n\\t\\t\\t\\tmultiple=\"multiple\"\\r\\n\\t\\t\\t\\tonchange=\"angular.element(this).scope().setFiles(this)\" />\\r\\n\\t\\t\\t<span class=\"input-group-btn\">\\r\\n\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\tclass=\"btn btn-default\"\\r\\n\\t\\t\\t\\t\\ttype=\"button\"\\r\\n\\t\\t\\t\\t\\tng-click=\"importFiles(files)\">{{language[\\'trigger.import.upload\\']}}</button>\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div>\\r\\n\\t\\t<div ng-repeat=\"obj in newobjs\">{{obj}}</div>\\r\\n\\t</div>\\r\\n</div>';});\n\n","'use strict';\r\n\r\ndefine('categories/trigger',['require','angular','angularUIRouter','triggers/controllers','text!triggers/index.tpl.html','text!triggers/triggerEdit.tpl.html','text!triggers/triggerTest.tpl.html','text!triggers/triggerImport.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar uiRouter = require('angularUIRouter');\r\n\tvar triggerControllers = require('triggers/controllers');\r\n\tvar defaultTemplate = require('text!triggers/index.tpl.html');\r\n\tvar editTemplate = require('text!triggers/triggerEdit.tpl.html');\r\n\tvar testTemplate = require('text!triggers/triggerTest.tpl.html');\r\n\tvar importTemplate = require('text!triggers/triggerImport.tpl.html');\r\n\r\n\tvar moduleName = 'kasparGUI.menu.trigger';\r\n\tvar dependancies = [ uiRouter, triggerControllers, ];\r\n\r\n\tvar Routes = function($stateProvider, $urlRouterProvider) {\r\n\t\t$urlRouterProvider.otherwise(\"/\");\r\n\t\t$stateProvider.state('trigger', {\r\n\t\t\turl : '/trigger',\r\n\t\t\ttemplate : defaultTemplate,\r\n\t\t\tabstract : true,\r\n\t\t}).state('trigger.edit', {\r\n\t\t\turl : '{id:(?:/[0-9]{1,8})?}/edit',\r\n\t\t\ttemplate : editTemplate,\r\n\t\t\tcontroller : 'triggerController',\r\n\t\t}).state('trigger.test', {\r\n\t\t\turl : '{id:(?:/[0-9]{1,8})?}/test',\r\n\t\t\ttemplate : testTemplate,\r\n\t\t\tcontroller : 'triggerController',\r\n\t\t}).state('trigger.import', {\r\n\t\t\turl : '/import',\r\n\t\t\ttemplate : importTemplate,\r\n\t\t\tcontroller : 'triggerController',\r\n\t\t});\r\n\t};\r\n\r\n\tvar module = angular.module(moduleName, dependancies);\r\n\tmodule.config([ '$stateProvider', '$urlRouterProvider', Routes ]);\r\n\treturn moduleName;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('common/directives/KeyBinding',['require','angular','mousetrap'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar Mousetrap = require('mousetrap');\r\n\r\n\tvar KeyBinding = function($timeout) {\r\n\t\treturn {\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {\r\n\t\t\t\tinvoke : '&'\r\n\t\t\t},\r\n\t\t\tlink : function(scope, element, attrs, controller) {\r\n\t\t\t\tif (attrs.button) {\r\n\t\t\t\t\tMousetrap.bind(attrs.on, function() {\r\n\t\t\t\t\t\tscope.invoke();\r\n\t\t\t\t\t\tvar elem = angular.element(element).parent().find(attrs.button);\r\n\t\t\t\t\t\tif (elem) {\r\n\t\t\t\t\t\t\telem.addClass('active');\r\n\t\t\t\t\t\t\t$timeout(elem.removeClass('active'), 2000);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tMousetrap.bind(attrs.on, scope.invoke);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ '$timeout', KeyBinding ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('common/directives/Model',['require','angular'],function(require) {\r\n\tvar angular = require('angular');\r\n\r\n\tvar Model = function(modelBuilder) {\r\n\t\treturn {\r\n\t\t\trestrict : 'A',\r\n\t\t\trequire : 'form',\r\n\t\t\tlink : function(scope, element, attrs, controller) {\r\n\t\t\t\tscope.formCtrl = controller;\r\n\t\t\t\tattrs.$observe('model', function(modelName) {\r\n\t\t\t\t\tscope.$watch(modelName, function(modelInstance) {\r\n\t\t\t\t\t\tscope.model = modelInstance;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tcontroller : function($scope) {\r\n\t\t\t\tthis.updateObj = function(modelCtrl) {\r\n\t\t\t\t\tif ($scope.formCtrl.$valid) {\r\n\t\t\t\t\t\tif ($scope.model.$save === undefined) {\r\n\t\t\t\t\t\t\tif ($scope.model._link !== undefined) {\r\n\t\t\t\t\t\t\t\tvar Model = modelBuilder.getModel($scope.model._link.model);\r\n\t\t\t\t\t\t\t\t$scope.model = new Model($scope.model);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// TODO: Error handling\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$scope.model.$save().then(function() {\r\n\t\t\t\t\t\t\tmodelCtrl.$setPristine();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.newObj = function(Type) {\r\n\t\t\t\t\tvar newO = new Type();\r\n\t\t\t\t\t// if (list !== undefined) {\r\n\t\t\t\t\t// list.push(newO);\r\n\t\t\t\t\t// }\r\n\t\t\t\t\treturn newO;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.deleteObj = function(item) {\r\n\t\t\t\t\treturn item.$delete(function() {\r\n\t\t\t\t\t\t// var select = null;\r\n\t\t\t\t\t\t// if (list !== undefined) {\r\n\t\t\t\t\t\t// list.splice(list.indexOf(item), 1);\r\n\t\t\t\t\t\t// if (list.length > 0) {\r\n\t\t\t\t\t\t// select = list[0];\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\t// return select;\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ 'modelBuilder', Model ];\r\n});\r\n\n","\ndefine('text!common/directives/navbar.tpl.html',[],function () { return '<div\\r\\n\\tclass=\"col-sm-3 col-md-2 col-lg-2 maxHeight scrollable hidden-print navbar\">\\r\\n\\t<div class=\"panel-group\">\\r\\n\\t\\t<div\\r\\n\\t\\t\\tclass=\"panel panel-default\"\\r\\n\\t\\t\\tng-repeat=\"group in groups | orderBy:\\'order\\'\">\\r\\n\\t\\t\\t<div class=\"panel-heading\">\\r\\n\\t\\t\\t\\t<h4 class=\"panel-title\">{{getText(group.title)}}</h4>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\"nav-collapse in\">\\r\\n\\t\\t\\t\\t<div\\r\\n\\t\\t\\t\\t\\tng-repeat=\"link in group.links | orderBy:\\'order\\'\"\\r\\n\\t\\t\\t\\t\\tui-sref-active=\"highlight\">\\r\\n\\t\\t\\t\\t\\t<a ui-sref=\"{{link.path}}\">{{getText(link.title)}}</a>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>';});\n\n","'use strict';\r\n\r\ndefine('common/directives/Navbar',['require','angular','angularUIRouter','common/models','text!./navbar.tpl.html'],function(require) {\r\n\tvar angular = require('angular');\r\n\trequire('angularUIRouter');\r\n\tvar commonModels = require('common/models');\r\n\tvar template = require('text!./navbar.tpl.html');\r\n\r\n\tvar Navbar = function(Menu, language) {\r\n\t\treturn {\r\n\t\t\ttemplate : template,\r\n\t\t\trestrict : 'E',\r\n\t\t\tscope : {},\r\n\t\t\tcontroller : function($scope, language) {\r\n\t\t\t\t$scope.language = language.getText();\r\n\t\t\t\t$scope.groups = Menu.query();\r\n\t\t\t\t\r\n\t\t\t\t$scope.getText = function(key) {\r\n\t\t\t\t\t//Not sure why this doesn't work from the view\r\n\t\t\t\t\treturn $scope.language[key];\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ 'Menu', 'language', Navbar ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('common/directives/NotEmpty',['require','angular'],function(require) {\r\n\tvar angular = require('angular');\r\n\r\n\tvar NotEmpty = function() {\r\n\t\treturn {\r\n\t\t\trestrict : 'A',\r\n\t\t\trequire : 'ngModel',\r\n\t\t\tlink : function(scope, element, attrs, controller) {\r\n\t\t\t\tcontroller.$parsers.unshift(function(value) {\r\n\t\t\t\t\tif (value === undefined || value === \"\") {\r\n\t\t\t\t\t\tcontroller.$setValidity('notEmpty', false);\r\n\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontroller.$setValidity('notEmpty', true);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn NotEmpty;\r\n});\r\n\n","'use strict';\r\n\r\ndefine('common/directives/Saveable',['require','angular'],function(require) {\r\n\tvar angular = require('angular');\r\n\r\n\tvar Saveable = function($compile, $timeout) {\r\n\t\treturn {\r\n\t\t\trestrict : 'A',\r\n\t\t\trequire : [ 'ngModel', '^form', '^model' ],\r\n\t\t\tlink : function(scope, element, attrs, controllers) {\r\n\t\t\t\tvar name = controllers[1].$name + \".\" + controllers[0].$name;\r\n\t\t\t\tvar updateCalled = false;\r\n\t\t\t\tvar parentElement = angular.element(element[0].parentElement);\r\n\t\t\t\tvar modelCtrl = controllers[0];\r\n\t\t\t\tvar saveCtrl = controllers[2];\r\n\r\n\t\t\t\tscope.$watch(name + '.$dirty', function(value) {\r\n\t\t\t\t\tif (value) {\r\n\t\t\t\t\t\tparentElement.addClass('has-warning');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tparentElement.removeClass('has-warning');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tscope.$watch(name + '.$valid', function(value) {\r\n\t\t\t\t\tif (modelCtrl.$dirty) {\r\n\t\t\t\t\t\tif (value) {\r\n\t\t\t\t\t\t\tparentElement.removeClass('has-error');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tparentElement.addClass('has-error');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tscope.$watch(name + '.$pristine', function(value) {\r\n\t\t\t\t\tif (!value) {\r\n\t\t\t\t\t\tparentElement.removeClass('has-success');\r\n\t\t\t\t\t} else if (updateCalled) {\r\n\t\t\t\t\t\t// uiMessages.transitionElement()\r\n\t\t\t\t\t\tparentElement.addClass('has-success');\r\n\t\t\t\t\t\t$timeout(function() {\r\n\t\t\t\t\t\t\tparentElement.removeClass('has-success');\r\n\t\t\t\t\t\t}, 2000);\r\n\t\t\t\t\t\tupdateCalled = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar callUpdate = function() {\r\n\t\t\t\t\tif (modelCtrl.$dirty && modelCtrl.$valid) {\r\n\t\t\t\t\t\tsaveCtrl.updateObj(modelCtrl);\r\n\t\t\t\t\t\tupdateCalled = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\telement[0].addEventListener('blur', function() {\r\n\t\t\t\t\tcallUpdate();\r\n\t\t\t\t}, true);\r\n\r\n\t\t\t\telement.on('keyup', function($event) {\r\n\t\t\t\t\tvar code = $event.which || $event.keyCode; // Not-IE ||\r\n\t\t\t\t\t// IE\r\n\t\t\t\t\tif (code == 13) { // enter key\r\n\t\t\t\t\t\tcallUpdate();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn [ '$compile', '$timeout', Saveable ];\r\n});\r\n\n","'use strict';\r\n\r\ndefine('common/directives',['require','angular','common/i18n/languageServices','common/services/displayServices','common/filters','./directives/KeyBinding','./directives/Model','./directives/Navbar','./directives/NotEmpty','./directives/Saveable'],function(require) {\r\n\tvar angular = require('angular');\r\n\tvar languageServices = require('common/i18n/languageServices');\r\n\tvar displayServices = require('common/services/displayServices');\r\n\tvar filters = require('common/filters');\r\n\tvar KeyBinding = require('./directives/KeyBinding');\r\n\tvar Model = require('./directives/Model');\r\n\tvar Navbar = require('./directives/Navbar');\r\n\tvar NotEmpty = require('./directives/NotEmpty');\r\n\tvar Saveable = require('./directives/Saveable');\r\n\r\n\tvar moduleName = 'kasparGUI.common.directives';\r\n\tvar dependancies = [\r\n\t\t\t\t\t\tdisplayServices,\r\n\t\t\t\t\t\tlanguageServices,\r\n\t\t\t\t\t\tfilters,\r\n\t\t\t\t\t\t];\r\n\t\r\n\tvar module = angular.module(moduleName, dependancies)\r\n\t\t.directive('keybinding', KeyBinding)\r\n\t\t.directive('model', Model)\r\n\t\t.directive('navbar', Navbar)\r\n\t\t.directive('notEmpty', NotEmpty)\r\n\t\t.directive('saveable', Saveable);\r\n\r\n\treturn moduleName;\r\n});\t\t\r\n\n"]}