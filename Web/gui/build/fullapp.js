!function(){define("text",["module"],function(module){var text,fs,Cc,Ci,xpcIsWindows,progIds=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"],xmlRegExp=/^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,bodyRegExp=/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,hasLocation="undefined"!=typeof location&&location.href,defaultProtocol=hasLocation&&location.protocol&&location.protocol.replace(/\:/,""),defaultHostName=hasLocation&&location.hostname,defaultPort=hasLocation&&(location.port||void 0),buildMap={},masterConfig=module.config&&module.config()||{};return text={version:"2.0.12",strip:function(content){if(content){content=content.replace(xmlRegExp,"");var matches=content.match(bodyRegExp);matches&&(content=matches[1])}else content="";return content},jsEscape:function(content){return content.replace(/(['\\])/g,"\\$1").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r").replace(/[\u2028]/g,"\\u2028").replace(/[\u2029]/g,"\\u2029")},createXhr:masterConfig.createXhr||function(){var xhr,i,progId;if("undefined"!=typeof XMLHttpRequest)return new XMLHttpRequest;if("undefined"!=typeof ActiveXObject)for(i=0;3>i;i+=1){progId=progIds[i];try{xhr=new ActiveXObject(progId)}catch(e){}if(xhr){progIds=[progId];break}}return xhr},parseName:function(name){var modName,ext,temp,strip=!1,index=name.indexOf("."),isRelative=0===name.indexOf("./")||0===name.indexOf("../");return-1!==index&&(!isRelative||index>1)?(modName=name.substring(0,index),ext=name.substring(index+1,name.length)):modName=name,temp=ext||modName,index=temp.indexOf("!"),-1!==index&&(strip="strip"===temp.substring(index+1),temp=temp.substring(0,index),ext?ext=temp:modName=temp),{moduleName:modName,ext:ext,strip:strip}},xdRegExp:/^((\w+)\:)?\/\/([^\/\\]+)/,useXhr:function(url,protocol,hostname,port){var uProtocol,uHostName,uPort,match=text.xdRegExp.exec(url);return match?(uProtocol=match[2],uHostName=match[3],uHostName=uHostName.split(":"),uPort=uHostName[1],uHostName=uHostName[0],!(uProtocol&&uProtocol!==protocol||uHostName&&uHostName.toLowerCase()!==hostname.toLowerCase()||(uPort||uHostName)&&uPort!==port)):!0},finishLoad:function(name,strip,content,onLoad){content=strip?text.strip(content):content,masterConfig.isBuild&&(buildMap[name]=content),onLoad(content)},load:function(name,req,onLoad,config){if(config&&config.isBuild&&!config.inlineText)return void onLoad();masterConfig.isBuild=config&&config.isBuild;var parsed=text.parseName(name),nonStripName=parsed.moduleName+(parsed.ext?"."+parsed.ext:""),url=req.toUrl(nonStripName),useXhr=masterConfig.useXhr||text.useXhr;return 0===url.indexOf("empty:")?void onLoad():void(!hasLocation||useXhr(url,defaultProtocol,defaultHostName,defaultPort)?text.get(url,function(content){text.finishLoad(name,parsed.strip,content,onLoad)},function(err){onLoad.error&&onLoad.error(err)}):req([nonStripName],function(content){text.finishLoad(parsed.moduleName+"."+parsed.ext,parsed.strip,content,onLoad)}))},write:function(pluginName,moduleName,write){if(buildMap.hasOwnProperty(moduleName)){var content=text.jsEscape(buildMap[moduleName]);write.asModule(pluginName+"!"+moduleName,"define(function () { return '"+content+"';});\n")}},writeFile:function(pluginName,moduleName,req,write,config){var parsed=text.parseName(moduleName),extPart=parsed.ext?"."+parsed.ext:"",nonStripName=parsed.moduleName+extPart,fileName=req.toUrl(parsed.moduleName+extPart)+".js";text.load(nonStripName,req,function(){var textWrite=function(contents){return write(fileName,contents)};textWrite.asModule=function(moduleName,contents){return write.asModule(moduleName,fileName,contents)},text.write(pluginName,nonStripName,textWrite,config)},config)}},"node"===masterConfig.env||!masterConfig.env&&"undefined"!=typeof process&&process.versions&&process.versions.node&&!process.versions["node-webkit"]?(fs=require.nodeRequire("fs"),text.get=function(url,callback,errback){try{var file=fs.readFileSync(url,"utf8");0===file.indexOf("ï»¿")&&(file=file.substring(1)),callback(file)}catch(e){errback&&errback(e)}}):"xhr"===masterConfig.env||!masterConfig.env&&text.createXhr()?text.get=function(url,callback,errback,headers){var header,xhr=text.createXhr();if(xhr.open("GET",url,!0),headers)for(header in headers)headers.hasOwnProperty(header)&&xhr.setRequestHeader(header.toLowerCase(),headers[header]);masterConfig.onXhr&&masterConfig.onXhr(xhr,url),xhr.onreadystatechange=function(){var status,err;4===xhr.readyState&&(status=xhr.status||0,status>399&&600>status?(err=new Error(url+" HTTP status: "+status),err.xhr=xhr,errback&&errback(err)):callback(xhr.responseText),masterConfig.onXhrComplete&&masterConfig.onXhrComplete(xhr,url))},xhr.send(null)}:"rhino"===masterConfig.env||!masterConfig.env&&"undefined"!=typeof Packages&&"undefined"!=typeof java?text.get=function(url,callback){var stringBuffer,line,encoding="utf-8",file=new java.io.File(url),lineSeparator=java.lang.System.getProperty("line.separator"),input=new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file),encoding)),content="";try{for(stringBuffer=new java.lang.StringBuffer,line=input.readLine(),line&&line.length()&&65279===line.charAt(0)&&(line=line.substring(1)),null!==line&&stringBuffer.append(line);null!==(line=input.readLine());)stringBuffer.append(lineSeparator),stringBuffer.append(line);content=String(stringBuffer.toString())}finally{input.close()}callback(content)}:("xpconnect"===masterConfig.env||!masterConfig.env&&"undefined"!=typeof Components&&Components.classes&&Components.interfaces)&&(Cc=Components.classes,Ci=Components.interfaces,Components.utils["import"]("resource://gre/modules/FileUtils.jsm"),xpcIsWindows="@mozilla.org/windows-registry-key;1"in Cc,text.get=function(url,callback){var inStream,convertStream,fileObj,readData={};xpcIsWindows&&(url=url.replace(/\//g,"\\")),fileObj=new FileUtils.File(url);try{inStream=Cc["@mozilla.org/network/file-input-stream;1"].createInstance(Ci.nsIFileInputStream),inStream.init(fileObj,1,0,!1),convertStream=Cc["@mozilla.org/intl/converter-input-stream;1"].createInstance(Ci.nsIConverterInputStream),convertStream.init(inStream,"utf-8",inStream.available(),Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER),convertStream.readString(inStream.available(),readData),convertStream.close(),inStream.close(),callback(readData.value)}catch(e){throw new Error((fileObj&&fileObj.path||"")+": "+e)}}),text}),define("common/services/ModelBuilder",["require","angular","angularResource"],function(require){var angular=require("angular");require("angularResource");var ModelBuilder=function(){this.basePath="",this.setBasePath=function(path){-1==path.indexOf("/",path.length-1)&&(path+="/"),this.basePath=path},this.transformResponse=function(data,headersGetter){data=angular.fromJson(data);var newResponse=(headersGetter(),data.objects);return newResponse.paging={num_results:data.num_results,page:data.page,total_pages:data.total_pages},newResponse},this.$get=["$resource","$q","$rootScope",function($resource,$q){var root=this,getModel=function(model,params,methods,url){url=void 0===url?root.basePath+model+"/:id":root.basePath+url;var defaultMethods={update:{method:"PUT",isArray:!1},create:{method:"POST"},get:{method:"GET",cache:!0},query:{method:"GET",isArray:!0,cache:!1,transformResponse:root.transformResponse}},defaultParams={id:"@id"};methods=angular.extend(defaultMethods,methods);for(var name in methods)methods[name].hasOwnProperty("url")&&(methods[name].url=root.basePath+methods[name].url);params=angular.extend(defaultParams,params);var resource=$resource(url,params,methods);return resource.prototype.getProperty=function(propName){var key="$__"+propName;if(void 0===this[key]){var subUrl=root.basePath+model+"/"+this.id+"/"+propName;this[key]=$resource(subUrl,{},defaultMethods).query()}return this[key]},resource.prototype.getConcreteClassInstance=function(){if(this.$concreteResolved)return this;if(void 0===this.id||void 0===this.type){if(void 0!==this.$promise)return this;var def=$q.defer();return this.$promise=def.promise,def.resolve(this),this}var concreteModel=getModel(this.type),concreteInstance=concreteModel.get({id:this.id});return concreteInstance.$promise.then(function(res){res.$concreteResolved=!0}),concreteInstance},resource.prototype.$save=function(){return this.id?this.$update():this.$create()},resource.queryBase=resource.query,resource.query=function(params){if(void 0!==params){var q={};q.filters=[];for(var key in params)q.filters.push({name:key,op:null===params[key]?"is_null":"==",val:params[key]});return this.queryBase({q:q})}return this.queryBase()},resource};return{getModel:getModel}}]};return ModelBuilder}),define("common/services/modelServices",["require","angular","angularResource","./ModelBuilder"],function(require){{var angular=require("angular"),angularResource=require("angularResource"),ModelBuilder=require("./ModelBuilder"),moduleName="kasparGUI.common.modelServices",dependancies=[angularResource];angular.module(moduleName,dependancies).provider("modelBuilder",ModelBuilder)}return moduleName}),define("text!default.tpl.html",[],function(){return'<h3 class="text-center">Default start page</h3>\n<strong>TODO</strong>\n<ul>\n	<li><strong> Login screen </strong></li>\n	<li><strong> User customisations </strong>\n		<ul>\n			<li>behaviour overrides</li>\n			<li>trigger overrides</li>\n			<li>global speed modifier (should this include timings?)</li>\n		</ul></li>\n	<li><strong> Language/Terminology corrections </strong>\n		<ul>\n			<li>Need to work with teachers to tune language</li>\n		</ul></li>\n	<li><strong> Visual cleanup </strong>\n		<ul>\n			<li>better feedback on save/update</li>\n			<li>reset save/update/disabled when changing model</li>\n			<li>alignment/sizing</li>\n			<li>consistent formatting</li>\n		</ul></li>\n	<li><strong>Tootips on input screens</strong></li>\n	<li><strong> Performance </strong>\n		<ul>\n			<li>base.(de)serialise may need to be revisited and written\n				explicitly for each model</li>\n			<li>Rollback doesn\'t appear to work properly for SQL rejected\n				data</li>\n		</ul></li>\n</ul>'}),define("common/i18n/en-gb",["require"],function(){var enGb={"action.label":"Action","action.select.prompt":"--Select Action--","action.test":"Test","action.stop":"Stop","action.import.selectFiles":"Select Files","action.import.upload":"Upload","action.new":"New","action.delete":"Delete","action.type.label":"Type","action.type.select.prompt":"--Select Type--","action.sound.name":"Name","action.sound.selectFile":"Select File","action.sound.selectedFile":"Selected File","action.sound.upload":"Upload","action.sequence.name":"Name","action.sequence.actions.list.label":"All Behaviours","action.sequence.actions.add":"Add","action.sequence.actions.remove":"Remove","action.sequence.actions.moveUp":"Move Up","action.sequence.actions.moveDown":"Move Down","action.sequence.actions.title":"Sequence Behaviours","action.sequence.help.short":"All selected behaviours will attempt execute in order","action.pose.name":"Name","action.pose.type.prompt":"Select pose entry mode","action.pose.basic.label":"Basic","action.pose.basic.poseable":"Release group servos","action.pose.advanced.label":"Detailed","action.pose.speedModifier":"Speed Modifier","action.pose.speedModifier.short":"Speed","action.pose.minLength":"Minimum Length","action.pose.minLength.short":"Length","action.pose.minLength.units":"seconds","action.pose.joint.name":"Joint","action.pose.joint.select.prompt":"--Select Joint--","action.pose.joint.delete":"Remove","action.pose.joint.poseable":"Release","action.pose.joint.position":"Position","action.pose.joint.speed":"Speed","action.group.name":"Name","action.group.actions.list.label":"All Behaviours","action.group.actions.add":"Add","action.group.actions.remove":"Remove","action.group.actions.title":"Group Behaviours","action.group.help.short":"All selected behaviours will attempt to execute simultaneously","common.setting.robot.label":"Attached Robot","common.setting.robot.select.prompt":"--Select Robot--","interaction.operator.label":"Operator","interaction.operator.select.prompt":"--Select Operator--","interaction.user.label":"User","interaction.user.select.prompt":"--Select User--","interaction.start":"Start","interaction.stop":"Stop","interaction.operator.view.buttons.label":"User Buttons","interaction.operator.view.activateBindings":"Activate Bindings","interaction.operator.view.showHotkeys":"Show Hotkeys","operator.label":"Operator","operator.select.prompt":"--Select Operator--","operator.new":"New","operator.delete":"Delete","operator.name":"Name","operator.users":"Common Users","robot.label":"Robot","robot.select.prompt":"--Select Robot--","robot.new":"New","robot.delete":"Delete","robot.view.servoModel.label":"Servo Model Configs","robot.view.servoModel.id":"Servo Model Id","robot.view.servoModel.port":"Port","robot.view.servoModel.portSpeed":"Port Speed","robot.view.servoModel.position.scale":"Position Scale","robot.view.servoModel.position.offset":"Position Offset","robot.view.servoModel.position.min":"Min Position","robot.view.servoModel.position.max":"Max Position","robot.view.servoModel.position.default":"Default Position","robot.view.servoModel.speed.scale":"Speed Scale","robot.view.servoModel.speed.min":"Min Speed","robot.view.servoModel.speed.max":"Max Speed","robot.view.servoModel.speed.default":"Default Speed","robot.view.servoModel.poseable":"Poseable","robot.view.servoModel.otherSettings":"Other","robot.view.servoGroups.label":"Servo Groups","robot.view.servoGroups.servoName":"Servo Name","robot.view.servos.label":"Servos","robot.view.servos.model.id":"Servo Model Id","robot.view.servos.position.scale":"Position Scale","robot.view.servos.position.offset":"Position Offset","robot.view.servos.position.min":"Min Position","robot.view.servos.position.max":"Max Position","robot.view.servos.position.default":"Default Position","robot.view.servos.speed.scale":"Speed Scale","robot.view.servos.speed.min":"Min Speed","robot.view.servos.speed.max":"Max Speed","robot.view.servos.speed.default":"Default Speed","robot.view.servos.poseable":"Poseable","robot.view.servos.otherSettings":"Other","robot.interface.robot":"Attached Robot","robot.interface.robot.short":"Robot","robot.interface.robot.select.prompt":"--Select Robot--","robot.interface.connect":"Connect","robot.interface.disconnect":"Disconnect","robot.name":"Name","robot.model":"Model","robot.model.select.prompt":"--Select Model--","robot.version":"Version","trigger.import.selectFiles":"Select Files","trigger.import.upload":"Upload","trigger.label":"Trigger","trigger.select.prompt":"--Select Trigger--","trigger.new":"New","trigger.delete":"Delete","trigger.type.label":"Type","trigger.type.select.prompt":"--Select Type--","trigger.time.name":"Name","trigger.time.action":"Action","trigger.time.action.select.prompt":"No Action","trigger.time.trigger":"Trigger","trigger.time.trigger.select.prompt":"--Select Trigger--","trigger.time.time":"Time","trigger.time.time.while":"While Active","trigger.time.time.since":"Since Deactivated","trigger.time.time.units":"seconds","trigger.sensor.connect":"Connect","trigger.sensor.disconnect":"Disconnect","trigger.sensor.current":"Current","trigger.sensor.basic.label":"Basic","trigger.sensor.basic.on":"Active","trigger.sensor.basic.off":"Inactive","trigger.sensor.basic.help.short":"As determined by sensor type","trigger.sensor.advanced.label":"Detailed","trigger.sensor.advanced.compare.label":"Active when current value","trigger.sensor.advanced.compare.select.prompt":"--Select Value--","trigger.sensor.name":"Name","trigger.sensor.action":"Action","trigger.sensor.action.select.prompt":"No Action","trigger.sensor.sensor":"Sensor","trigger.sensor.sensor.select.prompt":"--Select Sensor--","trigger.button.hotkey.label":"Keyboard Button","trigger.button.hotkey.delete":"Delete","trigger.button.hotkey.new":"New Keyboard Button","trigger.button.name":"Name","trigger.button.action":"Action","trigger.button.action.select.prompt":"No Action","trigger.compound.name":"Name","trigger.compound.action":"Action","trigger.compound.action.select.prompt":"No Action","trigger.compound.require.label":"Require","trigger.compound.require.all":"all","trigger.compound.require.any":"any","trigger.compound.require.trigger":"selected triggers","trigger.compound.triggers.list.label":"All Triggers","trigger.compound.triggers.add":"Add","trigger.compound.triggers.remove":"Remove","trigger.compound.triggers.title":"Selected Triggers","user.label":"User","user.select.prompt":"--Select User--","user.new":"New","user.delete":"Delete","user.name":"Name","user.speedModifier":"Movement Speed","user.custom.action.label":"Custom Behaviours","user.custom.action.new":"New","user.custom.action.delete":"Delete","user.custom.action.override":"Action to Override","user.custom.action.redirect":"Override Action","user.custom.trigger.label":"Custom Triggers","user.custom.trigger.new":"New","user.custom.trigger.delete":"Delete","navbar.admin.label":"Admin","navbar.admin.operators":"Operators","navbar.admin.users":"Users","navbar.admin.robots":"Robots","navbar.admin.settings":"Settings","navbar.action.label":"Action","navbar.action.edit":"Create/Edit","navbar.action.test":"Test","navbar.action.import":"Import","navbar.trigger.label":"Trigger","navbar.trigger.edit":"Create/Edit","navbar.trigger.test":"Test","navbar.trigger.import":"Import","navbar.interaction.label":"Interactions","navbar.interaction.view":"View History","navbar.interaction.begin":"Begin New","navbar.interaction.manage":"Manage History"};return enGb}),define("common/i18n/Language",["require","../i18n/en-gb"],function(require){var enGB=require("../i18n/en-gb"),Language=function(){this.language="en-gb",this.setLanguage=function(language){this.language=language},this.getText=function(){return enGB}};return Language}),define("common/i18n/languageServices",["require","angular","./Language"],function(require){{var angular=require("angular"),Language=require("./Language"),moduleName="kasparGUI.common.languageServices",dependancies=[];angular.module(moduleName,dependancies).service("language",Language)}return moduleName}),define("actions/models/Action",["require"],function(){var Action=function(modelBuilder){var resource=modelBuilder.getModel("Action",{},{create:{method:"POST",url:":type",params:{type:"@type"},isArray:!1},update:{method:"PUT",url:":type/:id",params:{type:"@type",id:"@id"},isArray:!1}});return resource};return["modelBuilder",Action]}),define("actions/models/ActionTest",["require"],function(){var ActionTest=function(modelBuilder){var _service=modelBuilder.getModel("ActionTest",{},{},"Action/:id/Test");return _service};return["modelBuilder",ActionTest]}),define("actions/models/ActionType",["require"],function(){var ActionType=function(modelBuilder){var _service=modelBuilder.getModel("ActionType");return _service};return["modelBuilder",ActionType]}),define("actions/models/JointPosition",["require"],function(){var JointPosition=function(modelBuilder){var _service=modelBuilder.getModel("JointPosition");return _service};return["modelBuilder",JointPosition]}),define("actions/models/SequenceOrder",["require"],function(){var SequenceOrder=function(modelBuilder){var _service=modelBuilder.getModel("SequenceOrder");return _service};return["modelBuilder",SequenceOrder]}),define("actions/models",["require","angular","angularResource","./models/Action","./models/ActionTest","./models/ActionType","./models/JointPosition","./models/SequenceOrder"],function(require){{var angular=require("angular"),angularResource=require("angularResource"),Action=require("./models/Action"),ActionTest=require("./models/ActionTest"),ActionType=require("./models/ActionType"),JointPosition=require("./models/JointPosition"),SequenceOrder=require("./models/SequenceOrder"),moduleName="kasparGUI.actions.models",dependancies=[angularResource];angular.module(moduleName,dependancies).factory("Action",Action).factory("ActionTest",ActionTest).factory("ActionType",ActionType).factory("JointPosition",JointPosition).factory("SequenceOrder",SequenceOrder)}return moduleName}),define("common/services/HotkeyFormatter",["require"],function(){var HotkeyFormatter=function(){this.getDisplayFromEvent=function(keyEvent){var code=keyEvent.which||keyEvent.keyCode,modifiers="";keyEvent.altKey&&(modifiers+="alt+"),keyEvent.ctrlKey&&(modifiers+="ctrl+"),keyEvent.shiftKey&&(modifiers+="shift+");var disp=this.getCharDisplay(code);return""!==disp||""!==modifiers?modifiers+disp:""},this.getCharDisplay=function(charCode){var char;return char=8==charCode?"backspace":9==charCode?"":13==charCode?"enter":16==charCode?"":17==charCode?"":18==charCode?"":19==charCode?"":20==charCode?"":27==charCode?"escape":32==charCode?"space":33==charCode?"pageup":34==charCode?"pagedown":35==charCode?"end":36==charCode?"home":37==charCode?"left":38==charCode?"up":39==charCode?"right":40==charCode?"down":45==charCode?"ins":46==charCode?"del":91==charCode?"":92==charCode?"":93==charCode?"":96==charCode?"0":97==charCode?"1":98==charCode?"2":99==charCode?"3":100==charCode?"4":101==charCode?"5":102==charCode?"6":103==charCode?"7":104==charCode?"8":105==charCode?"9":106==charCode?"*":107==charCode?"+":109==charCode?"-":110==charCode?".":111==charCode?"/":112==charCode?"F1":113==charCode?"F2":114==charCode?"F3":115==charCode?"F4":116==charCode?"F5":117==charCode?"F6":118==charCode?"F7":119==charCode?"F8":120==charCode?"F9":121==charCode?"F10":122==charCode?"F11":123==charCode?"F12":144==charCode?"":145==charCode?"":186==charCode?";":187==charCode?"=":188==charCode?",":189==charCode?"-":190==charCode?".":191==charCode?"/":192==charCode?"`":219==charCode?"[":220==charCode?"\\":221==charCode?"]":222==charCode?"'":String.fromCharCode(charCode)}};return HotkeyFormatter}),define("common/services/displayServices",["require","angular","./HotkeyFormatter"],function(require){{var angular=require("angular"),HotkeyFormatter=require("./HotkeyFormatter"),moduleName="kasparGUI.common.displayServices",dependancies=[];angular.module(moduleName,dependancies).service("hotkeyFormatter",HotkeyFormatter)}return moduleName}),define("robots/services/RobotInterfaceIO",["require","angular","socketio"],function(require){var angular=require("angular"),io=require("socketio"),Sensor=function(){return{id:null,name:null,value:null}},Servo=function(){return{id:null,actual:{position:null,poseable:null},poseable:null,position:null,speed:null,jointName:null}},RobotInterface=function($rootScope){var robotSocket=io.connect("/Robot/Interface",{resource:"api/socket.io"}),saving=!1,delayedSave=null,connected=!1,robotId=null,components={servos:{},sensors:{},id:null,timestamp:null},on=function(){},emit=function(eventName,data,callback){robotSocket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){if(callback){var json=args[0],obj=angular.fromJson(json);callback.apply(robotSocket,[obj])}})})},sendChanges=function(newValue,oldValue){if(null!==robotId&&connected){var servos=[];for(var servoName in newValue){var servo=newValue[servoName];(void 0===oldValue||void 0===oldValue[servoName]||servo.position!=oldValue[servoName].position||servo.poseable!=oldValue[servoName].poseable)&&servos.push({id:servo.id,position:servo.position,poseable:servo.poseable,speed:servo.speed,jointName:servoName})}servos.length>0&&save({id:robotId,servos:servos})}},save=function(data){console.log(data),saving=!0,emit("setData",data,function(){if(saving=!1,null!==delayedSave){var next=delayedSave;delayedSave=null,save(next)}})};on("getData",function(dataPackage){if(connected){for(var servoIndex=0;servoIndex<dataPackage.servos.length;servoIndex++){var servo=dataPackage.servos[servoIndex];void 0===components.servos[servo.jointName]&&(components.servos[servo.jointName]=new Servo,components.servos[servo.jointName].jointName=servo.jointName),components.servos[servo.jointName].id=servo.id,components.servos[servo.jointName].actual.position=servo.value,components.servos[servo.jointName].actual.poseable=servo.poseable}for(var sensorIndex=0;sensorIndex<dataPackage.sensors.length;sensorIndex++){var sensor=dataPackage.sensors[sensorIndex];void 0===components.sensors[sensor.name]&&(components.sensors[sensor.name]=new Sensor,components.sensors[sensor.name].name=sensor.name),components.sensors[sensor.name].id=sensor.id,components.sensors[sensor.name].value=sensor.value}}}),$rootScope.$watch(function(){return components.servos},sendChanges,!0),this.setRobot=function(robot){return void 0===robot||null===robot&&null!==robotId?(this.setConnected(!1),void(robotId=null)):void(robot.id!=robotId&&(this.setConnected(!1),robotId=robot.id,this.setConnected(!0)))},this.setConnected=function(connectedState){connected!=connectedState&&(connected=connectedState,robotSocket.emit("configure",{robotId:robotId,connect:connected}))},this.getConnected=function(){return connected},this.getSensor=function(sensorName){return void 0===sensorName?null:(void 0===components.sensors[sensorName]&&(components.sensors[sensorName]=new Sensor,components.sensors[sensorName].name=sensorName),components.sensors[sensorName])},this.getServo=function(componentName){return void 0===componentName?null:(void 0===components.servos[componentName]&&(components.servos[componentName]=new Servo,components.servos[componentName].jointName=componentName),components.servos[componentName])}};return["$rootScope",RobotInterface]}),define("robots/services/interfaceServices",["require","angular","./RobotInterfaceIO"],function(require){{var angular=require("angular"),RobotInterface=require("./RobotInterfaceIO"),moduleName="kasparGUI.robot.interfaceServices",dependancies=[];angular.module(moduleName,dependancies).service("robotInterface",RobotInterface)}return moduleName}),define("common/filters/ExceptFilter",["require"],function(){var ExceptFilter=function(){return function(inputList,objList,property){var ret=[];if(void 0===objList)return inputList;if(property="undefined"!=typeof property?property:"id","[object Array]"!=Object.prototype.toString.call(objList)&&(objList=[objList]),void 0!==inputList)for(var i=0;i<inputList.length;i++){for(var eq=!1,j=0;j<objList.length&&!(eq=""===property?objList[j]==inputList[i]:objList[j][property]==inputList[i][property]);j++);eq||ret.push(inputList[i])}return ret}};return ExceptFilter}),define("common/filters/InterpolateFilter",["require"],function(){var InterpolateFilter=function(version){return function(text){return String(text).replace(/\%VERSION\%/gm,version)}};return["version",InterpolateFilter]}),define("common/filters/IntersectFilter",["require"],function(){var IntersectFilter=function(){return function(inputList,inputProp,objList,objProp){var ret=[];if(void 0===objList)return ret;"[object Array]"!=Object.prototype.toString.call(objList)&&(objList=[objList]);for(var i=0;i<inputList.length;i++)for(var j=0;j<objList.length;j++){var eq=!1;if(eq=""===objProp&&""===inputProp?objList[j]==inputList[i]:""===objProp&&""!==inputProp?objList[j]===inputList[i][inputProp]:""!==objProp&&""===inputProp?objList[j][objProp]==inputList[i]:objList[j][objProp]==inputList[i][inputProp]){ret.push(inputList[i]);break}}return ret}};return IntersectFilter}),define("common/filters",["require","angular","./filters/ExceptFilter","./filters/InterpolateFilter","./filters/IntersectFilter"],function(require){{var angular=require("angular"),ExceptFilter=require("./filters/ExceptFilter"),InterpolateFilter=require("./filters/InterpolateFilter"),IntersectFilter=require("./filters/IntersectFilter"),moduleName="kasparGUI.common.filters",dependancies=[];angular.module(moduleName,dependancies).filter("except",ExceptFilter).filter("interpolate",InterpolateFilter).filter("intersect",IntersectFilter)}return moduleName}),define("common/models/Menu",["require"],function(){var Menu=function(modelBuilder){return modelBuilder.getModel("Menu")};return["modelBuilder",Menu]}),define("common/models/Setting",["require"],function(){var Setting=function(modelBuilder){var _service=modelBuilder.getModel("Setting");return _service};return["modelBuilder",Setting]}),define("common/models",["require","angular","common/services/modelServices","./models/Menu","./models/Setting"],function(require){{var angular=require("angular"),angularResource=require("common/services/modelServices"),Menu=require("./models/Menu"),Setting=require("./models/Setting"),moduleName="kasparGUI.common.models",dependancies=[angularResource];angular.module(moduleName,dependancies).factory("Menu",Menu).factory("Setting",Setting)}return moduleName}),define("robots/models/Robot",["require"],function(){var Robot=function(modelBuilder){var _service=modelBuilder.getModel("Robot");return _service};return["modelBuilder",Robot]}),define("robots/models/RobotInterface",["require"],function(){var RobotInterface=function(modelBuilder){var _service=modelBuilder.getModel("RobotInterface",{},{get:{method:"GET",cache:!1}},"Robot/:id/Interface");return _service};return["modelBuilder",RobotInterface]}),define("robots/models/RobotModel",["require"],function(){var RobotModel=function(modelBuilder){var _service=modelBuilder.getModel("RobotModel");return _service};return["modelBuilder",RobotModel]}),define("robots/models/Sensor",["require"],function(){var Sensor=function(modelBuilder){var resource=modelBuilder.getModel("Sensor");return resource};return["modelBuilder",Sensor]}),define("robots/models/SensorGroup",["require"],function(){var SensorGroup=function(modelBuilder){var _service=modelBuilder.getModel("SensorGroup");return _service};return["modelBuilder",SensorGroup]}),define("robots/models/SensorModel",["require"],function(){var SensorModel=function(modelBuilder){var _service=modelBuilder.getModel("SensorModel");return _service};return["modelBuilder",SensorModel]}),define("robots/models/SensorValueType",["require"],function(){var SensorValueType=function(modelBuilder){var resource=modelBuilder.getModel("SensorValueType");return resource};return["modelBuilder",SensorValueType]}),define("robots/models/Servo",["require"],function(){var Servo=function(modelBuilder){var _service=modelBuilder.getModel("Servo");return _service};return["modelBuilder",Servo]}),define("robots/models/ServoConfig",["require"],function(){var ServoConfig=function(modelBuilder){var _service=modelBuilder.getModel("ServoConfig");return _service};return["modelBuilder",ServoConfig]}),define("robots/models/ServoGroup",["require"],function(){var ServoGroup=function(modelBuilder){var _service=modelBuilder.getModel("ServoGroup");return _service};return["modelBuilder",ServoGroup]}),define("robots/models/ServoInterface",["require"],function(){var ServoInterface=function(modelBuilder){var _service=modelBuilder.getModel("ServoInterface");return _service};return["modelBuilder",ServoInterface]}),define("robots/models/ServoModel",["require"],function(){var ServoModel=function(modelBuilder){var _service=modelBuilder.getModel("ServoModel");return _service};return["modelBuilder",ServoModel]}),define("robots/models",["require","angular","angularResource","./models/Robot","./models/RobotInterface","./models/RobotModel","./models/Sensor","./models/SensorGroup","./models/SensorModel","./models/SensorValueType","./models/Servo","./models/ServoConfig","./models/ServoGroup","./models/ServoInterface","./models/ServoModel"],function(require){{var angular=require("angular"),angularResource=require("angularResource"),Robot=require("./models/Robot"),RobotInterface=require("./models/RobotInterface"),RobotModel=require("./models/RobotModel"),Sensor=require("./models/Sensor"),SensorGroup=require("./models/SensorGroup"),SensorModel=require("./models/SensorModel"),SensorValueType=require("./models/SensorValueType"),Servo=require("./models/Servo"),ServoConfig=require("./models/ServoConfig"),ServoGroup=require("./models/ServoGroup"),ServoInterface=require("./models/ServoInterface"),ServoModel=require("./models/ServoModel"),moduleName="kasparGUI.robots.models",dependancies=[angularResource];
angular.module(moduleName,dependancies).factory("Robot",Robot).factory("RobotInterface",RobotInterface).factory("RobotModel",RobotModel).factory("Sensor",Sensor).factory("SensorGroup",SensorGroup).factory("SensorModel",SensorModel).factory("Servo",Servo).factory("ServoConfig",ServoConfig).factory("ServoGroup",ServoGroup).factory("SensorValueType",SensorValueType).factory("ServoInterface",ServoInterface).factory("ServoModel",ServoModel)}return moduleName}),define("text!robots/directives/robotEditor.tpl.html",[],function(){return'<div>\n	<form\n		novalidate\n		name="robotForm"\n		model="robot">\n		<div class="input-group">\n			<span class="input-group-addon inputLabel">{{language[\'robot.name\']}}</span>\n			<input\n				type="text"\n				name="name"\n				class="form-control"\n				placeholder="Name"\n				saveable\n				ng-model="robot.name"\n				required>\n		</div>\n		<div class="input-group">\n			<span class="input-group-addon inputLabel">{{language[\'robot.model\']}}</span>\n			<select\n				ng-disabled="robotForm.model.$pristine && robotForm.model.$valid"\n				name="model"\n				class="selectpicker form-control"\n				ng-model="robot.model_id"\n				ng-options="model.id as model.name for model in models | orderBy:\'model.name\'"\n				saveable\n				required>\n				<option value="">{{language[\'robot.model.select.prompt\']}}</option>\n			</select>\n		</div>\n		<div class="input-group">\n			<span class="input-group-addon inputLabel">{{language[\'robot.version\']}}</span>\n			<input\n				type="text"\n				name="version"\n				class="form-control"\n				placeholder="Version"\n				ng-disabled="robotForm.model.$pristine && robotForm.model.$valid"\n				saveable\n				ng-model="robot.version"\n				required>\n		</div>\n	</form>\n	<hr />\n	<tabset ng-show="robot != null"> <tab heading="Servo Details">\n	<view-robot robot="robot"></view-robot> </tab> <tab\n		heading="Servo Calibration"> <calibrate-robot robot="robot"></calibrate-robot>\n	</tab></tabset>\n</div>'}),define("robots/directives/RobotEditor",["require","angular","robots/models","text!./robotEditor.tpl.html"],function(require){require("angular");require("robots/models");var template=require("text!./robotEditor.tpl.html"),RobotEditor=function(RobotModel,language){return{template:template,restrict:"E",scope:{robot:"="},controller:function($scope){$scope.language=language.getText(),$scope.models=RobotModel.query()}}};return["RobotModel","language",RobotEditor]}),define("text!robots/directives/batteryLevel.tpl.html",[],function(){return'<div class="battery">\n	<div class="icon col-lg-1">&nbsp;</div>\n	<progressbar\n		max="max"\n		value="battery.value"\n		type="{{type}}"\n		class="meter col-lg-11">{{battery.value || \'Unknown\'}}</progressbar>\n</div>'}),define("robots/directives/BatteryLevel",["require","angular","robots/services/interfaceServices","text!./batteryLevel.tpl.html"],function(require){require("angular");require("robots/services/interfaceServices");var template=require("text!./batteryLevel.tpl.html"),BatteryLevel=function(robotInterface){return{template:template,restrict:"E",scope:{},controller:function($scope){$scope.battery=robotInterface.getSensor("BATTERY"),$scope.$watch("battery.value",function(value){null===value||0>value?$scope.type="unknown":value>25?$scope.type="success":value>10?$scope.type="warning":value>=0&&($scope.type="danger")})}}};return["robotInterface","$timeout",BatteryLevel]}),define("text!robots/directives/robotInterface.tpl.html",[],function(){return'\n<div class="col-lg-12">\n	<div class="row">\n		<div class="col-lg-12 input-group">\n			<span class="input-group-addon inputLabel">\n				<span class="hidden-xs">{{language[\'robot.interface.robot\']}}</span>\n				<span class="visible-xs">{{language[\'robot.interface.robot.short\']}}</span>\n			</span>\n			<select\n				ng-disabled="connected || configured || !robots"\n				class="selectpicker form-control"\n				ng-model="robot"\n				ng-options="(item.name + \' (\' + item.version + \')\' ) for item in robots | orderBy:\'name\'">\n				<option value="">{{language[\'robot.interface.robot.select.prompt\']}}</option>\n			</select>\n			<span class="input-group-btn" ng-if="showConnect">\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-disabled="!robot"\n					ng-hide="connected"\n					ng-click="setConnected(true)">{{language[\'robot.interface.connect\']}}</button>\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-show="connected"\n					ng-click="setConnected(false)">{{language[\'robot.interface.disconnect\']}}</button>\n			</span>\n		</div>\n	</div>\n	<!-- 		<div class="btn-group row"> -->\n	<!-- 			<button class="btn btn-default" ng-disabled="true" type="button" ng-click="advancedPositioning(selected)">Advanced Positioning</button> -->\n	<!-- 			<button class="btn btn-default" ng-disabled="true" type="button" ng-click="setPositioning(selected, true)" ng-hide="selected.poseEnable">Enable Positioning</button> -->\n	<!-- 			<button class="btn btn-default" ng-disabled="true" type="button" ng-click="setPositioning(selected, false)" ng-show="selected.poseEnabled">Disable Positioning</button> -->\n	<!-- 			<button class="btn btn-default" ng-disabled="true" type="button" ng-click="getCurrentPose(jointPositionsRaw)">Record Current Position</button> -->\n	<!-- 		</div> -->\n</div>\n'}),define("robots/directives/RobotInterface",["require","angular","common/models","robots/models","robots/services/interfaceServices","text!./robotInterface.tpl.html"],function(require){require("angular");require("common/models"),require("robots/models"),require("robots/services/interfaceServices");var template=require("text!./robotInterface.tpl.html"),RobotInterface=function($q,Robot,robotInterface,Setting,language){return{template:template,restrict:"E",scope:{robot:"=",connected:"=?",showConnect:"=?"},controller:function($scope){$scope.language=language.getText();var settings=Setting.query({key:"robot"});$scope.robots=Robot.query(),$scope.robots.$promise.then(function(){settings.$promise.then(function(){if(settings.length>0)for(var i=0;i<$scope.robots.length;i++)if($scope.robots[i].name==settings[0].value){$scope.robot=$scope.robots[i],$scope.configured=!0;break}})}),$scope.$watch("robot",function(robot){robotInterface.setRobot(robot),$scope.connected=robotInterface.getConnected()}),$scope.$watch("connected",function(connected){$scope.setConnected(connected)}),$scope.setConnected=function(state){robotInterface.setConnected(state?state:!1),$scope.connected=state},void 0===$scope.connected&&($scope.connected=!0),void 0===$scope.showConnect&&($scope.showConnect=!1)}}};return["$q","Robot","robotInterface","Setting","language",RobotInterface]}),define("text!robots/directives/calibrateRobot.tpl.html",[],function(){return""}),define("robots/directives/CalibrateRobot",["require","angular","robots/models","text!./calibrateRobot.tpl.html"],function(require){require("angular");require("robots/models");var template=require("text!./calibrateRobot.tpl.html"),ViewRobot=function(ServoConfig,ServoGroup,Servo,language){return{template:template,restrict:"E",scope:{robot:"="},controller:function($scope){$scope.language=language.getText(),$scope.$watch("robot",function(robot){void 0!==robot&&($scope.servos=robot.servos)})}}};return["ServoConfig","ServoGroup","Servo","language",ViewRobot]}),define("text!robots/directives/viewRobot.tpl.html",[],function(){return'\n<accordion close-others="true"> <accordion-group\n	is-open="configsOpen"> <accordion-heading>{{language[\'robot.view.servoModel.label\']}}<i\n	class="pull-right glyphicon"\n	ng-class="{\'glyphicon-chevron-down\': configsOpen, \'glyphicon-chevron-right\': !configsOpen}"></i>\n</accordion-heading>\n<div\n	ng-repeat="item in servoConfigs"\n	class="col-lg-6 col-sm-12">\n	<strong>{{item.model.name}}</strong>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servoModel.id\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Not Set"\n			ng-model="item.model.id"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servoModel.port\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Not Set"\n			ng-model="item.port"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servoModel.portSpeed\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Not Set"\n			ng-model="item.portSpeed"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servoModel.position.scale\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Not Set"\n			ng-model="item.model.positionScale"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servoModel.position.offset\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Not Set"\n			ng-model="item.model.positionOffset"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servoModel.position.min\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Not Set"\n			ng-model="item.model.minPosition"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servoModel.position.max\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Not Set"\n			ng-model="item.model.maxPosition"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servoModel.position.default\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Not Set"\n			ng-model="item.model.defaultPosition"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servoModel.speed.scale\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Not Set"\n			ng-model="item.model.speedScale"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servoModel.speed.min\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Not Set"\n			ng-model="item.model.minSpeed"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servoModel.speed.max\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Not Set"\n			ng-model="item.model.maxSpeed"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servoModel.speed.default\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Not Set"\n			ng-model="item.model.defaultSpeed"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servoModel.poseable\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Not Set"\n			ng-model="item.model.poseable"\n			ng-disabled="true">\n	</span>\n	<span\n		class="input-group"\n		ng-if="item.extraData">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servoModel.otherSettings\']}}</span>\n		<span class="list-group form-control">\n			<span\n				class="list-group-item"\n				ng-repeat="(key, value) in item.extraData">\n				<span class="input-group">\n					<span class="input-group-addon inputLabel">{{key}}</span>\n					<input\n						type="text"\n						class="form-control"\n						placeholder="Not Set"\n						ng-model="value"\n						ng-disabled="true">\n				</span>\n			</span>\n		</span>\n	</span>\n</div>\n</accordion-group> <accordion-group is-open="groupsOpen"> <accordion-heading>{{language[\'robot.view.servoGroups.label\']}} <i\n	class="pull-right glyphicon"\n	ng-class="{\'glyphicon-chevron-down\': groupsOpen, \'glyphicon-chevron-right\': !groupsOpen}"></i>\n</accordion-heading>\n<div\n	ng-repeat="item in servoGroups"\n	class="col-lg-4 col-md-6 col-sm-12">\n	<strong>{{item.name}}</strong>\n	<span\n		class="input-group"\n		ng-repeat="servo in item.servos">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servoGroups.servoName\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Not Set"\n			ng-model="servo.jointName"\n			ng-disabled="true">\n	</span>\n</div>\n</accordion-group> <accordion-group is-open="servosOpen"> <accordion-heading>{{language[\'robot.view.servos.label\']}}\n<i\n	class="pull-right glyphicon"\n	ng-class="{\'glyphicon-chevron-down\': servosOpen, \'glyphicon-chevron-right\': !servosOpen}"></i>\n</accordion-heading>\n<div\n	ng-repeat="item in servos"\n	class="col-lg-4 col-md-6 col-sm-12">\n	<strong>{{item.jointName}}</strong>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servos.model.id\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Not Set"\n			ng-model="item.model_id"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servos.position.min\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Inherit"\n			ng-model="item.minPosition"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servos.position.max\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Inherit"\n			ng-model="item.maxPosition"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servos.position.default\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Inherit"\n			ng-model="item.defaultPosition"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servos.speed.min\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Inherit"\n			ng-model="item.minSpeed"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servos.speed.max\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Inherit"\n			ng-model="item.maxSpeed"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servos.speed.default\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Inherit"\n			ng-model="item.defaultSpeed"\n			ng-disabled="true">\n	</span>\n	<span class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servos.poseable\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Inherit"\n			ng-model="item.poseable"\n			ng-disabled="true">\n	</span>\n	<span\n		class="input-group"\n		ng-if="item.extraData">\n		<span class="input-group-addon inputLabel">{{language[\'robot.view.servos.otherSettings\']}}</span>\n		<span class="list-group form-control">\n			<span\n				class="list-group-item"\n				ng-repeat="(key, value) in item.extraData">\n				<span class="input-group">\n					<span class="input-group-addon inputLabel">{{key}}</span>\n					<input\n						type="text"\n						class="form-control"\n						placeholder="Not Set"\n						ng-model="value"\n						ng-disabled="true">\n				</span>\n			</span>\n		</span>\n	</span>\n</div>\n</accordion-group> </accordion>\n'}),define("robots/directives/ViewRobot",["require","angular","robots/models","text!./viewRobot.tpl.html"],function(require){require("angular");require("robots/models");var template=require("text!./viewRobot.tpl.html"),ViewRobot=function(ServoConfig,ServoGroup,Servo,language){return{template:template,restrict:"E",scope:{robot:"="},controller:function($scope){$scope.language=language.getText(),$scope.groupsOpen=!1,$scope.configsOpen=!1,$scope.servosOpen=!1,$scope.$watch("robot",function(robot){void 0!==robot&&($scope.servoConfigs=ServoConfig.query({robot_id:robot.id}),$scope.servoGroups=ServoGroup.query({robot_id:robot.id}),$scope.servos=robot.servos)})}}};return["ServoConfig","ServoGroup","Servo","language",ViewRobot]}),define("robots/directives",["require","angular","common/i18n/languageServices","common/services/displayServices","robots/services/interfaceServices","common/filters","common/models","robots/models","./directives/RobotEditor","./directives/BatteryLevel","./directives/RobotInterface","./directives/CalibrateRobot","./directives/ViewRobot"],function(require){{var angular=require("angular"),languageServices=require("common/i18n/languageServices"),displayServices=require("common/services/displayServices"),interfaceServices=require("robots/services/interfaceServices"),filters=require("common/filters"),commonModels=require("common/models"),robotModels=require("robots/models"),RobotEditor=require("./directives/RobotEditor"),BatteryLevel=require("./directives/BatteryLevel"),RobotInterface=require("./directives/RobotInterface"),CalibrateRobot=require("./directives/CalibrateRobot"),ViewRobot=require("./directives/ViewRobot"),moduleName="kasparGUI.robots.directives",dependancies=[displayServices,languageServices,interfaceServices,filters,commonModels,robotModels];angular.module(moduleName,dependancies).directive("robotEditor",RobotEditor).directive("batteryLevel",BatteryLevel).directive("robotInterface",RobotInterface).directive("calibrateRobot",CalibrateRobot).directive("viewRobot",ViewRobot)}return moduleName}),function(){var n=this,t=n._,r=Array.prototype,e=Object.prototype,u=Function.prototype,i=r.push,a=r.slice,o=r.concat,l=e.toString,c=e.hasOwnProperty,f=Array.isArray,s=Object.keys,p=u.bind,h=function(n){return n instanceof h?n:this instanceof h?void(this._wrapped=n):new h(n)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=h),exports._=h):n._=h,h.VERSION="1.7.0";var g=function(n,t,r){if(void 0===t)return n;switch(null==r?3:r){case 1:return function(r){return n.call(t,r)};case 2:return function(r,e){return n.call(t,r,e)};case 3:return function(r,e,u){return n.call(t,r,e,u)};case 4:return function(r,e,u,i){return n.call(t,r,e,u,i)}}return function(){return n.apply(t,arguments)}};h.iteratee=function(n,t,r){return null==n?h.identity:h.isFunction(n)?g(n,t,r):h.isObject(n)?h.matches(n):h.property(n)},h.each=h.forEach=function(n,t,r){if(null==n)return n;t=g(t,r);var e,u=n.length;if(u===+u)for(e=0;u>e;e++)t(n[e],e,n);else{var i=h.keys(n);for(e=0,u=i.length;u>e;e++)t(n[i[e]],i[e],n)}return n},h.map=h.collect=function(n,t,r){if(null==n)return[];t=h.iteratee(t,r);for(var e,u=n.length!==+n.length&&h.keys(n),i=(u||n).length,a=Array(i),o=0;i>o;o++)e=u?u[o]:o,a[o]=t(n[e],e,n);return a};var v="Reduce of empty array with no initial value";h.reduce=h.foldl=h.inject=function(n,t,r,e){null==n&&(n=[]),t=g(t,e,4);var u,i=n.length!==+n.length&&h.keys(n),a=(i||n).length,o=0;if(arguments.length<3){if(!a)throw new TypeError(v);r=n[i?i[o++]:o++]}for(;a>o;o++)u=i?i[o]:o,r=t(r,n[u],u,n);return r},h.reduceRight=h.foldr=function(n,t,r,e){null==n&&(n=[]),t=g(t,e,4);var u,i=n.length!==+n.length&&h.keys(n),a=(i||n).length;if(arguments.length<3){if(!a)throw new TypeError(v);r=n[i?i[--a]:--a]}for(;a--;)u=i?i[a]:a,r=t(r,n[u],u,n);return r},h.find=h.detect=function(n,t,r){var e;return t=h.iteratee(t,r),h.some(n,function(n,r,u){return t(n,r,u)?(e=n,!0):void 0}),e},h.filter=h.select=function(n,t,r){var e=[];return null==n?e:(t=h.iteratee(t,r),h.each(n,function(n,r,u){t(n,r,u)&&e.push(n)}),e)},h.reject=function(n,t,r){return h.filter(n,h.negate(h.iteratee(t)),r)},h.every=h.all=function(n,t,r){if(null==n)return!0;t=h.iteratee(t,r);var e,u,i=n.length!==+n.length&&h.keys(n),a=(i||n).length;for(e=0;a>e;e++)if(u=i?i[e]:e,!t(n[u],u,n))return!1;return!0},h.some=h.any=function(n,t,r){if(null==n)return!1;t=h.iteratee(t,r);var e,u,i=n.length!==+n.length&&h.keys(n),a=(i||n).length;for(e=0;a>e;e++)if(u=i?i[e]:e,t(n[u],u,n))return!0;return!1},h.contains=h.include=function(n,t){return null==n?!1:(n.length!==+n.length&&(n=h.values(n)),h.indexOf(n,t)>=0)},h.invoke=function(n,t){var r=a.call(arguments,2),e=h.isFunction(t);return h.map(n,function(n){return(e?t:n[t]).apply(n,r)})},h.pluck=function(n,t){return h.map(n,h.property(t))},h.where=function(n,t){return h.filter(n,h.matches(t))},h.findWhere=function(n,t){return h.find(n,h.matches(t))},h.max=function(n,t,r){var e,u,i=-1/0,a=-1/0;if(null==t&&null!=n){n=n.length===+n.length?n:h.values(n);for(var o=0,l=n.length;l>o;o++)e=n[o],e>i&&(i=e)}else t=h.iteratee(t,r),h.each(n,function(n,r,e){u=t(n,r,e),(u>a||u===-1/0&&i===-1/0)&&(i=n,a=u)});return i},h.min=function(n,t,r){var e,u,i=1/0,a=1/0;if(null==t&&null!=n){n=n.length===+n.length?n:h.values(n);for(var o=0,l=n.length;l>o;o++)e=n[o],i>e&&(i=e)}else t=h.iteratee(t,r),h.each(n,function(n,r,e){u=t(n,r,e),(a>u||1/0===u&&1/0===i)&&(i=n,a=u)});return i},h.shuffle=function(n){for(var t,r=n&&n.length===+n.length?n:h.values(n),e=r.length,u=Array(e),i=0;e>i;i++)t=h.random(0,i),t!==i&&(u[i]=u[t]),u[t]=r[i];return u},h.sample=function(n,t,r){return null==t||r?(n.length!==+n.length&&(n=h.values(n)),n[h.random(n.length-1)]):h.shuffle(n).slice(0,Math.max(0,t))},h.sortBy=function(n,t,r){return t=h.iteratee(t,r),h.pluck(h.map(n,function(n,r,e){return{value:n,index:r,criteria:t(n,r,e)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||void 0===r)return 1;if(e>r||void 0===e)return-1}return n.index-t.index}),"value")};var m=function(n){return function(t,r,e){var u={};return r=h.iteratee(r,e),h.each(t,function(e,i){var a=r(e,i,t);n(u,e,a)}),u}};h.groupBy=m(function(n,t,r){h.has(n,r)?n[r].push(t):n[r]=[t]}),h.indexBy=m(function(n,t,r){n[r]=t}),h.countBy=m(function(n,t,r){h.has(n,r)?n[r]++:n[r]=1}),h.sortedIndex=function(n,t,r,e){r=h.iteratee(r,e,1);for(var u=r(t),i=0,a=n.length;a>i;){var o=i+a>>>1;r(n[o])<u?i=o+1:a=o}return i},h.toArray=function(n){return n?h.isArray(n)?a.call(n):n.length===+n.length?h.map(n,h.identity):h.values(n):[]},h.size=function(n){return null==n?0:n.length===+n.length?n.length:h.keys(n).length},h.partition=function(n,t,r){t=h.iteratee(t,r);var e=[],u=[];return h.each(n,function(n,r,i){(t(n,r,i)?e:u).push(n)}),[e,u]},h.first=h.head=h.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:0>t?[]:a.call(n,0,t)},h.initial=function(n,t,r){return a.call(n,0,Math.max(0,n.length-(null==t||r?1:t)))},h.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:a.call(n,Math.max(n.length-t,0))},h.rest=h.tail=h.drop=function(n,t,r){return a.call(n,null==t||r?1:t)},h.compact=function(n){return h.filter(n,h.identity)};var y=function(n,t,r,e){if(t&&h.every(n,h.isArray))return o.apply(e,n);for(var u=0,a=n.length;a>u;u++){var l=n[u];h.isArray(l)||h.isArguments(l)?t?i.apply(e,l):y(l,t,r,e):r||e.push(l)}return e};h.flatten=function(n,t){return y(n,t,!1,[])},h.without=function(n){return h.difference(n,a.call(arguments,1))},h.uniq=h.unique=function(n,t,r,e){if(null==n)return[];h.isBoolean(t)||(e=r,r=t,t=!1),null!=r&&(r=h.iteratee(r,e));for(var u=[],i=[],a=0,o=n.length;o>a;a++){var l=n[a];if(t)a&&i===l||u.push(l),i=l;else if(r){var c=r(l,a,n);h.indexOf(i,c)<0&&(i.push(c),u.push(l))}else h.indexOf(u,l)<0&&u.push(l)}return u},h.union=function(){return h.uniq(y(arguments,!0,!0,[]))},h.intersection=function(n){if(null==n)return[];for(var t=[],r=arguments.length,e=0,u=n.length;u>e;e++){var i=n[e];if(!h.contains(t,i)){for(var a=1;r>a&&h.contains(arguments[a],i);a++);a===r&&t.push(i)}}return t},h.difference=function(n){var t=y(a.call(arguments,1),!0,!0,[]);return h.filter(n,function(n){return!h.contains(t,n)})},h.zip=function(n){if(null==n)return[];for(var t=h.max(arguments,"length").length,r=Array(t),e=0;t>e;e++)r[e]=h.pluck(arguments,e);return r},h.object=function(n,t){if(null==n)return{};for(var r={},e=0,u=n.length;u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},h.indexOf=function(n,t,r){if(null==n)return-1;var e=0,u=n.length;if(r){if("number"!=typeof r)return e=h.sortedIndex(n,t),n[e]===t?e:-1;e=0>r?Math.max(0,u+r):r}for(;u>e;e++)if(n[e]===t)return e;return-1},h.lastIndexOf=function(n,t,r){if(null==n)return-1;var e=n.length;for("number"==typeof r&&(e=0>r?e+r+1:Math.min(e,r+1));--e>=0;)if(n[e]===t)return e;return-1},h.range=function(n,t,r){arguments.length<=1&&(t=n||0,n=0),r=r||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=Array(e),i=0;e>i;i++,n+=r)u[i]=n;return u};var d=function(){};h.bind=function(n,t){var r,e;if(p&&n.bind===p)return p.apply(n,a.call(arguments,1));if(!h.isFunction(n))throw new TypeError("Bind must be called on a function");return r=a.call(arguments,2),e=function(){if(!(this instanceof e))return n.apply(t,r.concat(a.call(arguments)));d.prototype=n.prototype;var u=new d;d.prototype=null;var i=n.apply(u,r.concat(a.call(arguments)));return h.isObject(i)?i:u}},h.partial=function(n){var t=a.call(arguments,1);return function(){for(var r=0,e=t.slice(),u=0,i=e.length;i>u;u++)e[u]===h&&(e[u]=arguments[r++]);for(;r<arguments.length;)e.push(arguments[r++]);return n.apply(this,e)}},h.bindAll=function(n){var t,r,e=arguments.length;if(1>=e)throw new Error("bindAll must be passed function names");for(t=1;e>t;t++)r=arguments[t],n[r]=h.bind(n[r],n);return n},h.memoize=function(n,t){var r=function(e){var u=r.cache,i=t?t.apply(this,arguments):e;return h.has(u,i)||(u[i]=n.apply(this,arguments)),u[i]};return r.cache={},r},h.delay=function(n,t){var r=a.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},h.defer=function(n){return h.delay.apply(h,[n,1].concat(a.call(arguments,1)))},h.throttle=function(n,t,r){var e,u,i,a=null,o=0;r||(r={});var l=function(){o=r.leading===!1?0:h.now(),a=null,i=n.apply(e,u),a||(e=u=null)};return function(){var c=h.now();o||r.leading!==!1||(o=c);var f=t-(c-o);return e=this,u=arguments,0>=f||f>t?(clearTimeout(a),a=null,o=c,i=n.apply(e,u),a||(e=u=null)):a||r.trailing===!1||(a=setTimeout(l,f)),i}},h.debounce=function(n,t,r){var e,u,i,a,o,l=function(){var c=h.now()-a;t>c&&c>0?e=setTimeout(l,t-c):(e=null,r||(o=n.apply(i,u),e||(i=u=null)))};return function(){i=this,u=arguments,a=h.now();var c=r&&!e;return e||(e=setTimeout(l,t)),c&&(o=n.apply(i,u),i=u=null),o}},h.wrap=function(n,t){return h.partial(t,n)},h.negate=function(n){return function(){return!n.apply(this,arguments)}},h.compose=function(){var n=arguments,t=n.length-1;return function(){for(var r=t,e=n[t].apply(this,arguments);r--;)e=n[r].call(this,e);return e}},h.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},h.before=function(n,t){var r;return function(){return--n>0?r=t.apply(this,arguments):t=null,r}},h.once=h.partial(h.before,2),h.keys=function(n){if(!h.isObject(n))return[];if(s)return s(n);var t=[];for(var r in n)h.has(n,r)&&t.push(r);return t},h.values=function(n){for(var t=h.keys(n),r=t.length,e=Array(r),u=0;r>u;u++)e[u]=n[t[u]];return e},h.pairs=function(n){for(var t=h.keys(n),r=t.length,e=Array(r),u=0;r>u;u++)e[u]=[t[u],n[t[u]]];return e},h.invert=function(n){for(var t={},r=h.keys(n),e=0,u=r.length;u>e;e++)t[n[r[e]]]=r[e];return t},h.functions=h.methods=function(n){var t=[];for(var r in n)h.isFunction(n[r])&&t.push(r);return t.sort()},h.extend=function(n){if(!h.isObject(n))return n;for(var t,r,e=1,u=arguments.length;u>e;e++){t=arguments[e];for(r in t)c.call(t,r)&&(n[r]=t[r])}return n},h.pick=function(n,t,r){var e,u={};if(null==n)return u;if(h.isFunction(t)){t=g(t,r);for(e in n){var i=n[e];t(i,e,n)&&(u[e]=i)}}else{var l=o.apply([],a.call(arguments,1));n=new Object(n);for(var c=0,f=l.length;f>c;c++)e=l[c],e in n&&(u[e]=n[e])}return u},h.omit=function(n,t,r){if(h.isFunction(t))t=h.negate(t);else{var e=h.map(o.apply([],a.call(arguments,1)),String);t=function(n,t){return!h.contains(e,t)}}return h.pick(n,t,r)},h.defaults=function(n){if(!h.isObject(n))return n;for(var t=1,r=arguments.length;r>t;t++){var e=arguments[t];for(var u in e)void 0===n[u]&&(n[u]=e[u])}return n},h.clone=function(n){return h.isObject(n)?h.isArray(n)?n.slice():h.extend({},n):n},h.tap=function(n,t){return t(n),n};var b=function(n,t,r,e){if(n===t)return 0!==n||1/n===1/t;if(null==n||null==t)return n===t;n instanceof h&&(n=n._wrapped),t instanceof h&&(t=t._wrapped);var u=l.call(n);if(u!==l.call(t))return!1;switch(u){case"[object RegExp]":case"[object String]":return""+n==""+t;case"[object Number]":return+n!==+n?+t!==+t:0===+n?1/+n===1/t:+n===+t;case"[object Date]":case"[object Boolean]":return+n===+t}if("object"!=typeof n||"object"!=typeof t)return!1;for(var i=r.length;i--;)if(r[i]===n)return e[i]===t;var a=n.constructor,o=t.constructor;if(a!==o&&"constructor"in n&&"constructor"in t&&!(h.isFunction(a)&&a instanceof a&&h.isFunction(o)&&o instanceof o))return!1;r.push(n),e.push(t);var c,f;if("[object Array]"===u){if(c=n.length,f=c===t.length)for(;c--&&(f=b(n[c],t[c],r,e)););}else{var s,p=h.keys(n);if(c=p.length,f=h.keys(t).length===c)for(;c--&&(s=p[c],f=h.has(t,s)&&b(n[s],t[s],r,e)););}return r.pop(),e.pop(),f};h.isEqual=function(n,t){return b(n,t,[],[])},h.isEmpty=function(n){if(null==n)return!0;if(h.isArray(n)||h.isString(n)||h.isArguments(n))return 0===n.length;for(var t in n)if(h.has(n,t))return!1;return!0},h.isElement=function(n){return!(!n||1!==n.nodeType)},h.isArray=f||function(n){return"[object Array]"===l.call(n)},h.isObject=function(n){var t=typeof n;return"function"===t||"object"===t&&!!n},h.each(["Arguments","Function","String","Number","Date","RegExp"],function(n){h["is"+n]=function(t){return l.call(t)==="[object "+n+"]"}}),h.isArguments(arguments)||(h.isArguments=function(n){return h.has(n,"callee")}),"function"!=typeof/./&&(h.isFunction=function(n){return"function"==typeof n||!1}),h.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},h.isNaN=function(n){return h.isNumber(n)&&n!==+n},h.isBoolean=function(n){return n===!0||n===!1||"[object Boolean]"===l.call(n)},h.isNull=function(n){return null===n},h.isUndefined=function(n){return void 0===n},h.has=function(n,t){return null!=n&&c.call(n,t)},h.noConflict=function(){return n._=t,this},h.identity=function(n){return n},h.constant=function(n){return function(){return n}},h.noop=function(){},h.property=function(n){return function(t){return t[n]}},h.matches=function(n){var t=h.pairs(n),r=t.length;return function(n){if(null==n)return!r;n=new Object(n);for(var e=0;r>e;e++){var u=t[e],i=u[0];if(u[1]!==n[i]||!(i in n))return!1}return!0}},h.times=function(n,t,r){var e=Array(Math.max(0,n));t=g(t,r,1);for(var u=0;n>u;u++)e[u]=t(u);return e},h.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))},h.now=Date.now||function(){return(new Date).getTime()};var _={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},w=h.invert(_),j=function(n){var t=function(t){return n[t]},r="(?:"+h.keys(n).join("|")+")",e=RegExp(r),u=RegExp(r,"g");return function(n){return n=null==n?"":""+n,e.test(n)?n.replace(u,t):n}};h.escape=j(_),h.unescape=j(w),h.result=function(n,t){if(null==n)return void 0;var r=n[t];return h.isFunction(r)?n[t]():r};var x=0;h.uniqueId=function(n){var t=++x+"";return n?n+t:t},h.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var A=/(.)^/,k={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},O=/\\|'|\r|\n|\u2028|\u2029/g,F=function(n){return"\\"+k[n]};h.template=function(n,t,r){!t&&r&&(t=r),t=h.defaults({},t,h.templateSettings);var e=RegExp([(t.escape||A).source,(t.interpolate||A).source,(t.evaluate||A).source].join("|")+"|$","g"),u=0,i="__p+='";n.replace(e,function(t,r,e,a,o){return i+=n.slice(u,o).replace(O,F),u=o+t.length,r?i+="'+\n((__t=("+r+"))==null?'':_.escape(__t))+\n'":e?i+="'+\n((__t=("+e+"))==null?'':__t)+\n'":a&&(i+="';\n"+a+"\n__p+='"),t
}),i+="';\n",t.variable||(i="with(obj||{}){\n"+i+"}\n"),i="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+i+"return __p;\n";try{var a=new Function(t.variable||"obj","_",i)}catch(o){throw o.source=i,o}var l=function(n){return a.call(this,n,h)},c=t.variable||"obj";return l.source="function("+c+"){\n"+i+"}",l},h.chain=function(n){var t=h(n);return t._chain=!0,t};var E=function(n){return this._chain?h(n).chain():n};h.mixin=function(n){h.each(h.functions(n),function(t){var r=h[t]=n[t];h.prototype[t]=function(){var n=[this._wrapped];return i.apply(n,arguments),E.call(this,r.apply(h,n))}})},h.mixin(h),h.each(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var t=r[n];h.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),"shift"!==n&&"splice"!==n||0!==r.length||delete r[0],E.call(this,r)}}),h.each(["concat","join","slice"],function(n){var t=r[n];h.prototype[n]=function(){return E.call(this,t.apply(this._wrapped,arguments))}}),h.prototype.value=function(){return this._wrapped},"function"==typeof define&&define.amd&&define("underscore",[],function(){return h})}.call(this),define("text!actions/directives/actionEditor.tpl.html",[],function(){return'<poseaction-editor\n	ng-if="action.type==\'PoseAction\'"\n	action="action"\n	actions="actions"></poseaction-editor>\n<groupaction-editor\n	ng-if="action.type==\'GroupAction\'"\n	action="action"\n	actions="actions"></groupaction-editor>\n<soundaction-editor\n	ng-if="action.type==\'SoundAction\'"\n	action="action"\n	actions="actions"></soundaction-editor>\n<sequenceaction-editor\n	ng-if="action.type==\'SequenceAction\'"\n	action="action"\n	actions="actions"></sequenceaction-editor>\n'}),define("actions/directives/ActionEditor",["require","angular","underscore","text!./actionEditor.tpl.html"],function(require){var template=(require("angular"),require("underscore"),require("text!./actionEditor.tpl.html")),ActionEditor=function($compile,language){return{template:template,restrict:"E",scope:{action:"=",actions:"="},controller:function($scope){$scope.language=language.getText()}}};return["$compile","language",ActionEditor]}),define("text!actions/directives/groupEditor.tpl.html",[],function(){return'<div class="col-lg-12 input-group">\n	<span class="input-group-addon inputLabel">{{language[\'action.group.name\']}}</span>\n	<input\n		type="text"\n		class="form-control"\n		placeholder="Group Name"\n		required\n		name="name"\n		ng-model="group.name">\n</div>\n<div class="row">\n	<div class="col-lg-5">\n		<div class="panel panel-default">\n			<div class="panel-heading">{{language[\'action.group.actions.list.label\']}}</div>\n			<div class="editContainer">\n				<table class="table table-bordered table-hover table-responsive">\n					<thead\n						ng-repeat-start="(actionType, filteredActions) in groupedActions | orderBy:\'actionType\'">\n						<tr>\n							<th class="col-xs-12">{{actionType}}</th>\n						</tr>\n					</thead>\n					<tbody ng-repeat-end>\n						<tr\n							ng-repeat="action in filteredActions | except:group.actions | orderBy:\'name\'"\n							ng-class="{\'success\': toAdd.indexOf(action) >= 0, \'disabled\':action.id == group.id, \'clickable\':action.id != group.id}"\n							ng-click="toggleAddSelect(action)">\n							<td><span> {{action.name}}</span></td>\n						</tr>\n					</tbody>\n				</table>\n			</div>\n		</div>\n	</div>\n	<div class="col-lg-2">\n		<div class="row">&nbsp;</div>\n		<div class="row">\n			<button\n				class="btn btn-default col-lg-12"\n				ng-disabled="!toAdd || toAdd.length == 0"\n				type="button"\n				ng-click="addActions(toAdd);toAdd=[]">{{language[\'action.group.actions.add\']}}\n				&rarr;</button>\n		</div>\n		<div class="row">\n			<button\n				class="btn btn-default col-lg-12"\n				ng-disabled="!toRemove || toRemove.length == 0"\n				type="button"\n				ng-click="removeActions(toRemove);toRemove=[]">&larr;\n				{{language[\'action.group.actions.remove\']}}</button>\n		</div>\n	</div>\n	<div class="col-lg-5">\n		<div class="panel panel-default">\n			<div class="panel-heading">{{language[\'action.group.actions.title\']}}</div>\n			<!-- table -->\n			<div class="editContainer">\n				<table class="table table-bordered table-hover table-responsive">\n					<thead>\n						<tr>\n							<th class="col-xs-6">Name</th>\n							<th class="col-xs-6">Type</th>\n						</tr>\n					</thead>\n					<tbody>\n						<tr\n							ng-repeat="action in group.actions"\n							ng-class="{\'success\': toRemove.indexOf(action) >= 0}"\n							class="clickable"\n							ng-click="toggleSelect(action)">\n							<td><span>{{action.name}}</span></td>\n							<td><span>{{action.type}}</span></td>\n						</tr>\n					</tbody>\n				</table>\n			</div>\n		</div>\n	</div>\n</div>\n<div class="row">\n	<div class="col-sm-8">\n		<small>{{language[\'action.group.help.short\']}}</small>\n	</div>\n	<div class="col-sm-4">\n		<div class="input-group">\n			<span class="input-group-btn">\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-click="save()">Save</button>\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-click="saveAs()">Save As</button>\n			</span>\n		</div>\n	</div>\n</div>'}),define("actions/directives/GroupEditor",["require","angular","text!./groupEditor.tpl.html"],function(require){var template=(require("angular"),require("text!./groupEditor.tpl.html")),GroupEditor=function(language){return{template:template,restrict:"E",scope:{group:"=action",actions:"="},controller:function($scope){$scope.language=language.getText(),$scope.toRemove=[],$scope.toAdd=[],$scope.$watch("group",function(group){void 0!==group&&void 0===group.actions&&(group.actions=[])}),$scope.$watch("actions",function(actions){void 0!==actions&&null!==actions&&($scope.groupedActions=_.groupBy(actions,"type"))}),$scope.addActions=function(actions){for(var i=0;i<actions.length;i++)$scope.group.actions.push({name:actions[i].name,id:actions[i].id});for(var j=0;j<$scope.group.actions.length;j++)$scope.group.actions[j].speedModifier=void 0;$scope.group.$save()},$scope.toggleSelect=function(action){var index=$scope.toRemove.indexOf(action);index>=0?$scope.toRemove.splice(index,1):$scope.toRemove.push(action)},$scope.toggleAddSelect=function(action){if(!action||!$scope.group||action!=$scope.group&&action.id!=$scope.group.id){var index=$scope.toAdd.indexOf(action);index>=0?$scope.toAdd.splice(index,1):$scope.toAdd.push(action)}},$scope.removeActions=function(actions){for(var i=0;i<actions.length;i++)$scope.group.actions.splice($scope.group.actions.indexOf(actions[i]),1);$scope.group.$save()},$scope.save=function(){for(var j=0;j<$scope.group.actions.length;j++)$scope.group.actions[j].action=void 0,$scope.group.actions[j].group=void 0;$scope.group.$save()},$scope.saveAs=function(){var newGroup=new Action({type:"GroupAction",name:$scope.group.name+" - Copy",actions:$scope.group.actions.slice(0)});$scope.group=newGroup,$scope.save()}}}};return["language",GroupEditor]}),define("text!actions/directives/poseEditor.tpl.html",[],function(){return'<div class="row">\n	<form\n		name="poseForm"\n		model="pose">\n		<div class="col-lg-12">\n			<div class="input-group">\n				<span class="input-group-addon inputLabel">{{language[\'action.pose.name\']}}</span>\n				<input\n					type="text"\n					class="form-control"\n					placeholder="Pose Name"\n					required\n					name="name"\n					ng-model="pose.name">\n			</div>\n			<div class="input-group">\n				<span class="input-group-addon inputLabel">\n					<span class="hidden-xs">{{language[\'action.pose.speedModifier\']}}</span>\n					<span class="visible-xs">{{language[\'action.pose.speedModifier.short\']}}</span>\n				</span>\n				<div\n					guislider\n					name="speedModifier"\n					floor="1"\n					ceiling="300"\n					ng-model="pose.speedModifier"></div>\n				<span class="input-group-addon">{{pose.speedModifier}}%</span>\n			</div>\n		</div>\n	</form>\n</div>\n<robot-interface\n	robot="robot"\n	connected="connected"\n	ng-hide="connected"\n	show-connect="true"></robot-interface>\n<div\n	class="input-group"\n	ng-show="connected">\n	<div class="input-group-addon">{{language[\'action.pose.type.prompt\']}}</div>\n	<div class="btn-group">\n		<button\n			type="button"\n			class="btn btn-primary check"\n			ng-model="advanced"\n			btn-radio="false">{{language[\'action.pose.basic.label\']}}</button>\n		<button\n			type="button"\n			class="btn btn-primary check"\n			ng-model="advanced"\n			btn-radio="true">{{language[\'action.pose.advanced.label\']}}</button>\n	</div>\n</div>\n<div\n	class="panel panel-default"\n	ng-repeat="group in groups | orderBy:\'name\'">\n	<div class="panel-heading clearfix">\n		<h4 class="panel-title pull-left">{{group.name}}</h4>\n		<button\n			ng-hide="advanced"\n			type="button"\n			class="btn btn-primary btn-panel check pull-right"\n			ng-model="group.poseable"\n			btn-checkbox>{{language[\'action.pose.basic.poseable\']}}</button>\n	</div>\n	<div class="panel-body">\n		<div\n			class="col-lg-4 col-md-6 col-sm-12 col-xs-12 jointEditor"\n			ng-repeat="jointPosition in group.rows | orderBy:\'jointName\'">\n			<joint-editor\n				joint-names="joints"\n				joint-position="jointPosition"\n				poseable="group.poseable"\n				advanced="advanced"\n				servo-position="getPosition(jointPosition.jointName, servoPositions)"\n				servo="getServo(jointPosition.jointName, robot.servos)"></joint-editor>\n		</div>\n	</div>\n</div>\n<div class="row">\n	<div class="col-sm-8">&nbsp;</div>\n	<div class="col-sm-4">\n		<div class="input-group">\n			<span class="input-group-btn">\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-click="save()">Save</button>\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-click="saveAs()">Save As</button>\n			</span>\n		</div>\n	</div>\n</div>'}),define("actions/directives/PoseEditor",["require","angular","text!./poseEditor.tpl.html","underscore","actions/models","robots/directives"],function(require){var template=(require("angular"),require("text!./poseEditor.tpl.html")),_=require("underscore");require("actions/models"),require("robots/directives");var PoseEditor=function(JointPosition,RobotInterface,Action,language){return{template:template,restrict:"E",scope:{pose:"=action"},controller:function($scope){$scope.language=language.getText(),$scope.advanced=!$scope.connected,$scope.advancedopen=!0,$scope.basicopen=!1,$scope.$watch("pose",function(pose){void 0!==pose&&void 0===pose.speedModifier&&(pose.speedModifier=100)}),void 0===$scope.advanced&&($scope.advanced=!$scope.connected),$scope.$watch("pose.jointPositions",function(jointPositions){$scope.getGroups(jointPositions,$scope.robot)}),$scope.$watch("robot.servos",function(servos){servos=servos||[],$scope.joints=_.pluck(servos,"jointName"),void 0!==$scope.pose&&$scope.getGroups($scope.pose.jointPositions,$scope.robot)});var processGroup=function(servoGroup,positions){var joints=[];for(var servoIndex in servoGroup.servos){var servo=servoGroup.servos[servoIndex],joint=_.find(positions,function(p){return p.jointName==servo.jointName});joints.push(joint||new JointPosition({position:servo.defaultPosition,speed:servo.defaultSpeed,jointName:servo.jointName,pose_id:$scope.pose.id}))}return joints?{name:servoGroup.name,rows:joints,poseable:!1}:null};$scope.getGroups=function(jointPositions,robot){jointPositions=jointPositions||[];robot?robot.getProperty("servoGroups").$promise.then(function(servoGroups){var groups=_.map(servoGroups,function(sg){return processGroup(sg,jointPositions)}),other=_.difference(jointPositions,_.flatten(_.map(groups,function(g){return g.rows}),!0));other&&groups.push({name:"No Group",rows:other,poseable:!1}),$scope.groups=groups}):$scope.groups=[{name:"Pose Joints",rows:jointPositions.slice(0),poseable:!1}]},$scope.getServo=function(jointName,servos){return _.find(servos,function(s){return s.jointName==jointName})},$scope.getPosition=function(jointName,positions){return _.find(positions,function(p){return p.jointName==jointName})},$scope.save=function(){var toRemove=_.filter($scope.pose.jointPositions,function(p){return p.isDeleted||void 0===p.id&&!p.isNew}),isNew=_.filter($scope.pose.jointPositions,function(p){return p.isNew});_.each(isNew,function(jp){delete jp.isNew}),$scope.pose.jointPositions=_.difference($scope.pose.jointPositions,toRemove),$scope.pose.$save()},$scope.saveAs=function(){var positions=_.map($scope.pose.jointPositions,function(jp){return new JointPosition({position:jp.position,speed:jp.speed,jointName:jp.jointName})}),newPose=new Action({type:"PoseAction",name:$scope.pose.name+" - Copy",speedModifier:$scope.pose.speedModifier,jointPositions:positions});$scope.pose=newPose,$scope.save()}}}};return["JointPosition","RobotInterface","Action","language",PoseEditor]}),define("text!actions/directives/jointEditor.tpl.html",[],function(){return'<div class="row">\n	<div class="col-lg-12">\n		<ng-form\n			name="jointForm"\n			ng-class="{\'has-info\': (!jointPosition.id && jointForm.$pristine) || (jointPosition.isDeleted)}"\n			model="jointPosition">\n		<div class="input-group">\n			<span class="input-group-addon inputLabel-sm">\n				<span>{{language[\'action.pose.joint.name\']}}</span>\n			</span>\n			<select\n				name="jointname"\n				class="selectpicker form-control"\n				ng-options="name for name in ((jointNames || []).length ? jointNames : [jointPosition.jointName]) | orderBy:\'toString()\'"\n				ng-model="jointPosition.jointName"\n				ng-disabled="jointForm.jointname.$pristine && jointForm.jointname.$valid"\n				required\n				notEmpty>\n				<option value="">{{language[\'action.pose.joint.select.prompt\']}}</option>\n			</select>\n			<span\n				class="input-group-btn"\n				ng-if="jointPosition.id">\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-click="removeJoint()">{{language[\'action.pose.joint.delete\']}}</button>\n			</span>\n		</div>\n		<div>\n			<div class="input-group">\n				<span class="input-group-addon inputLabel-sm">{{language[\'action.pose.joint.position\']}}</span>\n				<div\n					ng-show="advanced"\n					guislider\n					name="jointposition"\n					floor="coalesce(servo.minPosition, servoModel.minPosition, -180)"\n					ceiling="coalesce(servo.maxPosition, servoModel.maxPosition, 180)"\n					ng-model="jointPosition.position"></div>\n				<span\n					class="input-group-btn form-control nopadding"\n					ng-hide="advanced">\n					<button\n						type="button"\n						class="btn btn-primary check fill"\n						ng-model="poseable"\n						btn-checkbox>{{language[\'action.pose.joint.poseable\']}}</button>\n				</span>\n				<span class="input-group-addon">{{(poseable ? servoInt.actual.position : jointPosition.position)}}&deg;</span>\n			</div>\n			<div class="input-group noselect">\n				<span class="input-group-addon inputLabel-sm">{{language[\'action.pose.joint.speed\']}}</span>\n				<div\n					guislider\n					name="jointspeed"\n					ng-model="jointPosition.speed"\n					floor="coalesce(servo.minSpeed, servoModel.minSpeed, 1)"\n					ceiling="coalesce(servo.maxSpeed, servoModel.maxSpeed, 300)"></div>\n				<span class="input-group-addon">{{jointPosition.speed}}%</span>\n			</div>\n		</div>\n		</ng-form>\n	</div>\n</div>\n'}),define("actions/directives/JointEditor",["require","angular","robots/services/interfaceServices","text!./jointEditor.tpl.html"],function(require){require("angular");require("robots/services/interfaceServices");var template=require("text!./jointEditor.tpl.html"),JointEditor=function(robotInterface,JointPosition,ServoModel,language,$timeout){return{template:template,restrict:"E",scope:{jointNames:"=",jointPosition:"=",servo:"=",servoPositions:"=",groupPoseable:"=?poseable",advanced:"=?"},controller:function($scope){$scope.language=language.getText(),void 0===$scope.advanced&&($scope.advanced=!$scope.connected),$scope.poseable=!1,$scope.$watch("groupPoseable",function(value){$scope.poseable=value});var checkPositions=function(){$scope.jointPosition&&((void 0===$scope.jointPosition.position||null===$scope.jointPosition.position)&&($scope.jointPosition.position=void 0!==$scope.servo&&null!==$scope.servo&&void 0!==$scope.servo.defaultPosition&&null!==$scope.servo.defaultPosition?$scope.servo.defaultPosition:void 0!==$scope.servoModel&&null!==$scope.servoModel&&void 0!==$scope.servoModel.defaultPosition&&null!==$scope.servoModel.defaultPosition?$scope.servoModel.defaultPosition:0),(void 0===$scope.jointPosition.speed||null===$scope.jointPosition.speed)&&($scope.jointPosition.speed=void 0!==$scope.servo&&null!==$scope.servo&&void 0!==$scope.servo.defaultSpeed&&null!==$scope.servo.defaultSpeed?$scope.servo.defaultSpeed:void 0!==$scope.servoModel&&null!==$scope.servoModel&&void 0!==$scope.servoModel.defaultPosition&&null!==$scope.servoModel.defaultSpeed?$scope.servoModel.defaultSpeed:100))};$scope.$watch("servo",checkPositions),$scope.$watch("jointPosition",checkPositions),$scope.$watch("jointPosition.jointName",function(jointName){$scope.servoInt=robotInterface.getServo(jointName)}),$scope.removeJoint=function(){$scope.jointPosition.id?$scope.jointPosition.isDeleted=!0:delete $scope.jointPosition.isNew},$scope.$watch("servo.model_id",function(modelId){void 0!==modelId&&($scope.servoModel=ServoModel.get({id:modelId}))}),$scope.coalesce=function(){for(var i=0;i<arguments.length;i++)if(void 0!==arguments[i]&&null!==arguments[i])return arguments[i];return null};var writeToServo=function(force){$scope.jointPosition.id||($scope.jointPosition.isNew=!0),$scope.servoInt||console.log("No interface for "+$scope.jointPosition),(force||$scope.advanced)&&$scope.writeJoint($scope.jointPosition,$scope.servoInt)};$scope.writeJoint=function(jointPosition,servoInt){jointPosition&&servoInt&&$timeout(function(){servoInt.position=jointPosition.position,servoInt.speed=jointPosition.speed,servoInt.poseable=$scope.poseable})},$scope.$watch("servoInt.actual.position",function(value){!$scope.advanced&&$scope.jointPosition&&(console.log("updating joint position from servo"+$scope.servo.jointName),$scope.jointPosition.position=value)}),$scope.$watch("jointPosition",writeToServo),$scope.$watch("jointPosition.position",function(){$scope.writeJoint($scope.jointPosition,$scope.servoInt)}),$scope.$watch("poseable",function(poseable){$scope.servoInt&&($scope.servoInt.position=$scope.servoInt.actual.position,$scope.servoInt.poseable=poseable)})}}};return["robotInterface","JointPosition","ServoModel","language","$timeout",JointEditor]}),define("text!actions/directives/sequenceEditor.tpl.html",[],function(){return'<div class="col-lg-12 input-group">\n	<span class="input-group-addon inputLabel">{{language[\'action.sequence.name\']}}</span>\n	<input\n		type="text"\n		class="form-control"\n		placeholder="Sequence Name"\n		required\n		name="name"\n		ng-model="sequence.name">\n</div>\n<div class="row">\n	<div class="col-lg-5">\n		<div class="panel panel-default">\n			<div class="panel-heading">{{language[\'action.sequence.actions.list.label\']}}</div>\n			<div class="editContainer">\n				<table class="table table-bordered table-hover table-responsive">\n					<thead\n						ng-repeat-start="(actionType, filteredActions) in groupedActions | orderBy:\'actionType\'">\n						<tr>\n							<th class="col-xs-12">{{actionType}}</th>\n						</tr>\n					</thead>\n					<tbody ng-repeat-end>\n						<tr\n							ng-repeat="action in filteredActions | orderBy:\'name\'"\n							ng-class="{\'success\': toAdd.indexOf(action) >= 0, \'disabled\':action.id == sequence.id, \'clickable\':action.id != sequence.id}"\n							ng-click="toggleAddSelect(action)">\n							<td><span>{{action.name}}</span></td>\n						</tr>\n					</tbody>\n				</table>\n			</div>\n		</div>\n	</div>\n	<div class="col-lg-2">\n		<div class="row">&nbsp;</div>\n		<div class="row">\n			<button\n				class="btn btn-default col-lg-12"\n				ng-disabled="!toAdd || toAdd.length == 0"\n				type="button"\n				ng-click="addActions(toAdd);toAdd=[]">{{language[\'action.sequence.actions.add\']}}\n				&rarr;</button>\n		</div>\n		<div class="row">\n			<button\n				class="btn btn-default col-lg-12"\n				ng-disabled="!toRemove || toRemove.length == 0"\n				type="button"\n				ng-click="removeActions(toRemove);toRemove=[]">&larr;\n				{{language[\'action.sequence.actions.remove\']}}</button>\n		</div>\n		<div class="row">\n			<button\n				class="btn btn-default col-lg-12"\n				ng-disabled="!toRemove || toRemove.length == 0"\n				type="button"\n				ng-click="moveActions(toRemove, -1)">&uarr;\n				{{language[\'action.sequence.actions.moveUp\']}}</button>\n		</div>\n		<div class="row">\n			<button\n				class="btn btn-default col-lg-12"\n				ng-disabled="!toRemove || toRemove.length == 0"\n				type="button"\n				ng-click="moveActions(toRemove, 1)">&darr;\n				{{language[\'action.sequence.actions.moveDown\']}}</button>\n		</div>\n	</div>\n	<div class="col-lg-5">\n		<div class="panel panel-default">\n			<div class="panel-heading">{{language[\'action.sequence.actions.title\']}}</div>\n			<!-- table -->\n			<div class="editContainer">\n				<table class="table table-bordered table-hover table-responsive">\n					<thead>\n						<tr>\n							<th class="col-xs-3">Order</th>\n							<th class="col-xs-3">Name</th>\n							<th class="col-xs-6">Run Time</th>\n						</tr>\n					</thead>\n					<tbody>\n						<tr\n							ng-repeat="action in sequence.actions"\n							ng-class="{\'success\': toRemove.indexOf(action) >= 0}"\n							ng-click="toggleSelect(action)"\n							class="clickable">\n							<td><span>{{$index + 1}}</span></td>\n							<td><span>{{getName(action.action_id)}}</span></td>\n							<td><span\n									editable-number="action.forcedLength"\n									e-min="0"> {{action.forcedLength || \'Default\'}} </span></td>\n						</tr>\n					</tbody>\n				</table>\n			</div>\n		</div>\n	</div>\n</div>\n<div class="row">\n	<div class="col-sm-8">\n		<small>{{language[\'action.sequence.help.short\']}}</small>\n	</div>\n	<div class="col-sm-4">\n		<div class="input-group">\n			<span class="input-group-btn">\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-click="save()">Save</button>\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-click="saveAs()">Save As</button>\n			</span>\n		</div>\n	</div>\n</div>\n'}),define("actions/directives/SequenceEditor",["require","angular","underscore","text!./sequenceEditor.tpl.html","actions/models"],function(require){var _=(require("angular"),require("underscore")),template=require("text!./sequenceEditor.tpl.html");require("actions/models");var SequenceEditor=function(SequenceOrder,language){return{template:template,restrict:"E",scope:{sequence:"=action",actions:"="},controller:function($scope){$scope.language=language.getText(),$scope.toRemove=[],$scope.toAdd=[],$scope.$watch("actions",function(actions){void 0!==actions&&null!==actions&&($scope.groupedActions=_.groupBy(actions,"type"))}),$scope.$watch("sequence",function(sequence){void 0===sequence.actions&&(sequence.actions=[])}),$scope.getName=function(actionId){if(void 0!==$scope.actions)for(var i=0;i<$scope.actions.length;i++)if($scope.actions[i].id==actionId)return $scope.actions[i].name;return"Unknown action"},$scope.getType=function(actionId){if(void 0!==$scope.actions)for(var i=0;i<$scope.actions.length;i++)if($scope.actions[i].id==actionId)return $scope.actions[i].type;return"Unknown action"},$scope.moveActions=function(oactions,change){if(void 0!==oactions&&oactions.length>0)if(change>0)for(var i=oactions.length-1;i>=0;i--){var oldIndex=$scope.sequence.actions.indexOf(oactions[i]),newIndex=oldIndex+change;if(newIndex>$scope.sequence.actions.length-1&&(newIndex=$scope.sequence.actions.length-1),oactions.indexOf($scope.sequence.actions[newIndex])<0){var element=$scope.sequence.actions.splice(oldIndex,1)[0];$scope.sequence.actions.splice(newIndex,0,element)}}else for(var i=0;i<oactions.length;i++){var oldIndex=$scope.sequence.actions.indexOf(oactions[i]),newIndex=oldIndex+change;if(0>newIndex&&(newIndex=0),oactions.indexOf($scope.sequence.actions[newIndex])<0){var element=$scope.sequence.actions.splice(oldIndex,1)[0];$scope.sequence.actions.splice(newIndex,0,element)}}},$scope.fixOrder=function(){for(var i=0;i<$scope.sequence.actions.length;i++)$scope.sequence.actions[i].order=i},$scope.toggleSelect=function(action){var index=$scope.toRemove.indexOf(action);index>=0?$scope.toRemove.splice(index,1):$scope.toRemove.push(action)},$scope.toggleAddSelect=function(action){if(!action||!$scope.sequence||action!=$scope.sequence&&action.id!=$scope.sequence.id){var index=$scope.toAdd.indexOf(action);index>=0?$scope.toAdd.splice(index,1):$scope.toAdd.push(action)}},$scope.save=function(){for(var j=0;j<$scope.sequence.actions.length;j++)$scope.sequence.actions[j].action=void 0,$scope.sequence.actions[j].sequence=void 0;$scope.sequence.$save()},$scope.saveAs=function(){var actions=_.map($scope.sequence.actions,function(sa){return new SequenceOrder({order:sa.order,action_id:sa.action_id})}),newSequence=new Action({type:"SequenceAction",name:$scope.sequence.name+" - Copy",actions:actions});$scope.sequence=newSequence,$scope.save()},$scope.addActions=function(actions){for(var i=0;i<actions.length;i++){var oa=new SequenceOrder({order:$scope.sequence.actions.length,sequence_id:$scope.sequence.id,action_id:actions[i].id});$scope.sequence.actions.push(oa)}},$scope.removeActions=function(oactions){for(var i=0;i<oactions.length;i++)$scope.sequence.actions.splice($scope.sequence.actions.indexOf(oactions[i]),1)}}}};return["SequenceOrder","language",SequenceEditor]}),define("common/directives/KeyBinding",["require","angular","mousetrap"],function(require){var angular=require("angular"),Mousetrap=require("mousetrap"),KeyBinding=function($timeout){return{restrict:"E",scope:{invoke:"&"},link:function(scope,element,attrs){attrs.button?Mousetrap.bind(attrs.on,function(){scope.invoke();var elem=angular.element(element).parent().find(attrs.button);elem&&(elem.addClass("active"),$timeout(elem.removeClass("active"),2e3))}):Mousetrap.bind(attrs.on,scope.invoke)},controller:function(){}}};return["$timeout",KeyBinding]}),define("common/directives/Model",["require","angular"],function(require){var Model=(require("angular"),function(modelBuilder){return{restrict:"A",require:"form",link:function(scope,element,attrs,controller){scope.formCtrl=controller,attrs.$observe("model",function(modelName){scope.$watch(modelName,function(modelInstance){scope.model=modelInstance})})},controller:function($scope){this.updateObj=function(){if($scope.formCtrl.$valid){if(void 0===$scope.model.$save){if(void 0===$scope.model._link)return;var Model=modelBuilder.getModel($scope.model._link.model);$scope.model=new Model($scope.model)}$scope.model.$save().then(function(){$scope.formCtrl.$setPristine()})}},this.newObj=function(Type){var newO=new Type;return newO},this.deleteObj=function(item){return item.$delete(function(){})}}}});return["modelBuilder",Model]}),define("text!common/directives/navbar.tpl.html",[],function(){return'<div\n	class="col-sm-3 col-md-2 col-lg-2 maxHeight scrollable hidden-print navbar">\n	<div class="panel-group">\n		<div\n			class="panel panel-default"\n			ng-repeat="group in groups | orderBy:\'order\'">\n			<div class="panel-heading">\n				<h4 class="panel-title">{{language[group.title]}}</h4>\n			</div>\n			<div class="nav-collapse in">\n				<div\n					ng-repeat="link in group.links | orderBy:\'order\'"\n					ui-sref-active="highlight">\n					<a ui-sref="{{link.path}}">{{language[link.title]}}</a>\n				</div>\n			</div>\n		</div>\n	</div>\n</div>'}),define("common/directives/Navbar",["require","angular","angularUIRouter","common/models","text!./navbar.tpl.html"],function(require){require("angular");require("angularUIRouter");var template=(require("common/models"),require("text!./navbar.tpl.html")),Navbar=function(Menu){return{template:template,restrict:"E",scope:{},controller:function($scope,language){$scope.language=language.getText(),$scope.groups=Menu.query()}}};return["Menu","language",Navbar]}),define("common/directives/NotEmpty",["require","angular"],function(require){var NotEmpty=(require("angular"),function(){return{restrict:"A",require:"ngModel",link:function(scope,element,attrs,controller){controller.$parsers.unshift(function(value){return void 0===value||""===value?void controller.$setValidity("notEmpty",!1):void controller.$setValidity("notEmpty",!0)})}}});return NotEmpty}),define("common/directives/FileModel",["require","angular"],function(require){require("angular");var FileModel=function($parse){return{restrict:"A",link:function(scope,element,attrs){var model=$parse(attrs.fileModel),modelSetter=model.assign;element.bind("change",function(){scope.$apply(function(){modelSetter(scope,element[0].files[0])})})}}};return["$parse",FileModel]}),define("common/directives/Saveable",["require","angular"],function(require){var angular=require("angular"),Saveable=function($compile,$timeout){return{restrict:"A",require:["ngModel","^form","^model"],link:function(scope,element,attrs,controllers){var name=controllers[1].$name+"."+controllers[0].$name,updateCalled=!1,parentElement=angular.element(element[0].parentElement),modelCtrl=controllers[0],saveCtrl=controllers[2];scope.$watch(name+".$dirty",function(value){value?parentElement.addClass("has-warning"):parentElement.removeClass("has-warning")}),scope.$watch(name+".$valid",function(value){modelCtrl.$dirty&&(value?parentElement.removeClass("has-error"):parentElement.addClass("has-error"))}),scope.$watch(name+".$pristine",function(value){value?updateCalled?(parentElement.addClass("has-success"),$timeout(function(){parentElement.removeClass("has-success")},2e3),updateCalled=!1):(parentElement.removeClass("has-success"),parentElement.removeClass("has-warning"),parentElement.removeClass("has-error")):parentElement.removeClass("has-success")});var callUpdate=function(){modelCtrl.$dirty&&modelCtrl.$valid&&(saveCtrl.updateObj(modelCtrl),updateCalled=!0)};element[0].addEventListener("blur",function(){callUpdate()},!0),element.on("keyup",function($event){var code=$event.which||$event.keyCode;13==code&&callUpdate()})}}};return["$compile","$timeout",Saveable]}),define("text!common/directives/slider.tpl.html",[],function(){return'\n<input\n	type="range"\n	class="form-control"\n	min="{{floor}}"\n	max="{{ceiling}}" />'}),define("common/directives/Slider",["require","angular","text!./slider.tpl.html"],function(require){var template=(require("angular"),require("text!./slider.tpl.html")),Slider=function(){return{template:template,restrict:"EA",replace:!0,scope:{name:"=",value:"=?",floor:"=?",ceiling:"=?",step:"=?",precision:"=?"},compile:function(element){element[0].removeAttribute("floor"),element[0].removeAttribute("ceiling"),element[0].removeAttribute("step"),element[0].removeAttribute("guislider"),element[0].removeAttribute("precision")},controller:function($scope,language){$scope.language=language.getText(),void 0===$scope.floor&&($scope.floor=0),void 0===$scope.ceiling&&($scope.ceiling=100),void 0===$scope.step&&($scope.step=1),void 0===$scope.precision&&($scope.precision=0),void 0===$scope.value&&($scope.value=0)}}};return["language",Slider]}),define("common/directives",["require","angular","common/i18n/languageServices","common/services/displayServices","common/filters","./directives/KeyBinding","./directives/Model","./directives/Navbar","./directives/NotEmpty","./directives/FileModel","./directives/Saveable","./directives/Slider"],function(require){{var angular=require("angular"),languageServices=require("common/i18n/languageServices"),displayServices=require("common/services/displayServices"),filters=require("common/filters"),KeyBinding=require("./directives/KeyBinding"),Model=require("./directives/Model"),Navbar=require("./directives/Navbar"),NotEmpty=require("./directives/NotEmpty"),FileModel=require("./directives/FileModel"),Saveable=require("./directives/Saveable"),Slider=require("./directives/Slider"),moduleName="kasparGUI.common.directives",dependancies=[displayServices,languageServices,filters];
angular.module(moduleName,dependancies).directive("keybinding",KeyBinding).directive("model",Model).directive("guislider",Slider).directive("navbar",Navbar).directive("notEmpty",NotEmpty).directive("fileModel",FileModel).directive("saveable",Saveable)}return moduleName}),define("text!actions/directives/soundEditor.tpl.html",[],function(){return'<div>\n	<form\n		name="soundForm"\n		model="sound">\n		<div class="input-group">\n			<span class="input-group-addon inputLabel">{{language[\'action.sound.name\']}}</span>\n			<input\n				name="name"\n				type="text"\n				class="form-control"\n				placeholder="Sound Name"\n				required\n				saveable\n				ng-model="sound.name">\n		</div>\n		<div\n			class="input-group"\n			ng-hide="sound.uuid">\n			<span class="input-group-addon inputLabel">{{language[\'action.sound.selectFile\']}}</span>\n			<input\n				class="form-control"\n				ng-diabled="sound.uuid"\n				type="file"\n				name="soundFile"\n				accept="audio/x-wav,audio/wav,application/ogg"\n				file-model="soundFile" />\n			<span class="input-group-btn">\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-disabled="sound.uuid"\n					ng-click="uploadSound(soundFile)">{{language[\'action.sound.upload\']}}</button>\n			</span>\n		</div>\n		<div\n			class="input-group"\n			ng-show="sound.uuid">\n			<span class="input-group-addon inputLabel">{{language[\'action.sound.selectedFile\']}}</span>\n			<input\n				type="text"\n				ng-disabled="true"\n				class="form-control"\n				ng-model="sound.uuid" />\n		</div>\n	</form>\n	<div>\n		<strong>TODO:</strong>\n		<ul>\n			<li>Play current sound</li>\n		</ul>\n	</div>\n</div>'}),define("actions/directives/SoundEditor",["require","angular","common/directives","text!./soundEditor.tpl.html"],function(require){require("angular"),require("common/directives");var template=require("text!./soundEditor.tpl.html"),SoundEditor=function(language){return{template:template,restrict:"E",scope:{sound:"=action"},controller:function($scope,$http){$scope.language=language.getText(),$scope.uploadSound=function(file){var fd=new FormData;fd.append("sound",file),$http.post("/api/SoundData",fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).success(function(data){$scope.sound.uuid=data.uuid,$scope.sound.$save()})}}}};return["language","$parse",SoundEditor]}),define("actions/directives",["require","angular","angularSlider","angularXEditable","common/services/displayServices","robots/services/interfaceServices","robots/directives","common/filters","actions/models","./directives/ActionEditor","./directives/GroupEditor","./directives/PoseEditor","./directives/JointEditor","./directives/SequenceEditor","./directives/SoundEditor"],function(require){var angular=require("angular"),angularSlider=require("angularSlider"),angularXEditable=require("angularXEditable"),displayServices=require("common/services/displayServices"),interfaceServices=require("robots/services/interfaceServices"),robotDirectives=require("robots/directives"),filters=require("common/filters"),actionModels=require("actions/models"),ActionEditor=require("./directives/ActionEditor"),GroupEditor=require("./directives/GroupEditor"),PoseEditor=require("./directives/PoseEditor"),JointEditor=require("./directives/JointEditor"),SequenceEditor=require("./directives/SequenceEditor"),SoundEditor=require("./directives/SoundEditor"),moduleName="kasparGUI.actions.directives",dependancies=[displayServices,angularSlider,interfaceServices,filters,actionModels,robotDirectives,angularXEditable],module=angular.module(moduleName,dependancies).directive("actionEditor",ActionEditor).directive("groupactionEditor",GroupEditor).directive("poseactionEditor",PoseEditor).directive("sequenceactionEditor",SequenceEditor).directive("soundactionEditor",SoundEditor).directive("jointEditor",JointEditor);return module.run(function(editableOptions){editableOptions.theme="bs3"}),moduleName}),define("actions/ActionController",["require","angular","underscore","actions/models","actions/directives"],function(require){var angular=require("angular"),_=require("underscore");require("actions/models"),require("actions/directives");var ActionController=function($scope,$http,Action,ActionType,language){$scope.language=language.getText(),$scope.actions=Action.query(),$scope.types=ActionType.query(),$scope.$watch("action",function(action){if(void 0!==action&&null!==action){var abstractAction=$scope.action,concreteAction=$scope.action.getConcreteClassInstance();concreteAction.$promise.then(function(){$scope.actions[$scope.actions.indexOf(abstractAction)]=concreteAction,$scope.action=concreteAction})}action&&!_.find($scope.actions,action)&&$scope.actions.push(action)}),$scope.newAction=function(){$scope.action=new Action({type:"Action"}),$scope.actions.push($scope.action)},$scope.deleteAction=function(action){$scope.actions.splice($scope.actions.indexOf(action),1),$scope.action=void 0,void 0!=action.$delete&&action.$delete()};var errorFunc=function(status){console.log("Error sending file:"+status)},successFunc=function(data){$scope.newobjs.push(data)};$scope.importFiles=function(files){for(var i=0;i<files.length;i++){var fd=new FormData;fd.append("data",files[i]);{$http.post("/api/Action/Import",fd,{headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(successFunc).error(errorFunc)}}}};return["$scope","$http","Action","ActionType","language",ActionController]}),define("actions/ActionTestController",["require","angular","actions/models"],function(require){require("angular");require("actions/models");var ActionTestController=function($scope,$http,$q,$timeout,Action,ActionTest,language){$scope.language=language.getText(),$scope.running=!1,$scope.actions=Action.query(),$scope.output="",$scope.startAction=function(action){$scope.output+="Start action "+action.name+"\n",ActionTest.save({id:$scope.action.id}).$promise.then(getOutput())};var getOutput=function(){$scope.output+="TODO: live update of running actions\n"};$scope.stopAction=function(action){$scope.output+="TODO: Stop action "+action.name+"\n"}};return["$scope","$http","$q","$timeout","Action","ActionTest","language",ActionTestController]}),define("actions/controllers",["require","angular","common/i18n/languageServices","actions/models","actions/directives","./ActionController","./ActionTestController"],function(require){{var angular=require("angular"),languageServices=require("common/i18n/languageServices"),actionModels=require("actions/models"),actionDirectives=require("actions/directives"),ActionController=require("./ActionController"),ActionTestController=require("./ActionTestController"),moduleName="kasparGUI.actions",dependancies=[actionModels,actionDirectives,languageServices];angular.module(moduleName,dependancies).controller("actionController",ActionController).controller("actionTestController",ActionTestController)}return moduleName}),define("text!actions/index.tpl.html",[],function(){return"<ui-view />"}),define("text!actions/actionEdit.tpl.html",[],function(){return'<div\n	ng-cloak\n	id="actionsList">\n	<div class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'action.label\']}}</span>\n		<select\n			class="selectpicker form-control"\n			ng-model="action"\n			ng-disabled="actions.length == 0"\n			ng-options="action.name group by action.type for action in actions | orderBy:\'name\'">\n			<option value="">{{language[\'action.select.prompt\']}}</option>\n		</select>\n		<span class="input-group-btn">\n			<button\n				class="btn btn-default"\n				type="button"\n				ng-click="newAction()">{{language[\'action.new\']}}</button>\n			<button\n				class="btn btn-default"\n				ng-disabled="!action"\n				type="button"\n				ng-click="deleteAction(action)">{{language[\'action.delete\']}}</button>\n		</span>\n	</div>\n	<hr />\n	<div ng-if="action">\n		<div class="input-group">\n			<span class="input-group-addon inputLabel">{{language[\'action.type.label\']}}</span>\n			<select\n				ng-disabled="action.id"\n				class="selectpicker form-control"\n				ng-model="action.type"\n				ng-options="type.name as type.disp for type in types | orderBy:\'type.disp\'">\n				<option value="">{{language[\'action.type.select.prompt\']}}</option>\n			</select>\n		</div>\n		<action-editor\n			action="action"\n			actions="actions"></action-editor>\n	</div>\n</div>'}),define("text!actions/actionImport.tpl.html",[],function(){return'<div>\n	<div class="btn-group">\n		<div class="input-group">\n			<span class="input-group-addon inputLabel">{{language[\'action.import.selectFiles\']}}</span>\n			<input\n				class="form-control"\n				type="file"\n				multiple="multiple"\n				onchange="angular.element(this).scope().setFiles(this)" />\n			<span class="input-group-btn">\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-click="importFiles(files)">{{language[\'action.import.upload\']}}</button>\n			</span>\n		</div>\n	</div>\n	<div>\n		<div ng-repeat="obj in newobjs">{{obj}}</div>\n	</div>\n</div>'}),define("text!actions/actionTest.tpl.html",[],function(){return'<div>\n	<div class="input-group col-lg-12">\n		<span class="input-group-addon inputLabel">{{language[\'action.label\']}}</span>\n		<select\n			class="selectpicker form-control"\n			ng-model="action"\n			ng-options="action.name group by action.type for action in actions | orderBy:\'name\'"\n			ng-disabled="actions.length == 0">\n			<option value="">{{language[\'action.select.prompt\']}}</option>\n		</select>\n		<span class="input-group-btn">\n			<button\n				class="btn btn-default"\n				type="button"\n				ng-if="!actionTest.active"\n				ng-disabled="!action"\n				ng-click="startAction(action)">{{language[\'action.test\']}}</button>\n			<button\n				class="btn btn-default"\n				type="button"\n				ng-if="actionTest.active"\n				ng-disabled="!action"\n				ng-click="stopAction(action)">{{language[\'action.stop\']}}</button>\n		</span>\n	</div>\n	<div class="col-lg-6"></div>\n</div>\n<hr />\n<div\n	class="logWindow"\n	ng-show="action != \'\'">\n	<div class="col-lg-12 well maxHeight">\n		<pre class="scrollable maxHeight">{{output}}</pre>\n	</div>\n</div>'}),define("categories/action",["require","angular","angularUIRouter","actions/controllers","text!actions/index.tpl.html","text!actions/actionEdit.tpl.html","text!actions/actionImport.tpl.html","text!actions/actionTest.tpl.html"],function(require){var angular=require("angular"),uiRouter=require("angularUIRouter"),actionControllers=require("actions/controllers"),defaultTemplate=require("text!actions/index.tpl.html"),editTemplate=require("text!actions/actionEdit.tpl.html"),importTemplate=require("text!actions/actionImport.tpl.html"),testTemplate=require("text!actions/actionTest.tpl.html"),moduleName="kasparGUI.menu.action",dependancies=[uiRouter,actionControllers],Routes=function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("action",{url:"/action",template:defaultTemplate,"abstract":!0}).state("action.edit",{url:"{id:(?:/[0-9]{1,8})?}/edit",template:editTemplate,controller:"actionController"}).state("action.test",{url:"{id:(?:/[0-9]{1,8})?}/test",template:testTemplate,controller:"actionTestController"}).state("action.import",{url:"/import",template:importTemplate,controller:"actionController"})},module=angular.module(moduleName,dependancies);return module.config(["$stateProvider","$urlRouterProvider",Routes]),moduleName}),define("users/models/CustomAction",["require"],function(){var CustomAction=function(modelBuilder){var _service=modelBuilder.getModel("CustomAction");return _service};return["modelBuilder",CustomAction]}),define("users/models/CustomTrigger",["require"],function(){var CustomTrigger=function(modelBuilder){var _service=modelBuilder.getModel("CustomTrigger");return _service};return["modelBuilder",CustomTrigger]}),define("users/models/User",["require"],function(){var User=function(modelBuilder){var _service=modelBuilder.getModel("User");return _service};return["modelBuilder",User]}),define("users/models/UserAction",["require"],function(){var UserAction=function(modelBuilder){var _service=modelBuilder.getModel("UserAction");return _service};return["modelBuilder",UserAction]}),define("users/models",["require","angular","angularResource","./models/CustomAction","./models/CustomTrigger","./models/User","./models/UserAction"],function(require){{var angular=require("angular"),angularResource=require("angularResource"),CustomAction=require("./models/CustomAction"),CustomTrigger=require("./models/CustomTrigger"),User=require("./models/User"),UserAction=require("./models/UserAction"),moduleName="kasparGUI.users.models",dependancies=[angularResource];angular.module(moduleName,dependancies).factory("CustomAction",CustomAction).factory("CustomTrigger",CustomTrigger).factory("User",User).factory("UserAction",UserAction)}return moduleName}),define("operators/models/Operator",["require"],function(){var Operator=function(modelBuilder){var _service=modelBuilder.getModel("Operator");return _service};return["modelBuilder",Operator]}),define("operators/models",["require","angular","angularResource","./models/Operator"],function(require){{var angular=require("angular"),angularResource=require("angularResource"),Operator=require("./models/Operator"),moduleName="kasparGUI.operators.models",dependancies=[angularResource];angular.module(moduleName,dependancies).factory("Operator",Operator)}return moduleName}),define("operators/OperatorController",["require","angular","users/models","operators/models"],function(require){require("angular");require("users/models"),require("operators/models");var OperatorController=function($scope,Operator,User,language){$scope.language=language.getText(),$scope.operators=Operator.query(function(operators){$scope.selectedOperator=operators[0]}),$scope.usersSaved=!1,$scope.users=User.query(),$scope.$watch("operatorsForm.$pristine",function(value){value||($scope.usersSaved=!1)}),$scope.saveOperator=function(){$scope.formCtrl.$valid&&$scope.selectedOperator.$fromServer&&$scope.selectedOperator.$save(function(){$scope.usersSaved=!0,$scope.operatorsForm.$setPristine()})},$scope.newOperator=function(){var newOp=new Operator({fullname:"",name:"",users:[]});$scope.selectedOperator=newOp,$scope.operators.push(newOp)},$scope.deleteOperator=function(operator){operator.$delete(),$scope.operators.splice($scope.operators.indexOf(operator),1),$scope.selectedOperator=$scope.operators[0]},$scope.toggleOperatorUser=function(operator,user){if(void 0!==operator&&void 0!==operator.users){for(var found=!1,i=0;i<operator.users.length;i++)if(operator.users[i].id==user.id){operator.users.splice(i,1),found=!0;break}found||operator.users.push(user),$scope.saveOperator()}}};return["$scope","Operator","User","language",OperatorController]}),define("operators/controllers",["require","angular","common/i18n/languageServices","users/models","operators/models","./OperatorController"],function(require){{var angular=require("angular"),languageServices=require("common/i18n/languageServices"),userModels=require("users/models"),operatorModels=require("operators/models"),OperatorController=require("./OperatorController"),moduleName="kasparGUI.operators.controllers",dependancies=[userModels,languageServices,operatorModels];angular.module(moduleName,dependancies).controller("operatorController",OperatorController)}return moduleName}),define("text!operators/index.tpl.html",[],function(){return'<div>\n	<div id="operatorsList">\n		<div class="input-group">\n			<span class="input-group-addon inputLabel">{{language[\'operator.label\']}}</span>\n			<select\n				class="selectpicker form-control"\n				ng-model="selectedOperator"\n				ng-options="operator.fullname for operator in operators | orderBy:\'fullname\'">\n				<option value="">{{language[\'operator.select.prompt\']}}</option>\n			</select>\n			<span class="input-group-btn">\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-click="newOperator()">{{language[\'operator.new\']}}</button>\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-click="deleteOperator(selectedOperator)">{{language[\'operator.delete\']}}</button>\n			</span>\n		</div>\n	</div>\n	<form\n		ng-show="selectedOperator"\n		name="operatorsForm"\n		model="selectedOperator">\n		<div class="input-group">\n			<span class="input-group-addon inputLabel">{{language[\'operator.name\']}}</span>\n			<input\n				type="text"\n				class="form-control"\n				placeholder="Full Name"\n				saveable\n				required\n				name="fullname"\n				ng-model="selectedOperator.fullname">\n		</div>\n		<div class="input-group">\n			<span class="input-group-addon inputLabel">{{language[\'operator.users\']}}</span>\n			<div\n				class="list-group form-control listForm"\n				ng-blur="saveOperator()"\n				ng-class="{ \'has-success\': usersSaved, \'has-warning\': operatorsForm.$dirty && !userSaved }">\n				<span\n					class="list-group-item"\n					ng-repeat="user in users">\n					<span class="input-group">\n						<span class="input-group-addon">\n							<input\n								type="checkbox"\n								ng-disabled="!selectedOperator"\n								ng-checked="(selectedOperator.users | filter:{id:user.id}:true).length == 1"\n								ng-click="toggleOperatorUser(selectedOperator, user)">\n						</span>\n						<input\n							type="text"\n							class="form-control"\n							ng-click="toggleOperatorUser(selectedOperator, user)"\n							value="{{user.fullname}}"\n							ng-disabled="true">\n					</span>\n				</span>\n			</div>\n		</div>\n	</form>\n</div>\n<div ui-view></div>'}),define("triggers/models/ButtonHotkey",["require"],function(){var ButtonHotkey=function(modelBuilder){var _service=modelBuilder.getModel("ButtonHotkey");return _service};return["modelBuilder",ButtonHotkey]}),define("triggers/models/Trigger",["require"],function(){var Trigger=function($rootScope,modelBuilder){var resource=modelBuilder.getModel("Trigger",{},{create:{method:"POST",url:":type",params:{type:"@type"},isArray:!1},update:{method:"PUT",url:":type/:id",params:{type:"@type",id:"@id"},isArray:!1}});return resource};return["$rootScope","modelBuilder",Trigger]}),define("triggers/models/ButtonTrigger",["require"],function(){var ButtonTrigger=function($rootScope,modelBuilder){var resource=modelBuilder.getModel("ButtonTrigger");return resource};return["$rootScope","modelBuilder",ButtonTrigger]}),define("triggers/models/TriggerType",["require"],function(){var TriggerType=function(modelBuilder){var _service=modelBuilder.getModel("TriggerType");return _service};return["modelBuilder",TriggerType]}),define("triggers/models",["require","angular","angularResource","./models/ButtonHotkey","./models/Trigger","./models/ButtonTrigger","./models/TriggerType"],function(require){{var angular=require("angular"),angularResource=require("angularResource"),ButtonHotkey=require("./models/ButtonHotkey"),Trigger=require("./models/Trigger"),ButtonTrigger=require("./models/ButtonTrigger"),TriggerType=require("./models/TriggerType"),moduleName="kasparGUI.triggers.models",dependancies=[angularResource];angular.module(moduleName,dependancies).factory("ButtonHotkey",ButtonHotkey).factory("Trigger",Trigger).factory("ButtonTrigger",ButtonTrigger).factory("TriggerType",TriggerType)}return moduleName}),define("users/UserController",["require","angular","actions/models","triggers/models","users/models"],function(require){require("angular");require("actions/models"),require("triggers/models"),require("users/models");var UserController=function($scope,$filter,User,CustomAction,CustomTrigger,Action,Trigger,language){$scope.language=language.getText(),$scope.users=User.query(),$scope.$watch("selectedUser",function(user){void 0!==user&&void 0===user.speedmodifier&&(user.speedmodifier=100)})};return["$scope","$filter","User","CustomAction","CustomTrigger","Action","Trigger","language",UserController]}),define("users/controllers",["require","angular","common/i18n/languageServices","actions/models","triggers/models","users/models","./UserController"],function(require){{var angular=require("angular"),languageServices=require("common/i18n/languageServices"),actionModels=require("actions/models"),triggerModels=require("triggers/models"),userModels=require("users/models"),UserController=require("./UserController"),moduleName="kasparGUI.users.controllers",dependancies=[actionModels,languageServices,triggerModels,userModels];angular.module(moduleName,dependancies).controller("userController",UserController)}return moduleName}),define("text!users/index.tpl.html",[],function(){return'<div>\n	<div id="userList">\n		<div class="input-group">\n			<span class="input-group-addon inputLabel">{{language[\'user.label\']}}</span>\n			<select\n				class="selectpicker form-control"\n				ng-model="selectedUser"\n				ng-options="user.fullname for user in users | orderBy:\'fullname\'">\n				<option value="">{{language[\'user.select.prompt\']}}</option>\n			</select>\n			<span class="input-group-btn">\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-click="newObj(User, users)">{{language[\'user.new\']}}</button>\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-click="deleteObj(item, users)">{{language[\'user.delete\']}}</button>\n			</span>\n		</div>\n	</div>\n	<form\n		ng-if="selectedUser"\n		name="userForm"\n		model="selectedUser">\n		<div class="input-group">\n			<span class="input-group-addon inputLabel">{{language[\'user.name\']}}</span>\n			<input\n				type="text"\n				class="form-control"\n				placeholder="Full Name"\n				name="fullname"\n				required\n				ng-model="selectedUser.fullname"\n				saveable>\n		</div>\n		<div class="input-group">\n			<span class="input-group-addon inputLabel">{{language[\'user.custom.action.label\']}}</span>\n			<select\n				class="selectpicker form-control"\n				ng-model="selectedAction"\n				ng-options="action.name for action in selectedUser.actions | orderBy:\'name\'">\n			</select>\n			<span class="input-group-btn">\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-disabled="true"\n					ng-click="newAction()">{{language[\'user.custom.action.new\']}}</button>\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-disabled="true"\n					ng-click="deleteAction(selectedAction)">{{language[\'user.custom.action.delete\']}}</button>\n			</span>\n		</div>\n		<div class="input-group">\n			<span class="input-group-addon inputLabel">{{language[\'user.custom.trigger.label\']}}</span>\n			<select\n				class="selectpicker form-control"\n				ng-model="selectedTrigger"\n				ng-options="trigger.name for trigger in selectedUser.triggers | orderBy:\'name\'">\n			</select>\n			<span class="input-group-btn">\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-click="newTrigger()"\n					ng-disabled="true">{{language[\'user.custom.trigger.new\']}}</button>\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-disabled="true"\n					ng-click="deleteTrigger(selectedTrigger)">{{language[\'user.custom.trigger.delete\']}}</button>\n			</span>\n		</div>\n		<div class="input-group">\n			<span class="input-group-addon inputLabel">{{language[\'user.speedModifier\']}}</span>\n			<div\n				guislider\n				name="speed"\n				saveable\n				floor="1"\n				ceiling="300"\n				ng-disabled="true"\n				ng-model="selectedUser.speedmodifier"></div>\n			<span class="input-group-addon">{{selectedUser.speedmodifier}}%</span>\n		</div>\n	</form>\n</div>\n<div ui-view></div>'}),define("robots/RobotController",["require","angular","robots/models"],function(require){require("angular");require("robots/models");var RobotController=function(){};return["$scope","Robot","language",RobotController]}),define("robots/controllers",["require","angular","common/i18n/languageServices","robots/models","./RobotController"],function(require){{var angular=require("angular"),languageServices=require("common/i18n/languageServices"),robotModels=require("robots/models"),RobotController=require("./RobotController"),moduleName="kasparGUI.robots.controllers",dependancies=[robotModels,languageServices];angular.module(moduleName,dependancies).controller("robotController",RobotController)}return moduleName}),define("text!robots/index.tpl.html",[],function(){return'<div\n	ng-cloak>\n	<div class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'robot.label\']}}</span>\n		<select\n			class="selectpicker form-control"\n			ng-model="selected"\n			ng-options="(item.name + \' (\' + item.model.name + \': \' + item.version + \')\' ) for item in robots | orderBy:\'name\'">\n			<option value="">{{language[\'robot.select.prompt\']}}</option>\n		</select>\n		<span class="input-group-btn">\n			<button\n				class="btn btn-default"\n				ng-disabled="true"\n				type="button"\n				ng-click="newObj()">{{language[\'robot.new\']}}</button>\n			<button\n				class="btn btn-default"\n				ng-disabled="true"\n				type="button"\n				ng-click="deleteObj(selected)">{{language[\'robot.delete\']}}</button>\n		</span>\n	</div>\n	<hr />\n	<robot-editor robot="selected" ng-if="selected"></robot-editor>\n</div>'}),define("common/CommonController",["require","angular"],function(require){var CommonController=(require("angular"),function($scope){$scope.version="3.0 Alpha 10"});return["$scope","$rootScope",CommonController]}),define("common/SettingsController",["require","angular","common/models","robots/models"],function(require){require("angular");require("common/models"),require("robots/models");var SettingsController=function($q,$scope,Setting,Robot,language){$scope.language=language.getText(),$scope.robots=Robot.query(),$scope.settings=Setting.query(),$scope.settings.$promise.then(function(settings){for(var i=0;i<settings.length;i++)if("robot"==settings[i].key){$scope.robotSetting=settings[i];break}void 0===$scope.robotSetting&&($scope.robotSetting=new Setting({key:"robot",value:""}))}),$scope.$watch("robotSetting.value",function(newValue){void 0!==newValue&&$scope.robotSetting.$save()})};return["$q","$scope","Setting","Robot","language",SettingsController]}),define("common/controllers",["require","angular","common/i18n/languageServices","angularUIRouter","common/models","robots/models","./CommonController","./SettingsController"],function(require){{var angular=require("angular"),languageServices=require("common/i18n/languageServices"),uiRouter=require("angularUIRouter"),commonModels=require("common/models"),robotModels=require("robots/models"),CommonController=require("./CommonController"),SettingsController=require("./SettingsController"),moduleName="kasparGUI.common.controllers",dependancies=[uiRouter,languageServices,commonModels,robotModels];angular.module(moduleName,dependancies).controller("commonController",CommonController).controller("settingsController",SettingsController)}return moduleName}),define("text!common/settings.tpl.html",[],function(){return'<div\n	ng-cloak>\n	<div class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'common.setting.robot.label\']}}</span>\n		<select\n			class="selectpicker form-control"\n			ng-model="robotSetting.value"\n			ng-disabled="robots.length == 0"\n			ng-options="robot.name as (robot.name + \' (\' + robot.model.name + \': \' + robot.version + \')\' ) for robot in robots | orderBy:\'name\'">\n			<option value="">{{language[\'common.setting.robot.select.prompt\']}}</option>\n		</select>\n	</div>\n</div>'}),define("categories/admin",["require","angular","angularUIRouter","operators/controllers","text!operators/index.tpl.html","users/controllers","text!users/index.tpl.html","robots/controllers","text!robots/index.tpl.html","common/controllers","text!common/settings.tpl.html"],function(require){var angular=require("angular"),uiRouter=require("angularUIRouter"),operatorControllers=require("operators/controllers"),operatorTemplate=require("text!operators/index.tpl.html"),userControllers=require("users/controllers"),userTemplate=require("text!users/index.tpl.html"),robotControllers=require("robots/controllers"),robotTemplate=require("text!robots/index.tpl.html"),settingsControllers=require("common/controllers"),settingsTemplate=require("text!common/settings.tpl.html"),moduleName="kasparGUI.menu.admin",dependancies=[uiRouter,operatorControllers,userControllers,robotControllers,settingsControllers],Routes=function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("admin",{url:"/admin",template:"<ui-view/>","abstract":!0}).state("admin.operator",{url:"/operator{id:(?:/[0-9]{1,8})?}",template:operatorTemplate,controller:"operatorController"}).state("admin.user",{url:"/user{id:(?:/[0-9]{1,8})?}",template:userTemplate,controller:"userController"}).state("admin.robot",{url:"/robot{id:(?:/[0-9]{1,8})?}",template:robotTemplate,controller:"robotController"}).state("admin.setting",{url:"/setting",template:settingsTemplate,controller:"settingsController"})},module=angular.module(moduleName,dependancies);return module.config(["$stateProvider","$urlRouterProvider",Routes]),moduleName}),define("interactions/models/Interaction",["require"],function(){var Interaction=function(modelBuilder){var _service=modelBuilder.getModel("Interaction",{},{get:{method:"GET",cache:!1}});return _service};return["modelBuilder",Interaction]}),define("interactions/models/InteractionLog",["require"],function(){var Interaction=function(modelBuilder){var _service=modelBuilder.getModel("InteractionLog",{},{get:{method:"GET",cache:!1}},"Interaction/:interactionId/Log/:id");return _service};return["modelBuilder",Interaction]}),define("interactions/models",["require","angular","angularResource","./models/Interaction","./models/InteractionLog"],function(require){{var angular=require("angular"),angularResource=require("angularResource"),Interaction=require("./models/Interaction"),InteractionLog=require("./models/InteractionLog"),moduleName="kasparGUI.interactions.models",dependancies=[angularResource];angular.module(moduleName,dependancies).factory("Interaction",Interaction).factory("InteractionLog",InteractionLog)}return moduleName}),define("interactions/InteractionController",["require","angular","operators/models","users/models","triggers/models","interactions/models"],function(require){require("angular");require("operators/models"),require("users/models"),require("triggers/models"),require("interactions/models");var InteractionController=function($q,$scope,Operator,User,Interaction,ButtonTrigger,language){$scope.language=language.getText(),$scope.operators=Operator.query(),$scope.users=User.query(),$scope.interaction=null,$scope.keyBind=!0,$scope.showHotKeys=!0;var activeInteractions=Interaction.query({endTime:null});activeInteractions.$promise.then(function(result){void 0!==result&&result.length>0&&($scope.interaction=result[0],$scope.operator_id=$scope.interaction.operator_id,$scope.user_id=$scope.interaction.user_id)}),$scope.buttons=ButtonTrigger.query(),$scope.start=function(){$scope.interaction=new Interaction({startTime:new Date,user_id:$scope.user_id,robot_id:$scope.robot.id,operator_id:$scope.operator_id}),$scope.interaction.$save()},$scope.stop=function(){$scope.interaction.endTime=new Date,$scope.interaction.$save().then(function(){$scope.interaction=null})},$scope.getCategory=function(user,userList){if(void 0!==userList&&void 0!==user){for(var i=0;i<userList.length;i++)if(userList[i].id==user.id)return"Common";return"All"}}};return["$q","$scope","Operator","User","Interaction","ButtonTrigger","language",InteractionController]}),define("text!interactions/directives/actionButton.tpl.html",[],function(){return'<div ng-class="{\'input-group\': showHotKeys && keyDisplay }" class="actionButton">\n	<span ng-class="{\'input-group-btn\': showHotKeys && keyDisplay }" class="button">\n		<button\n			class="btn btn-default"\n			ng-class="{active: active}"\n			type="button"\n			ng-click="callButton(button.id)">{{button.name}}</button>\n	</span>\n	<span\n		class="form-control hotkey"\n		ng-show="showHotKeys && keyDisplay"\n		ng-disabled="true">{{keyDisplay}}</span>\n</div>\n'
}),define("interactions/directives/ActionButton",["require","angular","common/services/displayServices","actions/models","mousetrap","text!./actionButton.tpl.html"],function(require){require("angular");require("common/services/displayServices"),require("actions/models");var Mousetrap=require("mousetrap"),template=require("text!./actionButton.tpl.html"),ActionButton=function($q,$timeout,InteractionLog,hotkeyFormatter,language){return{template:template,restrict:"E",scope:{button:"=",interaction:"=",showHotKeys:"=",keyBind:"="},link:function(){},controller:function($scope){$scope.language=language.getText(),$scope.active=!1;var keyBinds=null;$scope.$watch("button",function(newValue){if(void 0!==newValue){for(var kb=[],i=0;i<$scope.button.hotKeys.length;i++)kb.push($scope.button.hotKeys[i].keyString);$scope.keyDisplay=kb.join(" | "),null!==keyBinds&&Mousetrap.unbind(keyBinds),keyBinds=[];for(var i=0;i<kb.length;i++){var key=kb[i];keyBinds.push(key),key.toLowerCase()!=key&&keyBinds.push(key.toLowerCase())}Mousetrap.bind(keyBinds,function(){return $scope.active=!0,$timeout(function(){$scope.active=!1},2e3),$scope.keyBind?($scope.callButton($scope.button.id),!1):void 0})}}),$scope.callButton=function(buttonId){InteractionLog.save({interactionId:$scope.interaction.id},{button_id:buttonId,interaction_id:$scope.interaction.id})}}}};return["$q","$timeout","InteractionLog","hotkeyFormatter","language",ActionButton]}),define("text!interactions/directives/actionButtons.tpl.html",[],function(){return'<div class="row">\n	<div\n		class="col-lg-3 col-md-6 col-sm-12 col-xs-12"\n		ng-repeat="button in buttons | orderBy:\'name\'">\n		<action-button\n			button="button"\n			interaction="interaction"\n			user="user"\n			show-hot-keys="showHotKeys"\n			key-bind="keyBind" />\n	</div>\n</div>'}),define("interactions/directives/ActionButtons",["require","angular","common/services/displayServices","actions/models","text!./actionButtons.tpl.html"],function(require){require("angular");require("common/services/displayServices"),require("actions/models");var template=require("text!./actionButtons.tpl.html"),ActionButtons=function($q,UserAction,hotkeyFormatter,language){return{template:template,restrict:"E",scope:{buttons:"=",user:"=",interaction:"=",showHotKeys:"=",keyBind:"="},link:function(){},controller:function($scope){$scope.language=language.getText()}}};return["$q","UserAction","hotkeyFormatter","language",ActionButtons]}),define("text!interactions/directives/operatorInteraction.tpl.html",[],function(){return'<div>\n	<strong>TODO</strong>\n	<ul>\n		<li><strong>Feedback on keypress</strong></li>\n		<li><strong>Log window with ???</strong></li>\n		<li><strong>Images from webcam(s)?</strong></li>\n	</ul>\n	<accordion close-others="true"> <accordion-group\n		is-open="isopen"> <accordion-heading>{{language[\'interaction.operator.view.buttons.label\']}}<i\n		class="pull-right glyphicon"\n		ng-class="{\'glyphicon-chevron-down\': isopen, \'glyphicon-chevron-right\': !isopen}"></i>\n	</accordion-heading>\n	<div class="btn-group">\n		<button\n			type="button"\n			class="btn btn-primary check"\n			ng-model="keyBind"\n			ng-click="setBinding(keyBind)"\n			btn-checkbox>{{language[\'interaction.operator.view.activateBindings\']}}</button>\n		<button\n			type="button"\n			class="btn btn-primary check"\n			ng-model="showHotKeys"\n			btn-checkbox>{{language[\'interaction.operator.view.showHotkeys\']}}</button>\n	</div>\n	<hr />\n	<action-buttons\n		interaction="interaction"\n		buttons="buttons"\n		show-hot-keys="showHotKeys"\n		user="user"\n		key-bind="keyBind" /></accordion-group> </accordion>\n</div>'}),define("interactions/directives/OperatorInteraction",["require","angular","text!./operatorInteraction.tpl.html","mousetrap"],function(require){var template=(require("angular"),require("text!./operatorInteraction.tpl.html")),Mousetrap=require("mousetrap"),OperatorInteraction=function(language){return{template:template,restrict:"E",scope:{operator:"=",user:"=",interaction:"=",buttons:"=",showHotKeys:"=",keyBind:"="},link:function(){},controller:function($scope){$scope.language=language.getText(),$scope.isopen=!0,$scope.setBinding=function(value){value?Mousetrap.pause():Mousetrap.unpause()}}}};return["language",OperatorInteraction]}),define("text!interactions/directives/userInteraction.tpl.html",[],function(){return'<div>\n	<strong>TODO</strong>\n	<ul>\n		<li><strong> FullScreen/No Menus </strong></li>\n		<li><strong> Other ?? </strong></li>\n	</ul>\n<!-- 	<action-buttons -->\n<!-- 		interaction="interaction" -->\n<!-- 		buttons="buttons" -->\n<!-- 		show-hot-keys="showHotKeys" -->\n<!-- 		user="user" -->\n<!-- 		key-bind="keyBind" /> -->\n</div>\n'}),define("interactions/directives/UserInteraction",["require","angular","text!./userInteraction.tpl.html"],function(require){var template=(require("angular"),require("text!./userInteraction.tpl.html")),UserInteraction=function(language){return{template:template,restrict:"E",scope:{user:"=",interaction:"=",buttons:"=",showHotKeys:"=",keyBind:"="},link:function(){},controller:function($scope){$scope.language=language.getText()}}};return["language",UserInteraction]}),define("interactions/directives",["require","angular","common/i18n/languageServices","common/services/displayServices","common/filters","interactions/models","./directives/ActionButton","./directives/ActionButtons","./directives/OperatorInteraction","./directives/UserInteraction"],function(require){{var angular=require("angular"),languageServices=require("common/i18n/languageServices"),displayServices=require("common/services/displayServices"),filters=require("common/filters"),interactionModels=require("interactions/models"),ActionButton=require("./directives/ActionButton"),ActionButtons=require("./directives/ActionButtons"),OperatorInteraction=require("./directives/OperatorInteraction"),UserInteraction=require("./directives/UserInteraction"),moduleName="kasparGUI.interactions.directives",dependancies=[displayServices,languageServices,filters,interactionModels];angular.module(moduleName,dependancies).directive("actionButton",ActionButton).directive("actionButtons",ActionButtons).directive("operatorInteraction",OperatorInteraction).directive("userInteraction",UserInteraction)}return moduleName}),define("interactions/controllers",["require","angular","common/i18n/languageServices","operators/models","users/models","triggers/models","interactions/models","./InteractionController","interactions/directives"],function(require){{var angular=require("angular"),languageServices=require("common/i18n/languageServices"),operatorModels=require("operators/models"),userModels=require("users/models"),triggerModels=require("triggers/models"),interactionModels=require("interactions/models"),InteractionController=require("./InteractionController"),interactionDirectives=require("interactions/directives"),moduleName="kasparGUI.interactions.controllers",dependancies=[operatorModels,languageServices,userModels,triggerModels,interactionModels,interactionDirectives];angular.module(moduleName,dependancies).controller("interactionController",InteractionController)}return moduleName}),define("text!interactions/index.tpl.html",[],function(){return"<ui-view />"}),define("text!interactions/begin.tpl.html",[],function(){return'<div ng-cloak>\n	<div class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'interaction.operator.label\']}}</span>\n		<select\n			class="selectpicker form-control"\n			ng-model="operator_id"\n			ng-disabled="interaction"\n			ng-options="operator.id as operator.fullname for operator in operators | orderBy:\'fullname\'">\n			<option value="">{{language[\'interaction.operator.select.prompt\']}}</option>\n		</select>\n	</div>\n	<div class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'interaction.user.label\']}}</span>\n		<select\n			class="selectpicker form-control"\n			ng-model="user_id"\n			ng-disabled="interaction"\n			ng-options="user.id as user.fullname group by getCategory(user, operator.users) for user in users | orderBy:\'fullname\'">\n			<option value="">{{language[\'interaction.user.select.prompt\']}}</option>\n		</select>\n	</div>\n	<robot-interface robot="robot"></robot-interface>\n	<div class="btn-toolbar">\n		<div class="btn-group">\n			<button\n				class="btn btn-default"\n				type="button"\n				ng-disabled="!(user_id && operator_id && robot.id)"\n				ng-if="interaction == null"\n				ng-click="start()">{{language[\'interaction.start\']}}</button>\n			<button\n				class="btn btn-default"\n				type="button"\n				ng-if="interaction != null"\n				ng-click="stop()">{{language[\'interaction.stop\']}}</button>\n		</div>\n	</div>\n	<tabset ng-show="interaction != null"> <tab\n		heading="Operator View"> <operator-interaction\n		operator="operator"\n		buttons="buttons"\n		user="user"\n		interaction="interaction"\n		key-bind="keyBind"\n		show-hot-keys="showHotKeys"></operator-interaction> </tab> <tab\n		heading="User View"> <user-interaction\n		user="user"\n		buttons="buttons"\n		interaction="interaction"\n		key-bind="keyBind"\n		show-hot-keys="showHotKeys"></user-interaction> </tab></tabset>\n</div>\n'}),define("text!interactions/log.tpl.html",[],function(){return'<h3 class="text-center">Past Interaction View Window</h3>\n<strong>TODO</strong>\n<ul>\n	<li><strong> View details of history </strong></li>\n	<li><strong> Merge with Manage screen? </strong></li>\n</ul>'}),define("text!interactions/manage.tpl.html",[],function(){return'<h3 class="text-center">Past Interaction Management Window</h3>\n<strong>TODO</strong>\n<ul>\n	<li><strong> Remove history </strong></li>\n	<li><strong> Annotate history </strong></li>\n	<li>Do we need the ability to prepare an interaction (choose activities, pre-interaction questionnaire)?</li>\n	<li>This would a be a good place for the post-interaction questionnaire from the IROMEC project</li>\n</ul>\n'}),define("categories/interaction",["require","angular","angularUIRouter","interactions/controllers","text!interactions/index.tpl.html","text!interactions/begin.tpl.html","text!interactions/log.tpl.html","text!interactions/manage.tpl.html"],function(require){var angular=require("angular"),uiRouter=require("angularUIRouter"),interactionControllers=require("interactions/controllers"),defaultTemplate=require("text!interactions/index.tpl.html"),beginTemplate=require("text!interactions/begin.tpl.html"),viewTemplate=require("text!interactions/log.tpl.html"),manageTemplate=require("text!interactions/manage.tpl.html"),moduleName="kasparGUI.menu.interaction",dependancies=[uiRouter,interactionControllers],Routes=function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("interaction",{url:"/interaction",template:defaultTemplate,"abstract":!0}).state("interaction.begin",{url:"/begin",template:beginTemplate,controller:"interactionController"}).state("interaction.view",{url:"{id:(?:/[0-9]{1,8})?}/view",template:viewTemplate,controller:"interactionController"}).state("interaction.manage",{url:"{id:(?:/[0-9]{1,8})?}/manage",template:manageTemplate,controller:"interactionController"})},module=angular.module(moduleName,dependancies);return module.config(["$stateProvider","$urlRouterProvider",Routes]),moduleName}),define("text!triggers/directives/buttonTriggerEditor.tpl.html",[],function(){return'<div>\n	<ng-form\n		name="buttonEditor"\n		model="button">\n	<div class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'trigger.button.name\']}}</span>\n		<input\n			name="buttonName"\n			saveable\n			required\n			type="text"\n			class="form-control"\n			placeholder="Button Trigger Name"\n			ng-model="button.name">\n	</div>\n	<div class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'trigger.button.action\']}}</span>\n		<select\n			class="selectpicker form-control"\n			saveable\n			name="action"\n			ng-model="button.action_id"\n			ng-options="action.id as action.name group by action.type for action in actions | orderBy:\'name\'">\n			<option value="">{{language[\'trigger.button.action.select.prompt\']}}</option>\n		</select>\n	</div>\n	<hotkey-editor\n		hotkey="hotkey"\n		button="button"\n		ng-repeat="hotkey in button.hotKeys"></hotkey-editor>\n	<button\n		class="btn btn-default"\n		type="button"\n		ng-click="addButton()">{{language[\'trigger.button.hotkey.new\']}}</button>\n	</ng-form>\n</div>'}),define("triggers/directives/ButtonTriggerEditor",["require","angular","triggers/models","text!./buttonTriggerEditor.tpl.html"],function(require){require("angular");require("triggers/models");var template=require("text!./buttonTriggerEditor.tpl.html"),ButtonTriggerEditor=function(ButtonHotkey,language){return{template:template,restrict:"E",scope:{button:"=trigger",actions:"="},controller:function($scope){$scope.language=language.getText(),$scope.addButton=function(){void 0===$scope.button.hotKeys&&($scope.button.hotKeys=[]),$scope.button.hotKeys.push(new ButtonHotkey({trigger_id:$scope.button.id}))}}}};return["ButtonHotkey","language",ButtonTriggerEditor]}),define("text!triggers/directives/compoundTriggerEditor.tpl.html",[],function(){return'<form\n	name="compountTriggerForm"\n	model="compound">\n	<div class="row">\n		<div class="col-lg-12">\n			<div class="input-group">\n				<span class="input-group-addon inputLabel">{{language[\'trigger.compound.name\']}}</span>\n				<input\n					type="text"\n					class="form-control"\n					placeholder="Compound Trigger Name"\n					saveable\n					required\n					name="name"\n					ng-model="compound.name">\n			</div>\n			<div class="input-group">\n				<span class="input-group-addon inputLabel">{{language[\'trigger.compound.action\']}}</span>\n				<select\n					class="selectpicker form-control"\n					ng-model="compound.action_id"\n					saveable\n					name="actionId"\n					ng-options="action.id as action.name group by action.type for action in actions | orderBy:\'name\'">\n					<option value="">{{language[\'trigger.compound.action.select.prompt\']}}</option>\n				</select>\n			</div>\n		</div>\n	</div>\n	<div class="row">\n		<div class="col-lg-12">\n			<div class="input-group">\n				<div class="input-group-addon inputLabel">{{language[\'trigger.compound.require.label\']}}</div>\n				<span class="input-group-btn">\n					<button\n						type="button"\n						class="btn btn-primary"\n						ng-model="compound.requireAll"\n						saveable\n						required\n						name="requireAll"\n						btn-radio="true">{{language[\'trigger.compound.require.all\']}}</button>\n					<button\n						type="button"\n						class="btn btn-primary"\n						saveable\n						required\n						name="requireAny"\n						ng-model="compound.requireAll"\n						btn-radio="false">{{language[\'trigger.compound.require.any\']}}</button>\n				</span>\n				<div class="input-group-addon">&nbsp;{{language[\'trigger.compound.require.trigger\']}}</div>\n				<div class="input-group-addon spring"></div>\n			</div>\n		</div>\n	</div>\n	<div class="row">\n		<div class="col-lg-5">\n			<div class="panel panel-default">\n				<div class="panel-heading">{{language[\'trigger.compound.triggers.list.label\']}}</div>\n				<div class="input-group fill">\n					<select\n						class="selectpicker fill form-control"\n						multiple\n						ng-multiple="true"\n						ng-model="toAdd"\n						ng-options="trigger.name for trigger in triggers | except:compound | except:compound.triggers | orderBy:\'name\'">\n					</select>\n				</div>\n			</div>\n		</div>\n		<div class="col-lg-2">\n			<div class="row">&nbsp;</div>\n			<div class="row">\n				<button\n					class="btn btn-default col-lg-12"\n					ng-disabled="!toAdd || toAdd.length == 0"\n					type="button"\n					ng-click="addTriggers(toAdd);toAdd=[]">{{language[\'trigger.compound.triggers.add\']}}\n					&rarr;</button>\n			</div>\n			<div class="row">\n				<button\n					class="btn btn-default col-lg-12"\n					ng-disabled="!toRemove || toRemove.length == 0"\n					type="button"\n					ng-click="removeTriggers(toRemove);toRemove=[]">&larr;\n					{{language[\'trigger.compound.triggers.remove\']}}</button>\n			</div>\n		</div>\n		<div class="col-lg-5">\n			<div class="panel panel-default">\n				<div class="panel-heading">{{language[\'trigger.compound.triggers.title\']}}</div>\n				<div class="input-group fill">\n					<select\n						class="selectpicker fill form-control"\n						multiple\n						ng-multiple="true"\n						ng-model="toRemove"\n						ng-options="trigger.name for trigger in compound.triggers | orderBy:\'name\'">\n					</select>\n				</div>\n			</div>\n		</div>\n	</div>\n</form>'}),define("triggers/directives/CompoundTriggerEditor",["require","angular","text!./compoundTriggerEditor.tpl.html"],function(require){var template=(require("angular"),require("text!./compoundTriggerEditor.tpl.html")),CompoundTriggerEditor=function(language){return{template:template,restrict:"E",scope:{compound:"=trigger",actions:"=",triggers:"="},link:function(){},controller:function($scope){$scope.language=language.getText(),$scope.$watch("compound",function(compound){void 0!==compound&&void 0===compound.triggers&&(compound.triggers=[])}),$scope.addTriggers=function(triggers){for(var i=0;i<triggers.length;i++)$scope.compound.triggers.push(triggers[i]);$scope.compountTriggerForm.$valid&&$scope.compound.$save()},$scope.removeTriggers=function(triggers){for(var i=0;i<triggers.length;i++)$scope.compound.triggers.splice($scope.compound.triggers.indexOf(triggers[i]),1);$scope.compountTriggerForm.$valid&&$scope.compound.$save()}}}};return["language",CompoundTriggerEditor]}),define("text!triggers/directives/hotkeyEditor.tpl.html",[],function(){return'<ng-form\n	name="hotkeyEditor"\n	model="hotkey">\n	<div class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'trigger.button.hotkey.label\']}}</span>\n		<input\n			type="text"\n			name="key"\n			class="form-control"\n			placeholder="Click here to enter keys"\n			saveable\n			ng-keydown="updateKey($event, hotkey)"\n			ng-model="hotkey.keyString">\n		<span class="input-group-btn">\n			<button\n				class="btn btn-default"\n				type="button"\n				ng-click="deleteKey()">{{language[\'trigger.button.hotkey.delete\']}}</button>\n		</span>\n	</div>\n</ng-form>'}),define("triggers/directives/HotkeyEditor",["require","angular","mousetrap","mousetrapPause","common/services/displayServices","triggers/models","text!./hotkeyEditor.tpl.html"],function(require){require("angular");require("mousetrap"),require("mousetrapPause"),require("common/services/displayServices"),require("triggers/models");var template=require("text!./hotkeyEditor.tpl.html"),HotkeyEditor=function(ButtonHotkey,hotkeyFormatter,language){return{template:template,restrict:"E",scope:{hotkey:"=",button:"="},controller:function($scope){$scope.language=language.getText(),$scope.deleteKey=function(){$scope.button.hotKeys.splice($scope.button.hotKeys.indexOf($scope.hotkey),1),void 0!==$scope.hotkey.id&&ButtonHotkey.delete({id:$scope.hotkey.id})},$scope.updateKey=function($event,hotKey){var key=($event.which||$event.keyCode,hotkeyFormatter.getDisplayFromEvent($event));""!==key&&(hotKey.keyString=key,$scope.hotkeyEditor.key.$dirty=!0,$event.preventDefault())}}}};return["ButtonHotkey","hotkeyFormatter","language",HotkeyEditor]}),define("text!triggers/directives/sensorTriggerEditor.tpl.html",[],function(){return'<div>\n	<ng-form\n		name="sensorEditor"\n		model="trigger">\n	<div class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'trigger.sensor.name\']}}</span>\n		<input\n			type="text"\n			class="form-control"\n			placeholder="Sensor Trigger Name"\n			name="name"\n			saveable\n			required\n			ng-model="trigger.name">\n	</div>\n	<div class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'trigger.sensor.action\']}}</span>\n		<select\n			class="selectpicker form-control"\n			saveable\n			name="action"\n			ng-model="trigger.action_id"\n			ng-options="action.id as action.name group by action.type for action in actions | orderBy:\'name\'">\n			<option value="">{{language[\'trigger.sensor.action.select.prompt\']}}</option>\n		</select>\n	</div>\n	<div class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'trigger.sensor.sensor\']}}</span>\n		<select\n			class="selectpicker form-control"\n			saveable\n			required\n			name="sensor"\n			ng-model="trigger.sensorName"\n			ng-options="sensor.name as sensor.name group by sensor.type for sensor in sensors | orderBy:\'name\'">\n			<option value="">{{language[\'trigger.sensor.sensor.select.prompt\']}}</option>\n		</select>\n	</div>\n	<sensor-value-editor\n		sensor="selectedSensor"\n		trigger="trigger"></sensor-value-editor>\n	<div>\n		<span>TODO:</span>\n		<ul>\n			<li>\'ActionSensor\' which triggers on action change</li>\n		</ul>\n	</div>\n	</ng-form>\n</div>'}),define("triggers/directives/SensorTriggerEditor",["require","angular","robots/models","text!./sensorTriggerEditor.tpl.html"],function(require){require("angular");require("robots/models");var template=require("text!./sensorTriggerEditor.tpl.html"),SensorTriggerEditor=function(Sensor,Trigger,language){return{template:template,restrict:"E",scope:{trigger:"=",actions:"="},link:function(){},controller:function($scope){$scope.language=language.getText(),$scope.sensors=Sensor.query(),$scope.$watch("trigger.sensorName",function(sensorName){$scope.sensors.$promise.then(function(sensors){if(void 0!==sensorName)for(var i=0;i<sensors.length;i++)if(sensors[i].name==sensorName){$scope.selectedSensor=sensors[i];break}})})}}};return["Sensor","Trigger","language",SensorTriggerEditor]}),define("text!triggers/directives/sensorValueEditor.tpl.html",[],function(){return'<div>\n	<div ng-show="sensor">\n		<div ng-if="sensor.value_type.type==\'DiscreteValueType\'">TODO:\n			Show discrete values</div>\n		<div ng-if="sensor.value_type.type==\'ContinuousValueType\'">\n			<button\n				type="button"\n				class="btn btn-primary"\n				ng-disabled="true">{{language[\'trigger.sensor.connect\']}}</button>\n			{{language[\'trigger.sensor.current\']}}\n			<progressbar\n				class="progress-striped active"\n				max="sensor.value_type.maxValue - sensor.value_type.minValue"\n				value="currentValue"> <i>{{current_value}}</i></progressbar>\n		</div>\n		<accordion close-others="true"> <accordion-group\n			is-open="basicopen"> <accordion-heading>\n		{{language[\'trigger.sensor.basic.label\']}}<i\n			class="pull-right glyphicon"\n			ng-class="{\'glyphicon-chevron-down\': basicopen, \'glyphicon-chevron-right\': !basicopen}"></i>\n		</accordion-heading>\n		<div>\n			<div class="btn-group">\n				<button\n					type="button"\n					class="btn btn-primary"\n					ng-model="trigger.sensorValue"\n					btn-radio="\'eval::on\'">{{language[\'trigger.sensor.basic.on\']}}</button>\n				<button\n					type="button"\n					class="btn btn-primary"\n					ng-model="trigger.sensorValue"\n					btn-radio="\'eval::off\'">{{language[\'trigger.sensor.basic.off\']}}</button>\n			</div>\n			<small>{{language[\'trigger.sensor.basic.help.short\']}}</small>\n		</div>\n		</accordion-group> <accordion-group is-open="advancedopen"> <accordion-heading>\n		{{language[\'trigger.sensor.advanced.label\']}} <i\n			class="pull-right glyphicon"\n			ng-class="{\'glyphicon-chevron-down\': advancedopen, \'glyphicon-chevron-right\': !advancedopen}"></i>\n		</accordion-heading>\n		<div class="col-lg-12">\n			<div class="input-group">\n				<div class="input-group-addon inputLabel">{{language[\'trigger.sensor.advanced.compare.label\']}}</div>\n				<select\n					class="selectpicker form-control"\n					name="sensorCompare"\n					ng-model="trigger.comparison"\n					saveable\n					ng-required="trigger.sensorValue.substring(0,4) != \'eval\'"\n					style="width: 25%"\n					ng-options="value.compare as (value.name + \' (\' + value.compare + \')\') for value in comparisons">\n					<option value="">{{language[\'trigger.sensor.advanced.compare.select.prompt\']}}</option>\n				</select>\n				<div\n					guislider\n					name="sensorValue"\n					saveable\n					required\n					style="width: 75%"\n					floor="sensor.value_type.minValue"\n					ceiling="sensor.value_type.maxValue"\n					step="step"\n					ng-model="trigger.sensorValue"></div>\n				<div\n					class="input-group-addon">{{trigger.sensorValue}}</div>\n				<!--div\n					ng-if="sensor.value_type.type==\'ContinuousValueType\'"\n					class="input-group-addon">{{trigger.sensorValue}}</div>\n				<div\n					ng-if="sensor.value_type.type==\'DiscreteValueType\'"\n					class="input-group-addon">TODO: Discrete Values</div-->\n			</div>\n		</div>\n		</accordion-group> </accordion>\n	</div>\n</div>\n'}),define("triggers/directives/SensorValueEditor",["require","angular","text!./sensorValueEditor.tpl.html"],function(require){var template=(require("angular"),require("text!./sensorValueEditor.tpl.html")),SensorValueEditor=function(Sensor,modelBuilder,language){return{template:template,restrict:"E",scope:{sensor:"=",trigger:"=",currentValue:"=value"},link:function(scope){scope.comparisons=[{name:"less than",compare:"<"},{name:"less or equal to",compare:"<="},{name:"exactly",compare:"=="},{name:"greater or equal to",compare:">="},{name:"greater than",compare:">"}]},controller:function($scope,$window){$scope.language=language.getText(),$scope.Math=$window.Math,$scope.sensor=null,$scope.basicopen=!1,$scope.advancedopen=!0,$scope.step=1,$scope.$watch("trigger.sensorValue",function(value){void 0!==value&&null!==value&&($scope.basicopen=void 0!==value.indexOf&&0===value.indexOf("eval::"),$scope.advancedopen=!$scope.basicopen)}),$scope.$watch("sensor",function(sensor){void 0!==sensor&&null!==sensor&&void 0!==sensor.id&&(void 0===$scope.sensor.$promise&&($scope.sensor=Sensor.get({id:sensor.id})),$scope.sensor.$promise.then(function(){void 0!==$scope.sensor&&($scope.sensor=$scope.sensor.getConcreteClassInstance(),$scope.sensor.$promise.then(function(){$scope.step=$scope.Math.pow(10,-1*$scope.sensor.value_type.precision)}))}))})}}};return["Sensor","modelBuilder","language",SensorValueEditor]}),define("text!triggers/directives/timeTriggerEditor.tpl.html",[],function(){return'<form\n	name="timeTriggerForm"\n	model="time">\n	<div class="row">\n		<div class="col-lg-12">\n			<div class="input-group">\n				<span class="input-group-addon inputLabel">{{language[\'trigger.time.name\']}}</span>\n				<input\n					type="text"\n					class="form-control"\n					placeholder="Time Trigger Name"\n					saveable\n					required\n					name="name"\n					ng-model="time.name">\n			</div>\n			<div class="input-group">\n				<span class="input-group-addon inputLabel">{{language[\'trigger.time.action\']}}</span>\n				<select\n					class="selectpicker form-control"\n					ng-model="time.action_id"\n					saveable\n					name="actionId"\n					ng-options="action.id as action.name group by action.type for action in actions | orderBy:\'name\'">\n					<option value="">{{language[\'trigger.time.action.select.prompt\']}}</option>\n				</select>\n			</div>\n			<div class="input-group">\n				<span class="input-group-addon inputLabel">{{language[\'trigger.time.trigger\']}}</span>\n				<select\n					class="selectpicker form-control"\n					ng-model="time.trigger_id"\n					saveable\n					name="triggerId"\n					ng-options="trigger.id as trigger.name group by trigger.type for trigger in triggers | orderBy:\'name\'">\n					<option value="">{{language[\'trigger.time.trigger.select.prompt\']}}</option>\n				</select>\n			</div>\n		</div>\n	</div>\n	<div class="row">\n		<div class="col-lg-12">\n			<div class="input-group">\n				<div class="input-group-addon inputLabel">{{language[\'trigger.time.time\']}}</div>\n				<span class="input-group-btn">\n					<button\n						type="button"\n						class="btn btn-primary"\n						ng-model="time.mustStayActive"\n						saveable\n						required\n						name="whileActive"\n						btn-radio="true">{{language[\'trigger.time.time.while\']}}</button>\n					<button\n						type="button"\n						class="btn btn-primary"\n						saveable\n						required\n						name="stayActive"\n						ng-model="time.mustStayActive"\n						btn-radio="false">{{language[\'trigger.time.time.since\']}}</button>\n				</span>\n				<div\n					guislider\n					name="time"\n					saveable\n					required\n					floor="0"\n					ceiling="300"\n					ng-model="time.time"></div>\n				<div class="input-group-addon">{{time.time}}\n					{{language[\'trigger.time.time.units\']}} &#177;</div>\n				<div\n					guislider\n					name="variance"\n					saveable\n					required\n					floor="0"\n					ceiling="time.time"\n					ng-model="time.variance"></div>\n				<div class="input-group-addon">{{time.variance}}\n					{{language[\'trigger.time.time.units\']}}</div>\n			</div>\n		</div>\n	</div>\n</form>'}),define("triggers/directives/TimeTriggerEditor",["require","angular","triggers/models","text!./timeTriggerEditor.tpl.html"],function(require){require("angular");require("triggers/models");var template=require("text!./timeTriggerEditor.tpl.html"),TimeTriggerEditor=function(language){return{template:template,restrict:"E",scope:{time:"=trigger",actions:"=",triggers:"="},link:function(){},controller:function($scope){$scope.language=language.getText(),$scope.addTriggers=function(triggers){void 0===$scope.time.triggers&&($scope.time.triggers=[]);for(var i=0;i<triggers.length;i++)$scope.time.triggers.push(triggers[i]);save()};var save=function(){var selfIndex=-1;if(void 0!==$scope.time.id){for(var i=0;i<$scope.time.triggers.length;i++)if($scope.time.triggers[i].id===$scope.time.id){selfIndex=i;break}}else selfIndex=$scope.time.triggers.indexOf($scope.time);selfIndex>=0?($scope.time.triggers.splice(selfIndex,1),$scope.time.selfRef=!0,$scope.time.$save(function(){selfIndex=-1;for(var i=0;i<$scope.time.triggers.length;i++)if($scope.time.triggers[i].id===$scope.time.id){selfIndex=i;break}0>selfIndex&&$scope.time.triggers.push($scope.time)})):$scope.time.$save()};$scope.removeTriggers=function(triggers){for(var i=0;i<triggers.length;i++)$scope.time.triggers.splice($scope.time.triggers.indexOf(triggers[i]),1);save()}}}};return["language",TimeTriggerEditor]}),define("text!triggers/directives/triggerEditor.tpl.html",[],function(){return'<buttontrigger-editor\n	ng-if="trigger.type==\'ButtonTrigger\'"\n	trigger="trigger"\n	actions="actions"></buttontrigger-editor>\n<compoundtrigger-editor\n	ng-if="trigger.type==\'CompoundTrigger\'"\n	trigger="trigger"\n	triggers="triggers"\n	actions="actions"></compoundtrigger-editor>\n<sensortrigger-editor\n	ng-if="trigger.type==\'SensorTrigger\'"\n	trigger="trigger"\n	actions="actions"></sensortrigger-editor>\n<timetrigger-editor\n	ng-if="trigger.type==\'TimeTrigger\'"\n	trigger="trigger"\n	triggers="triggers"\n	actions="actions"></timetrigger-editor>'}),define("triggers/directives/TriggerEditor",["require","angular","text!./triggerEditor.tpl.html"],function(require){var template=(require("angular"),require("text!./triggerEditor.tpl.html")),TriggerEditor=function($compile,language){return{template:template,restrict:"E",scope:{trigger:"=",triggers:"=",actions:"="},controller:function($scope){$scope.language=language.getText()}}};return["$compile","language",TriggerEditor]}),define("triggers/directives",["require","angular","common/i18n/languageServices","common/services/displayServices","common/filters","triggers/models","robots/models","./directives/ButtonTriggerEditor","./directives/CompoundTriggerEditor","./directives/HotkeyEditor","./directives/SensorTriggerEditor","./directives/SensorValueEditor","./directives/TimeTriggerEditor","./directives/TriggerEditor"],function(require){{var angular=require("angular"),languageServices=require("common/i18n/languageServices"),displayServices=require("common/services/displayServices"),filters=require("common/filters"),triggerModels=require("triggers/models"),robotModels=require("robots/models"),ButtonTriggerEditor=require("./directives/ButtonTriggerEditor"),CompoundTriggerEditor=require("./directives/CompoundTriggerEditor"),HotkeyEditor=require("./directives/HotkeyEditor"),SensorTriggerEditor=require("./directives/SensorTriggerEditor"),SensorValueEditor=require("./directives/SensorValueEditor"),TimeTriggerEditor=require("./directives/TimeTriggerEditor"),TriggerEditor=require("./directives/TriggerEditor"),moduleName="kasparGUI.triggers.directives",dependancies=[displayServices,languageServices,filters,robotModels,triggerModels];
angular.module(moduleName,dependancies).directive("buttontriggerEditor",ButtonTriggerEditor).directive("compoundtriggerEditor",CompoundTriggerEditor).directive("hotkeyEditor",HotkeyEditor).directive("sensortriggerEditor",SensorTriggerEditor).directive("sensorValueEditor",SensorValueEditor).directive("timetriggerEditor",TimeTriggerEditor).directive("triggerEditor",TriggerEditor)}return moduleName}),define("triggers/TriggerController",["require","angular","actions/models","triggers/models","robots/models"],function(require){var angular=require("angular");require("actions/models"),require("triggers/models"),require("robots/models");var TriggerController=function($scope,$http,Action,Trigger,TriggerType,Robot,language){$scope.language=language.getText(),$scope.triggers=Trigger.query(),$scope.actions=Action.query(),$scope.types=TriggerType.query(),$scope.newobjs=[],$scope.setFiles=function(element){$scope.$apply(function($scope){$scope.files=element.files})},$scope.$watch("trigger",function(action){if(void 0!==action){var abstractTrigger=$scope.trigger,concreteTrigger=$scope.trigger.getConcreteClassInstance();concreteTrigger.$promise.then(function(){$scope.triggers[$scope.triggers.indexOf(abstractTrigger)]=concreteTrigger,$scope.trigger=concreteTrigger})}}),$scope.newTrigger=function(){$scope.trigger=new Trigger,$scope.triggers.push($scope.trigger)},$scope.deleteTrigger=function(trigger){$scope.triggers.splice($scope.triggers.indexOf(trigger),1),$scope.trigger=$scope.triggers[0],trigger.$delete()};var errorFunc=function(status){console.log("Error sending file:"+status)},successFunc=function(data){$scope.newobjs.push(data)};$scope.importFiles=function(files){for(var i=0;i<files.length;i++){var fd=new FormData;fd.append("data",files[i]);{$http.post("/api/Trigger/import",fd,{headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(successFunc).error(errorFunc)}}}};return["$scope","$http","Action","Trigger","TriggerType","Robot","language",TriggerController]}),define("triggers/controllers",["require","angular","common/i18n/languageServices","actions/models","triggers/models","triggers/directives","./TriggerController"],function(require){{var angular=require("angular"),languageServices=require("common/i18n/languageServices"),actionModels=require("actions/models"),triggerModels=require("triggers/models"),triggerDirectives=require("triggers/directives"),TriggerController=require("./TriggerController"),moduleName="kasparGUI.triggers.controllers",dependancies=[actionModels,languageServices,triggerModels,triggerDirectives];angular.module(moduleName,dependancies).controller("triggerController",TriggerController)}return moduleName}),define("text!triggers/index.tpl.html",[],function(){return"<ui-view />"}),define("text!triggers/triggerEdit.tpl.html",[],function(){return'<div\n	id="triggersList">\n	<div class="input-group">\n		<span class="input-group-addon inputLabel">{{language[\'trigger.label\']}}</span>\n		<select\n			class="selectpicker form-control"\n			ng-model="trigger"\n			ng-disabled="triggers.length == 0"\n			ng-options="item.name group by item.type for item in triggers | orderBy:\'name\'">\n			<option value="">{{language[\'trigger.select.prompt\']}}</option>\n		</select>\n		<span class="input-group-btn">\n			<button\n				class="btn btn-default"\n				type="button"\n				ng-click="newTrigger()">{{language[\'trigger.new\']}}</button>\n			<button\n				ng-disabled="!trigger"\n				class="btn btn-default"\n				type="button"\n				ng-click="deleteTrigger(trigger)">{{language[\'trigger.delete\']}}</button>\n		</span>\n	</div>\n	<div ng-show="trigger">\n		<div class="input-group">\n			<span class="input-group-addon inputLabel">{{language[\'trigger.type.label\']}}</span>\n			<select\n				ng-disabled="trigger.id"\n				class="selectpicker form-control"\n				ng-model="trigger.type"\n				ng-options="type.name as type.disp for type in types | orderBy:\'type.disp\'">\n				<option value="">{{language[\'trigger.type.select.prompt\']}}</option>\n			</select>\n		</div>\n		<trigger-editor\n			trigger="trigger"\n			actions="actions"\n			triggers="triggers"></trigger-editor>\n	</div>\n</div>'}),define("text!triggers/triggerTest.tpl.html",[],function(){return'<h3 class="text-center">Trigger Test Window</h3>\n<div>Test trigger conditions without running action</div>\n<div>\n	<strong>TODO</strong>\n	<ul>\n		<li><strong> Will need to revisit after all triggers are\n				available </strong></li>\n	</ul>\n</div>'}),define("text!triggers/triggerImport.tpl.html",[],function(){return'<div>\n	<div class="btn-group">\n		<div class="input-group">\n			<span class="input-group-addon inputLabel">{{language[\'trigger.import.selectFiles\']}}</span>\n			<input\n				class="form-control"\n				type="file"\n				multiple="multiple"\n				onchange="angular.element(this).scope().setFiles(this)" />\n			<span class="input-group-btn">\n				<button\n					class="btn btn-default"\n					type="button"\n					ng-click="importFiles(files)">{{language[\'trigger.import.upload\']}}</button>\n			</span>\n		</div>\n	</div>\n	<div>\n		<div ng-repeat="obj in newobjs">{{obj}}</div>\n	</div>\n</div>'}),define("categories/trigger",["require","angular","angularUIRouter","triggers/controllers","text!triggers/index.tpl.html","text!triggers/triggerEdit.tpl.html","text!triggers/triggerTest.tpl.html","text!triggers/triggerImport.tpl.html"],function(require){var angular=require("angular"),uiRouter=require("angularUIRouter"),triggerControllers=require("triggers/controllers"),defaultTemplate=require("text!triggers/index.tpl.html"),editTemplate=require("text!triggers/triggerEdit.tpl.html"),testTemplate=require("text!triggers/triggerTest.tpl.html"),importTemplate=require("text!triggers/triggerImport.tpl.html"),moduleName="kasparGUI.menu.trigger",dependancies=[uiRouter,triggerControllers],Routes=function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("trigger",{url:"/trigger",template:defaultTemplate,"abstract":!0}).state("trigger.edit",{url:"{id:(?:/[0-9]{1,8})?}/edit",template:editTemplate,controller:"triggerController"}).state("trigger.test",{url:"{id:(?:/[0-9]{1,8})?}/test",template:testTemplate,controller:"triggerController"}).state("trigger.import",{url:"/import",template:importTemplate,controller:"triggerController"})},module=angular.module(moduleName,dependancies);return module.config(["$stateProvider","$urlRouterProvider",Routes]),moduleName}),define("text!teacher/index.tpl.html",[],function(){return'<login\n	ng-hide="teacher"\n	teacher="teacher"></login>\n<home\n	ng-show="teacher"\n	teacher="teacher"></home>'}),define("teacher/services/GameService",["require","angular"],function(require){var GameService=(require("angular"),function(){this.getGames=function(){return[{name:"Game 1",plays:10,desc_short:"Duis auctor neq...",desc_long:"Duis auctor neque luctus nibh facilisis, at suscipit nunc mattis. Phasellus sollicitudin porta urna, eu lobortis tortor viverra eget. Mauris vitae orci orci. Sed faucibus est et ex semper tempor. Donec gravida nisi at leo pharetra pharetra. Etiam mauris ex, condimentum eget nulla nec, rutrum pulvinar odio. Vivamus ante lectus, pharetra id ex pulvinar, semper dictum sem. Etiam vitae congue dolor. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Maecenas at tellus at massa commodo porttitor eu sed metus. Sed rutrum, risus at tincidunt porttitor, ipsum nisl posuere tellus, auctor ultrices metus felis vel metus. Integer elementum non velit vitae rutrum. Cras laoreet pharetra augue, et cursus odio consequat eget. Nulla leo justo, lacinia sed eros vitae, tempor sollicitudin lacus.",totTime:"2h35m",lastPlay:"15/4/2014",thumbsrc:"animation_thumb.png",fullsrc:"animation.png",objectives:[{title:"Turn Taking",key:"turntaking"},{title:"Interaction",key:"interaction"}],tags:[{title:"Slow",key:"slow"},{title:"Movement",key:"movement"}]},{name:"Game 2",plays:10,desc_short:"Pellentesque ha...",desc_long:"Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nulla faucibus suscipit pretium. Nulla quis velit odio. Nunc quis condimentum nisi, et efficitur ipsum. Morbi sed libero sit amet ante venenatis auctor in sit amet lorem. Aliquam erat volutpat. In pulvinar ex vel turpis viverra condimentum. Pellentesque ut pulvinar turpis, ac sollicitudin elit. Cras accumsan ornare libero, in varius tortor malesuada non. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Donec et finibus ante, sit amet bibendum mi. Sed vitae accumsan tellus, at aliquam erat.",totTime:"2h35m",lastPlay:"15/4/2014",thumbsrc:"animation_thumb.png",fullsrc:"animation.png",objectives:[{title:"Turn Taking",key:"turntaking"},{title:"Interaction",key:"interaction"}],tags:[{title:"Quick",key:"quick"},{title:"Movement",key:"movement"}]},{name:"Game 3",plays:10,desc_short:"Lorem ipsum dol...",desc_long:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla non orci pharetra, ornare sapien a, pharetra elit. Proin non ultrices massa. Nam ac accumsan erat. Curabitur interdum volutpat nulla non porttitor. Aenean posuere leo sapien, at ullamcorper mi venenatis eu. Nunc fermentum sapien in leo tincidunt, sed porta libero porttitor. Praesent consequat justo quis felis elementum, et tincidunt ipsum finibus. Duis vestibulum erat non lacinia gravida. In neque urna, scelerisque sit amet tellus eget, vestibulum ullamcorper neque.",totTime:"2h35m",lastPlay:"15/4/2014",thumbsrc:"music_thumb.png",fullsrc:"music.png",objectives:[{title:"Other",key:"other"}],tags:[{title:"Music",key:"music"},{title:"Game",key:"game"}]},{name:"Game 4",plays:10,desc_short:"Maecenas facili...",desc_long:"Maecenas facilisis eleifend est. Nunc tristique iaculis sapien quis ullamcorper. Proin vitae magna vitae arcu semper suscipit a a eros. In posuere nulla erat, vel maximus metus tristique non. Duis et posuere erat. Morbi fermentum commodo congue. Integer pellentesque rhoncus risus, non tristique ex mollis nec.",totTime:"2h35m",lastPlay:"15/4/2014",thumbsrc:"animation_thumb.png",fullsrc:"animation.png",objectives:[{title:"Other",key:"other"},{title:"Interaction",key:"interaction"}],tags:[{title:"Quick",key:"quick"},{title:"Talking",key:"talking"}]},{name:"Game 5",plays:10,desc_short:"Lorem ipsum dol...",desc_long:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed vestibulum ipsum at odio pharetra, et semper ligula venenatis. Curabitur et nisl massa. Nam a justo lacinia, porta est ut, porttitor nisl. Donec nec tortor id eros pellentesque dignissim. Maecenas vehicula orci at sapien faucibus finibus vel eget magna. Integer sit amet imperdiet massa, fermentum consectetur neque. Morbi gravida purus dapibus, semper mi at, ultrices erat. Vivamus ultricies at velit nec lobortis. Phasellus in justo id dui tempus pellentesque. Nulla ut nunc dapibus, vehicula risus pharetra, facilisis libero. Quisque vitae elit nec leo tincidunt molestie.",totTime:"2h35m",lastPlay:"15/4/2014",thumbsrc:"animation_thumb.png",fullsrc:"animation.png",objectives:[{title:"Turn Taking",key:"turntaking"},{title:"Other",key:"other"}]},{name:"Game 6",plays:10,desc_short:"Mauris luctus d...",desc_long:"Mauris luctus dui in lectus efficitur fermentum. Duis a leo luctus, hendrerit orci in, pharetra turpis. Donec non feugiat est. Pellentesque accumsan ligula odio, in egestas nunc fermentum non. Etiam venenatis mi a justo lobortis interdum. Nam congue fermentum urna ut hendrerit. Cras eget nulla velit.",totTime:"2h35m",lastPlay:"15/4/2014",thumbsrc:"animation_thumb.png",fullsrc:"animation.png",tags:[{title:"Interactive",key:"interaction"},{title:"Talking",key:"talking"}]}]}});return GameService}),define("teacher/services/InteractionService",["require","angular"],function(require){var InteractionService=(require("angular"),function(){this.getInteractions=function(){return[{date:"13/4/2014",time:"1:35pm",totalTime:"30m",score:{total:1,parent:{experience:4},child:{experience:1,engagement:1}},games:[{name:"Game 1",plays:10,desc_short:"Duis auctor neq...",desc_long:"Duis auctor neque luctus nibh facilisis, at suscipit nunc mattis. Phasellus sollicitudin porta urna, eu lobortis tortor viverra eget. Mauris vitae orci orci. Sed faucibus est et ex semper tempor. Donec gravida nisi at leo pharetra pharetra. Etiam mauris ex, condimentum eget nulla nec, rutrum pulvinar odio. Vivamus ante lectus, pharetra id ex pulvinar, semper dictum sem. Etiam vitae congue dolor. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Maecenas at tellus at massa commodo porttitor eu sed metus. Sed rutrum, risus at tincidunt porttitor, ipsum nisl posuere tellus, auctor ultrices metus felis vel metus. Integer elementum non velit vitae rutrum. Cras laoreet pharetra augue, et cursus odio consequat eget. Nulla leo justo, lacinia sed eros vitae, tempor sollicitudin lacus.",totTime:"2h35m",lastPlay:"15/4/2014",thumbsrc:"ability_thumb.png",fullsrc:"ability.png",objectives:[{title:"Turn Taking",key:"turntaking"},{title:"Interaction",key:"interaction"}],tags:[{title:"Slow",key:"slow"},{title:"Movement",key:"movement"}]},{name:"Game 3",plays:10,desc_short:"Lorem ipsum dol...",desc_long:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla non orci pharetra, ornare sapien a, pharetra elit. Proin non ultrices massa. Nam ac accumsan erat. Curabitur interdum volutpat nulla non porttitor. Aenean posuere leo sapien, at ullamcorper mi venenatis eu. Nunc fermentum sapien in leo tincidunt, sed porta libero porttitor. Praesent consequat justo quis felis elementum, et tincidunt ipsum finibus. Duis vestibulum erat non lacinia gravida. In neque urna, scelerisque sit amet tellus eget, vestibulum ullamcorper neque.",totTime:"2h35m",lastPlay:"15/4/2014",thumbsrc:"music_thumb.png",fullsrc:"music.png",objectives:[{title:"Other",key:"other"}],tags:[{title:"Music",key:"music"},{title:"Game",key:"game"}]}],notes:[{title:"A note",text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam tempus accumsan consectetur. Cras lobortis, lacus et blandit mattis, sem erat egestas eros, non placerat erat ante feugiat velit. Sed facilisis tortor eget sapien condimentum, eu malesuada mauris faucibus. Curabitur aliquam dolor eu ex molestie, ac auctor urna cursus. Donec vel accumsan nisl. Cras est odio, rhoncus at enim at, maximus aliquet nunc. Nullam dapibus egestas nibh. Vestibulum faucibus purus sit amet sagittis semper. Vestibulum finibus sem nec augue rutrum pretium. Donec elit lectus, convallis eu viverra sit amet, ornare sed turpis. Praesent condimentum et felis nec accumsan. Phasellus bibendum suscipit ultricies. Phasellus mattis risus vel finibus luctus. Curabitur erat orci, convallis eu sollicitudin et, pellentesque id turpis. Sed malesuada, turpis id luctus facilisis, sapien est pulvinar magna, ac semper leo urna eu libero. Donec vitae maximus odio, quis pharetra purus.\nDonec nibh lectus, consectetur id finibus pulvinar, volutpat sit amet leo. Praesent rhoncus magna odio, a placerat eros faucibus in. Sed fringilla finibus orci sed lacinia. Nullam varius diam et tellus iaculis, vel tristique nulla ultrices. Suspendisse tincidunt pulvinar tortor, eu iaculis ligula mattis nec. Praesent sodales egestas nisl ut ornare. Curabitur sed vulputate mi. In hendrerit bibendum scelerisque."}],user:{name:"John Smith",birthday:"5/7/2008",gender:"M",thumbsrc:"user_thumb.png",fullsrc:""}},{date:"13/4/2014",time:"9:15pm",totalTime:"30m",score:{total:1,parent:{experience:3},child:{experience:1,engagement:2}},games:[{name:"Game 1",plays:10,desc_short:"Duis auctor neq...",desc_long:"Duis auctor neque luctus nibh facilisis, at suscipit nunc mattis. Phasellus sollicitudin porta urna, eu lobortis tortor viverra eget. Mauris vitae orci orci. Sed faucibus est et ex semper tempor. Donec gravida nisi at leo pharetra pharetra. Etiam mauris ex, condimentum eget nulla nec, rutrum pulvinar odio. Vivamus ante lectus, pharetra id ex pulvinar, semper dictum sem. Etiam vitae congue dolor. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Maecenas at tellus at massa commodo porttitor eu sed metus. Sed rutrum, risus at tincidunt porttitor, ipsum nisl posuere tellus, auctor ultrices metus felis vel metus. Integer elementum non velit vitae rutrum. Cras laoreet pharetra augue, et cursus odio consequat eget. Nulla leo justo, lacinia sed eros vitae, tempor sollicitudin lacus.",totTime:"2h35m",lastPlay:"15/4/2014",thumbsrc:"ability_thumb.png",fullsrc:"ability.png",objectives:[{title:"Turn Taking",key:"turntaking"},{title:"Interaction",key:"interaction"}],tags:[{title:"Slow",key:"slow"},{title:"Movement",key:"movement"}]},{name:"Game 3",plays:10,desc_short:"Lorem ipsum dol...",desc_long:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla non orci pharetra, ornare sapien a, pharetra elit. Proin non ultrices massa. Nam ac accumsan erat. Curabitur interdum volutpat nulla non porttitor. Aenean posuere leo sapien, at ullamcorper mi venenatis eu. Nunc fermentum sapien in leo tincidunt, sed porta libero porttitor. Praesent consequat justo quis felis elementum, et tincidunt ipsum finibus. Duis vestibulum erat non lacinia gravida. In neque urna, scelerisque sit amet tellus eget, vestibulum ullamcorper neque.",totTime:"2h35m",lastPlay:"15/4/2014",thumbsrc:"music_thumb.png",fullsrc:"music.png",objectives:[{title:"Other",key:"other"}],tags:[{title:"Music",key:"music"},{title:"Game",key:"game"}]}],notes:[{title:"A note",text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sed est accumsan, euismod augue sit amet, feugiat nulla. Suspendisse a arcu eu augue feugiat efficitur eget vel augue. Mauris tempor sapien a rutrum vulputate. Donec ac cursus odio, eu scelerisque lectus. Proin pulvinar dictum arcu vitae laoreet. Morbi tincidunt dui sit amet purus consectetur faucibus. Donec libero urna, tincidunt nec porta vitae, bibendum ac massa. Vivamus ac est eros."}],user:{name:"John Smith",birthday:"5/7/2008",gender:"M",thumbsrc:"user_thumb.png",fullsrc:""}},{date:"15/4/2014",totalTime:"30m",time:"1:35pm",score:{total:3,parent:{experience:3},child:{experience:3,engagement:3}},games:[{name:"Game 2",plays:10,desc_short:"Pellentesque ha...",desc_long:"Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nulla faucibus suscipit pretium. Nulla quis velit odio. Nunc quis condimentum nisi, et efficitur ipsum. Morbi sed libero sit amet ante venenatis auctor in sit amet lorem. Aliquam erat volutpat. In pulvinar ex vel turpis viverra condimentum. Pellentesque ut pulvinar turpis, ac sollicitudin elit. Cras accumsan ornare libero, in varius tortor malesuada non. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Donec et finibus ante, sit amet bibendum mi. Sed vitae accumsan tellus, at aliquam erat.",totTime:"2h35m",lastPlay:"15/4/2014",thumbsrc:"strategy_thumb.png",fullsrc:"strategy.png",objectives:[{title:"Turn Taking",key:"turntaking"},{title:"Interaction",key:"interaction"}],tags:[{title:"Quick",key:"quick"},{title:"Movement",key:"movement"}]}],notes:[{title:"A note",text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque molestie, odio quis imperdiet sodales, massa nisl pulvinar velit, ut facilisis urna odio vitae metus. Nulla pretium diam et commodo lobortis. Nunc ac cursus diam, vitae dapibus mi. Morbi bibendum elementum urna, vitae cursus nulla facilisis rutrum. Sed suscipit mauris mauris, eu imperdiet sem dignissim quis. Etiam massa risus, aliquet ac molestie sed, sollicitudin id felis. Interdum et malesuada fames ac ante ipsum primis in faucibus. Vestibulum nec urna ac enim sagittis semper. Sed rhoncus, nibh non elementum eleifend, nisl felis laoreet diam, vitae congue ex mi id elit. Phasellus malesuada urna a mattis pretium. Maecenas auctor porta libero, vitae aliquet risus. Ut viverra metus auctor purus vulputate, non vulputate justo volutpat."}],user:{name:"John Smith",birthday:"5/7/2008",gender:"M",thumbsrc:"user_thumb.png",fullsrc:""}},{date:"16/4/2014",totalTime:"30m",time:"1:35pm",score:{total:3,parent:{experience:5},child:{experience:4,engagement:3}},games:[{name:"Game 4",plays:10,desc_short:"Maecenas facili...",desc_long:"Maecenas facilisis eleifend est. Nunc tristique iaculis sapien quis ullamcorper. Proin vitae magna vitae arcu semper suscipit a a eros. In posuere nulla erat, vel maximus metus tristique non. Duis et posuere erat. Morbi fermentum commodo congue. Integer pellentesque rhoncus risus, non tristique ex mollis nec.",totTime:"2h35m",lastPlay:"15/4/2014",thumbsrc:"puzzle_thumb.png",fullsrc:"puzzle.png",objectives:[{title:"Other",key:"other"},{title:"Interaction",key:"interaction"}],tags:[{title:"Quick",key:"quick"},{title:"Talking",key:"talking"}]}],notes:[{title:"A note",text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque molestie, odio quis imperdiet sodales, massa nisl pulvinar velit, ut facilisis urna odio vitae metus. Nulla pretium diam et commodo lobortis. Nunc ac cursus diam, vitae dapibus mi. Morbi bibendum elementum urna, vitae cursus nulla facilisis rutrum. Sed suscipit mauris mauris, eu imperdiet sem dignissim quis. Etiam massa risus, aliquet ac molestie sed, sollicitudin id felis. Interdum et malesuada fames ac ante ipsum primis in faucibus. Vestibulum nec urna ac enim sagittis semper. Sed rhoncus, nibh non elementum eleifend, nisl felis laoreet diam, vitae congue ex mi id elit. Phasellus malesuada urna a mattis pretium. Maecenas auctor porta libero, vitae aliquet risus. Ut viverra metus auctor purus vulputate, non vulputate justo volutpat."}],user:{name:"John Smith",birthday:"5/7/2008",gender:"M",thumbsrc:"user_thumb.png",fullsrc:""}},{date:"17/4/2014",totalTime:"30m",time:"1:35pm",score:{total:5,parent:{experience:2},child:{experience:5,engagement:5}},games:[{name:"Game 4",plays:10,desc_short:"Maecenas facili...",desc_long:"Maecenas facilisis eleifend est. Nunc tristique iaculis sapien quis ullamcorper. Proin vitae magna vitae arcu semper suscipit a a eros. In posuere nulla erat, vel maximus metus tristique non. Duis et posuere erat. Morbi fermentum commodo congue. Integer pellentesque rhoncus risus, non tristique ex mollis nec.",totTime:"2h35m",lastPlay:"15/4/2014",thumbsrc:"puzzle_thumb.png",fullsrc:"puzzle.png",objectives:[{title:"Other",key:"other"},{title:"Interaction",key:"interaction"}],tags:[{title:"Quick",key:"quick"},{title:"Talking",key:"talking"}]},{name:"Game 5",plays:10,desc_short:"Lorem ipsum dol...",desc_long:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed vestibulum ipsum at odio pharetra, et semper ligula venenatis. Curabitur et nisl massa. Nam a justo lacinia, porta est ut, porttitor nisl. Donec nec tortor id eros pellentesque dignissim. Maecenas vehicula orci at sapien faucibus finibus vel eget magna. Integer sit amet imperdiet massa, fermentum consectetur neque. Morbi gravida purus dapibus, semper mi at, ultrices erat. Vivamus ultricies at velit nec lobortis. Phasellus in justo id dui tempus pellentesque. Nulla ut nunc dapibus, vehicula risus pharetra, facilisis libero. Quisque vitae elit nec leo tincidunt molestie.",totTime:"2h35m",lastPlay:"15/4/2014",thumbsrc:"realtime_thumb.png",fullsrc:"realtime.png",objectives:[{title:"Turn Taking",key:"turntaking"},{title:"Other",key:"other"}]},{name:"Game 6",plays:10,desc_short:"Mauris luctus d...",desc_long:"Mauris luctus dui in lectus efficitur fermentum. Duis a leo luctus, hendrerit orci in, pharetra turpis. Donec non feugiat est. Pellentesque accumsan ligula odio, in egestas nunc fermentum non. Etiam venenatis mi a justo lobortis interdum. Nam congue fermentum urna ut hendrerit. Cras eget nulla velit.",totTime:"2h35m",lastPlay:"15/4/2014",thumbsrc:"color_thumb.png",fullsrc:"color.png",tags:[{title:"Interactive",key:"interaction"},{title:"Talking",key:"talking"}]}],notes:[{title:"A note",text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus tempor ultricies quam. Nulla tristique risus lobortis metus sodales ornare. Duis iaculis condimentum nulla, nec mollis turpis semper id. Fusce in mi tellus. Donec vel euismod libero. Ut ac tempor ante, quis hendrerit purus. Nulla quis nisi velit. Aenean cursus ipsum et interdum commodo. Aliquam nibh massa, dignissim eget ex et, eleifend convallis orci. Suspendisse posuere tortor fringilla tortor facilisis convallis. Morbi ullamcorper felis ac ex volutpat rhoncus."}],user:{name:"Jill Smith",birthday:"5/7/2008",gender:"F",thumbsrc:"user_thumb.png",fullsrc:"girl.png"}}]}});return InteractionService}),define("teacher/services/ObjectiveService",["require","angular"],function(require){var ObjectiveService=(require("angular"),function(){this.getObjectives=function(){return[{title:"Turn Taking",key:"turntaking"},{title:"Interaction",key:"interaction"},{title:"Other",key:"other"}]}});return ObjectiveService}),define("teacher/services/TagService",["require","angular"],function(require){var TagService=(require("angular"),function(){this.getTags=function(){return[{title:"Slow",key:"slow"},{title:"Movement",key:"movement"},{title:"Quick",key:"quick"},{title:"Music",key:"music"},{title:"Game",key:"game"},{title:"Talking",key:"talking"},{title:"Interactive",key:"interaction"}]}});return TagService}),define("teacher/services/UserService",["require","angular"],function(require){var UserService=(require("angular"),function(){this.getUsers=function(){return[{name:"John Smith",birthday:"5/7/2008",gender:"M",thumbsrc:"user_thumb.png",fullsrc:"user.png",objectives:[{title:"Turn Taking",key:"turntaking"},{title:"Interaction",key:"interaction"}]},{name:"Jill Smith",birthday:"5/7/2008",gender:"F",thumbsrc:"user_thumb.png",fullsrc:"user.png",objectives:[{title:"Other",key:"other"}]},{name:"Jane Smith",birthday:"5/7/2008",gender:"F",thumbsrc:"user_thumb.png",fullsrc:"user.png",objectives:[{title:"Interaction",key:"interaction"}]},{name:"Jimmy Smith",birthday:"5/7/2008",gender:"M",thumbsrc:"user_thumb.png",fullsrc:"user.png",objectives:[]}]}});return UserService}),define("teacher/services/dataProvider",["require","angular","./GameService","./InteractionService","./ObjectiveService","./TagService","./UserService"],function(require){{var angular=require("angular"),GameService=require("./GameService"),InteractionService=require("./InteractionService"),ObjectiveService=require("./ObjectiveService"),TagService=require("./TagService"),UserService=require("./UserService"),moduleName="kasparGUI.teacher.dataProvider",dependancies=[];angular.module(moduleName,dependancies).service("gameService",GameService).service("interactionService",InteractionService).service("objectiveService",ObjectiveService).service("tagService",TagService).service("userService",UserService)}return moduleName}),define("text!teacher/directives/activeInteraction.tpl.html",[],function(){return'<div class="row">\n	<div class="col-lg-2 col-md-3 col-sm-4 col-xs-12">\n		<div class="row">\n			<div class="col-lg-12">\n				<span class="title">Play Scenarios</span>\n			</div>\n		</div>\n		<div class="row">\n			<container-game\n				ng-repeat="game in games"\n				game="game"\n				short="true"\n				class="clickable"\n				ng-class="{activegame: game.started && !game.finished, finishedgame:game.started && game.finished, selected:selectedGame==game}"\n				ng-click=changeGame(game)></container-game>\n		</div>\n		<div class="row">\n			<div class="col-lg-12">\n				<button\n					type="button"\n					ng-click="endInteraction()"\n					class="btn btn-default btn-lg">Finish Session</button>\n			</div>\n		</div>\n	</div>\n	<div\n		class="col-lg-10 col-md-9 col-sm-8 col-xs-12"\n		ng-show="selectedGame">\n		<interaction-game game="selectedGame" interaction="interaction"></interaction-game>\n	</div>\n</div>'}),define("teacher/directives/ActiveInteraction",["require","angular","text!./activeInteraction.tpl.html"],function(require){var template=(require("angular"),require("text!./activeInteraction.tpl.html")),ActiveInteraction=function(){return{template:template,restrict:"E",scope:{interaction:"=",user:"=",games:"=",onFinished:"=?"},link:function(){},controller:function($scope){$scope.changeGame=function(game){$scope.selectedGame&&$scope.selectedGame.started&&!$scope.selectedGame.finished?alert("Please finish current game first!"):$scope.selectedGame=game},$scope.endInteraction=function(){$scope.selectedGame&&$scope.selectedGame.started&&!$scope.selectedGame.finished?alert("Please finish current game first!"):($scope.interaction.totalTime="30m",$scope.onFinished&&$scope.onFinished())}}}};return ActiveInteraction}),define("text!teacher/directives/beginInteraction.tpl.html",[],function(){return'<div class="row">\n	<div class="col-lg-2 col-md-4 col-sm-4 col-xs-12">\n		<container-user user="user"></container-user>\n	</div>\n	<div class="col-lg-10 col-md-8 col-sm-8 col-xs-12">\n		<div class="row">\n			<div class="col-lg-12">\n				<span class="title">Selected Play Scenarios</span>\n			</div>\n		</div>\n		<div class="row">\n			<container-game\n				ng-repeat="game in games"\n				game=\'game\'></container-game>\n		</div>\n	</div>\n</div>\n<div class="row">\n	<div class="col-lg-12">\n		<span class="title"> Objectives to be covered:</span>\n		<container-objective\n			ng-repeat="objective in getObjectives()"\n			objective=\'objective\'></container-objective>\n	</div>\n</div>\n<div class="row">\n	<div class="col-lg-12">\n		<button\n			type="button"\n			class="btn btn-default btn-lg"\n			ng-click="start()">Start Session</button>\n		<button\n			type="button"\n			class="btn btn-default btn-lg"\n			ng-click="back()">Back</button>\n	</div>\n</div>'}),define("teacher/directives/BeginInteraction",["require","angular","text!./beginInteraction.tpl.html"],function(require){var template=(require("angular"),require("text!./beginInteraction.tpl.html")),BeginInteraction=function(){return{template:template,restrict:"E",scope:{teacher:"=",user:"=",games:"=",interaction:"=",onFinished:"=?",onCanceled:"=?"},link:function(){},controller:function($scope){$scope.getObjectives=function(){var objectives=[];if($scope.games)for(var i=0;i<$scope.games.length;i++)if($scope.games[i].objectives)for(var j=0;j<$scope.games[i].objectives.length;j++){for(var found=!1,k=0;k<objectives.length;k++)if(objectives[k].key==$scope.games[i].objectives[j].key){found=!0;break}found||objectives.push($scope.games[i].objectives[j])}return objectives},$scope.back=function(){$scope.onCanceled&&$scope.onCanceled()},$scope.start=function(){$scope.interaction={date:"13/4/2014",totalTime:"",score:{total:0,parent:{experience:0},child:{experience:0,engagement:0}},games:[],notes:[],user:$scope.user},$scope.onFinished&&$scope.onFinished()}}}};return BeginInteraction}),define("text!teacher/directives/selectGames.tpl.html",[],function(){return'<div class="row">\n	<div class="col-lg-2 col-md-3 col-sm-4 col-xs-12">\n		<div class="row">\n			<div class="col-xs-12">\n				<container-user user="user"></container-user>\n			</div>\n		</div>\n		<div\n			class="row"\n			ng-show="selected.length">\n			<div class="col-xs-12">\n				<span class="title">Selected Play Scenarios</span>\n			</div>\n		</div>\n		<div\n			class="row"\n			ng-show="selected.length">\n			<div class="col-xs-12">\n				<container-game\n					ng-repeat="game in selected | orderBy:\'name\'"\n					game="game"\n					short="true"></container-game>\n			</div>\n		</div>\n	</div>\n	<div class="col-lg-10 col-md-9 col-sm-8 col-xs-12">\n		<div\n			class="row"\n			ng-show="user.objectives">\n			<div class="col-xs-12">\n				<span class="title">Chosen objectives for {{user.name}} to\n					cover:</span>\n				<container-objective\n					ng-repeat="objective in user.objectives"\n					objective=\'objective\'></container-objective>\n			</div>\n		</div>\n		<div\n			class="row"\n			ng-show="user.objectives">\n			<div class="col-lg-12">\n				<span class="title">Targeted Play Scenarios</span>\n			</div>\n		</div>\n		<div\n			class="row"\n			ng-show="user.objectives">\n			<container-game\n				ng-repeat="game in games | filter:itemFilter"\n				class="clickable"\n				ng-click="selectGame(game)"\n				ng-class="{selected:isSelected(game)}"\n				game=\'game\'></container-game>\n		</div>\n		<div class="row">\n			<div class="col-lg-12">\n				<span class="title">All Play Scenarios</span>\n			</div>\n		</div>\n		<div class="row">\n			<container-game\n				ng-repeat="game in games"\n				class="clickable"\n				ng-click="selectGame(game)"\n				ng-class="{selected:isSelected(game)}"\n				game=\'game\'></container-game>\n		</div>\n	</div>\n</div>\n<div class="row">\n	<div class="col-lg-12">\n		<button\n			type="button"\n			ng-click="confirmGames()"\n			class="btn btn-default btn-lg">Next</button>\n		<button\n			type="button"\n			ng-click="back()"\n			class="btn btn-default btn-lg">Back</button>\n	</div>\n</div>'
}),define("teacher/directives/SelectGames",["require","angular","text!./selectGames.tpl.html","teacher/services/dataProvider"],function(require){var template=(require("angular"),require("text!./selectGames.tpl.html"));require("teacher/services/dataProvider");var Games=function(gameService){return{template:template,restrict:"E",scope:{teacher:"=",user:"=",selectedGames:"=",onFinished:"=?",onCanceled:"=?"},link:function(){},controller:function($scope){$scope.selected=[],$scope.games=gameService.getGames(),$scope.confirmGames=function(){$scope.selectedGames=$scope.selected,$scope.onFinished&&$scope.onFinished()},$scope.$watch("user.objectives",function(objectives){if($scope.selected=[],null!==objectives&&void 0!==objectives&&$scope.games)for(var i=0;i<$scope.games.length;i++)$scope.itemFilter($scope.games[i])&&$scope.selected.push($scope.games[i])}),$scope.itemFilter=function(element){if(element&&element.objectives&&$scope.user&&$scope.user.objectives)for(var i=0;i<element.objectives.length;i++)for(var j=0;j<$scope.user.objectives.length;j++)if(element.objectives[i].tag==$scope.user.objectives[j].tag)return!0;return!1},$scope.selectGame=function(game){$scope.selected||($scope.selected=[]);for(var i=0;i<$scope.selected.length;i++)if($scope.selected[i]==game)return void $scope.selected.splice(i,1);$scope.selected.push(game)},$scope.back=function(){$scope.onCanceled&&$scope.onCanceled()},$scope.isSelected=function(game){if($scope.selected)for(var i=0;i<$scope.selected.length;i++)if($scope.selected[i]==game)return!0;return!1}}}};return["gameService",Games]}),define("text!teacher/directives/container_game.tpl.html",[],function(){return'\n<div\n	class="container_game">\n	<div class="center">\n		<img ng-src="img/teacher/game/{{game.thumbsrc}}" />\n	</div>\n	<div class="name center">{{game.name}}</div>\n	<div ng-hide="short || game.plays===undefined" class="numPlays"><span class="title">Times Played:</span> {{game.plays}}</div>\n	<div ng-hide="short || !game.desc_short" class="desc_short">{{game.desc_short}}...</div>\n	<div ng-hide="short || game.totTime===undefined" class="totalTime">{{game.totTime}}</div>\n	<div ng-hide="short || game.lastPlay===undefined" class="lastPlayed">{{game.lastPlay}}</div>\n</div>'}),define("teacher/directives/Container_Game",["require","angular","text!./container_game.tpl.html"],function(require){var template=(require("angular"),require("text!./container_game.tpl.html")),Container_Game=function(){return{template:template,restrict:"E",scope:{game:"=","short":"=?"},link:function(){},controller:function(){}}};return Container_Game}),define("text!teacher/directives/container_note.tpl.html",[],function(){return'\n<div class="container_note">\n	<div class="center"><span class="title">{{note.title}}</span></div>\n	<div>{{note.text}}</div>\n</div>'}),define("teacher/directives/Container_Note",["require","angular","text!./container_note.tpl.html"],function(require){var template=(require("angular"),require("text!./container_note.tpl.html")),Container_Note=function(){return{template:template,restrict:"E",scope:{note:"="},link:function(){},controller:function(){}}};return Container_Note}),define("text!teacher/directives/container_objective.tpl.html",[],function(){return" {{objective.title}} \n"}),define("teacher/directives/Container_Objective",["require","angular","text!./container_objective.tpl.html"],function(require){var template=(require("angular"),require("text!./container_objective.tpl.html")),Container_Objective=function(){return{template:template,restrict:"E",scope:{objective:"="},link:function(){},controller:function(){}}};return Container_Objective}),define("text!teacher/directives/container_tag.tpl.html",[],function(){return" {{tag.title}} \n"}),define("teacher/directives/Container_Tag",["require","angular","text!./container_tag.tpl.html"],function(require){var template=(require("angular"),require("text!./container_tag.tpl.html")),Container_Tag=function(){return{template:template,restrict:"E",scope:{tag:"="},link:function(){},controller:function(){}}};return Container_Tag}),define("text!teacher/directives/container_user.tpl.html",[],function(){return'\n<div class="container_user">\n	<div class="center">\n		<img ng-src="img/teacher/user/{{user.thumbsrc}}" />\n	</div>\n	<div class="center">{{user.name}}</div>\n</div>'}),define("teacher/directives/Container_User",["require","angular","text!./container_user.tpl.html"],function(require){var template=(require("angular"),require("text!./container_user.tpl.html")),Container_User=function(){return{template:template,restrict:"E",scope:{user:"="},link:function(){},controller:function(){}}};return Container_User}),define("text!teacher/directives/detail_game.tpl.html",[],function(){return'\n<div class="detail_game">\n	<div>\n		<img ng-src="img/teacher/game/{{game.fullsrc}}" />\n	</div>\n	<div class="title">{{game.name}}</div>\n	<div>{{game.desc_long}}</div>\n	<div ng-show="game.objectives">\n		<span class="title">Objectives:</span>\n		<span\n			ng-repeat="objective in game.objectives"\n			ng-class="{highlight:objective.key==selectedObjective.key}"\n			class="clickable"\n			ng-click="toggleObjective(objective)">{{objective.title}}, </span>\n	</div>\n	<div><span class="title">Number of Plays:</span> {{game.plays}}</div>\n	<div><span class="title">Total Playtime:</span> {{game.totTime}}</div>\n	<div><span class="title">Last Time Played:</span> {{game.lastPlay}}</div>\n	<div ng-show="game.tags">\n		<span class="title">Tags:</span>\n		<span\n			ng-repeat="tag in game.tags"\n			ng-class="{highlight:tag.key==selectedTag.key}"\n			class="clickable"\n			ng-click="toggleTag(tag)">{{tag.title}}, </span>\n	</div>\n</div>'}),define("teacher/directives/Detail_Game",["require","angular","text!./detail_game.tpl.html"],function(require){var template=(require("angular"),require("text!./detail_game.tpl.html")),Detail_Game=function(){return{template:template,restrict:"E",scope:{game:"=",selectedObjective:"=",selectedTag:"="},link:function(){},controller:function($scope){$scope.toggleTag=function(tag){$scope.selectedTag=null===$scope.selectedTag||void 0===$scope.selectedTag?tag:$scope.selectedTag.key==tag.key?null:tag},$scope.toggleObjective=function(objective){$scope.selectedObjective=null===$scope.selectedObjective||void 0===$scope.selectedObjective?objective:$scope.selectedObjective.key==objective.key?null:objective}}}};return Detail_Game}),define("text!teacher/directives/detail_history.tpl.html",[],function(){return'\n<div class="container_history">\n	<div class="row">\n		<container-user user="interaction.user"></container-user>\n		<div class="col-lg-3">\n			<div>\n				<span class="title">Date:</span>\n				{{interaction.date}}\n			</div>\n			<div>\n				<span class="title">Time:</span>\n				{{interaction.time}}\n			</div>\n			<div>\n				<span class="title">PlayTime:</span>\n				{{interaction.totalTime}}\n			</div>\n		</div>\n	</div>\n	<div class="row">\n		<span class="title">Games Played</span>\n	</div>\n	<div class="row">\n		<container-game\n			ng-repeat="game in interaction.games"\n			game=\'game\'></container-game>\n	</div>\n	<div class="row">\n		<span class="title">Objectives Covered:</span>\n	</div>\n	<div class="row">\n		<container-objective\n			ng-repeat="objective in getObjectives()"\n			objective=\'objective\'></container-objective>\n	</div>\n	<div class="row">\n		<span class="title">Selected Rating</span>\n	</div>\n	<div class="row">\n		<div class="col-lg-3 col-md-3 col-sm-3 col-xs-6">\n			<div class="center">\n				<img\n					class="rating {{colors[interaction.score.child.engagement-1]}}"\n					ng-src="/img/teacher/rating/{{images[interaction.score.child.engagement-1]}}"\n					alt="{{interaction.score.child.engagement}}" />\n			</div>\n			<div class="center">\n				<span class="title">Child Engagement</span>\n			</div>\n		</div>\n		<div class="col-lg-3 col-md-3 col-sm-3 col-xs-6">\n			<div class="center">\n				<img\n					class="rating {{colors[interaction.score.child.experience-1]}}"\n					ng-src="/img/teacher/rating/{{images[interaction.score.child.experience-1]}}"\n					alt="{{interaction.score.child.experience}}" />\n			</div>\n			<div class="center">\n				<span class="title">Child Experience</span>\n			</div>\n		</div>\n		<div class="col-lg-3 col-md-3 col-sm-3 col-xs-6">\n			<div class="center">\n				<img\n					class="rating {{colors[interaction.score.parent.experience-1]}}"\n					ng-src="/img/teacher/rating/{{images[interaction.score.parent.experience-1]}}"\n					alt="{{interaction.score.parent.experience}}" />\n			</div>\n			<div class="center">\n				<span class="title">Parent Experience</span>\n			</div>\n		</div>\n		<div class="col-lg-3 col-md-3 col-sm-3 col-xs-6">\n			<div class="center">\n				<img\n					class="rating {{colors[interaction.score.total-1]}}"\n					ng-src="/img/teacher/rating/{{images[interaction.score.total-1]}}"\n					alt="{{interaction.score.total}}" />\n			</div>\n			<div class="center">\n				<span class="title">Average Score</span>\n			</div>\n		</div>\n	</div>\n	<div class="row">\n		<div\n			ng-repeat="note in interaction.notes"\n			class="col-lg-3 col-md-4 col-sm-6 col-xs-12">\n			<container-note note=\'note\'></container-note>\n		</div>\n		<div class="col-lg-3 col-md-4 col-sm-6 col-xs-12">\n			<container-note\n				note="newNote"\n				class="clickable"\n				ng-click="addNote()"></container-note>\n		</div>\n	</div>\n</div>'}),define("teacher/directives/Detail_History",["require","angular","text!./detail_history.tpl.html"],function(require){var template=(require("angular"),require("text!./detail_history.tpl.html")),Detail_History=function(){return{template:template,restrict:"E",scope:{interaction:"="},link:function(){},controller:function($scope){$scope.images=["bad.png","moderate_bad.png","neutral.png","moderate_good.png","good.png"],$scope.colors=["bad","moderate_bad","neutral","moderate_good","good"],$scope.newNote={title:"Click to add a new Note"},$scope.getObjectives=function(){var objectives=[];if($scope.interaction&&$scope.interaction.games)for(var i=0;i<$scope.interaction.games.length;i++)if($scope.interaction.games[i].objectives)for(var j=0;j<$scope.interaction.games[i].objectives.length;j++){for(var found=!1,k=0;k<objectives.length;k++)if(objectives[k].key==$scope.interaction.games[i].objectives[j].key){found=!0;break}found||objectives.push($scope.interaction.games[i].objectives[j])}return objectives}}}};return Detail_History}),define("text!teacher/directives/endInteraction.tpl.html",[],function(){return'\n<div class="row">\n	<div class="col-lg-2 col-md-4 col-sm-4 col-xs-12">\n		<container-user user="interaction.user"></container-user>\n	</div>\n	<div class="col-lg-7 col-md-5 col-sm-5 col-xs-12">\n		<span class="title">Play Scenarios used</span>\n		<div class="row">\n			<div\n				ng-repeat="game in interaction.games"\n				class="col-lg-3">\n				<container-game game=\'game\'></container-game>\n			</div>\n		</div>\n	</div>\n	<div class="col-lg-2 col-md-2 col-sm-2 col-xs-11">\n		<div class="row">\n			<span class="title">Objectives covered</span>\n		</div>\n		<div\n			class="row"\n			ng-repeat="objective in getObjectives()">\n			<container-objective\n				class="col-lg-12"\n				objective=\'objective\'></container-objective>\n		</div>\n	</div>\n	<div class="col-lg-1 col-md-1 col-sm-1 col-xs-1">\n		<button\n			type="button"\n			class="btn btn-default btn-lg btn-red"\n			ng-click="finish()">\n			<span class="title">Finish Report</span>\n		</button>\n	</div>\n</div>\n<div class="row">\n	<div class="col-lg-1 col-md-1 col-sm-1 col-xs-12">\n		<span class="title">Child Engagement</span>\n	</div>\n	<div\n		ng-repeat="image in images"\n		class="col-lg-2 col-md-2 col-sm-2 col-xs-4">\n		<img\n			ng-src="/img/teacher/rating/{{image}}"\n			ng-class="{selected:interaction.score.child.engagement==$index+1}"\n			class="clickable rating {{colors[$index]}}_rating"\n			alt="{{$index}}"\n			ng-click="interaction.score.child.engagement = $index+1" />\n	</div>\n	<div class="col-lg-1">\n		<button\n			type="button"\n			class="btn btn-default"\n			ng-click="addNote(\'Child Engagement\')">Add Note</button>\n	</div>\n</div>\n<div class="row">\n	<div class="col-lg-1 col-md-1 col-sm-1 col-xs-12">\n		<span class="title">Child Experience</span>\n	</div>\n	<div\n		ng-repeat="image in images"\n		class="col-lg-2 col-md-2 col-sm-2 col-xs-4">\n		<img\n			ng-src="/img/teacher/rating/{{image}}"\n			ng-class="{selected:interaction.score.child.experience==$index+1}"\n			class="clickable rating {{colors[$index]}}_rating"\n			alt="{{$index}}"\n			ng-click="interaction.score.child.experience = $index+1" />\n	</div>\n	<div class="col-lg-1">\n		<button\n			type="button"\n			class="btn btn-default"\n			ng-click="addNote(\'Child Experience\')">Add Note</button>\n	</div>\n</div>\n<div class="row">\n	<div class="col-lg-1 col-md-1 col-sm-1 col-xs-12">\n		<span class="title">Parent Experience</span>\n	</div>\n	<div\n		ng-repeat="image in images"\n		class="col-lg-2 col-md-2 col-sm-2 col-xs-4">\n		<img\n			ng-src="/img/teacher/rating/{{image}}"\n			ng-class="{selected:interaction.score.parent.experience==$index+1}"\n			class="clickable rating {{colors[$index]}}_rating"\n			alt="{{$index}}"\n			ng-click="interaction.score.parent.experience = $index+1" />\n	</div>\n	<div class="col-lg-1">\n		<button\n			type="button"\n			class="btn btn-default"\n			ng-click="addNote(\'Parent Experience\')">Add Note</button>\n	</div>\n</div>\n<div class="row">\n	<div class="col-lg-12">\n		<span class="title">Diary</span>\n	</div>\n</div>\n<div class="row">\n	<div\n		ng-repeat="note in notes"\n		class="col-lg-3 col-md-4 col-sm-6 col-xs-12">\n		<container-note note="note"></container-note>\n	</div>\n	<div class="col-lg-3 col-md-4 col-sm-6 col-xs-12">\n		<button\n			type="button"\n			class="btn btn-default"\n			ng-click="addNote()">Add Entry</button>\n	</div>\n</div>'}),define("teacher/directives/EndInteraction",["require","angular","text!./endInteraction.tpl.html"],function(require){var template=(require("angular"),require("text!./endInteraction.tpl.html")),EndInteraction=function(){return{template:template,restrict:"E",scope:{interaction:"=",user:"=",onFinished:"=?"},link:function(){},controller:function($scope){$scope.images=["bad.png","moderate_bad.png","neutral.png","moderate_good.png","good.png"],$scope.colors=["bad","moderate_bad","neutral","moderate_good","good"],$scope.finish=function(){$scope.interaction.score.child.experience&&$scope.interaction.score.child.engagement&&$scope.interaction.score.parent.experience?($scope.interaction.score.total=Math.round(($scope.interaction.score.child.experience+$scope.interaction.score.child.engagement)/2),$scope.onFinished&&$scope.onFinished()):alert("Please report your experience by clicking on the images")},$scope.getObjectives=function(){var objectives=[];if($scope.interaction&&$scope.interaction.games)for(var i=0;i<$scope.interaction.games.length;i++)if($scope.interaction.games[i].objectives)for(var j=0;j<$scope.interaction.games[i].objectives.length;j++){for(var found=!1,k=0;k<objectives.length;k++)if(objectives[k].key==$scope.interaction.games[i].objectives[j].key){found=!0;break}found||objectives.push($scope.interaction.games[i].objectives[j])}return objectives}}}};return EndInteraction}),define("text!teacher/directives/games.tpl.html",[],function(){return'<div\n	class="row"\n	ng-show="selectedTag || selectedObjective">\n	<div class="col-lg-12">\n		<span class="title"> Filters:</span>\n		<span ng-show="selectedTag">{{selectedTag.title}}</span>\n		,\n		<span ng-show="selectedObjective">{{selectedObjective.title}}</span>\n		<button\n			type="button"\n			class="btn btn-default"\n			ng-click="selectedTag=null;selectedObjective=null;">Clear</button>\n	</div>\n</div>\n<div class="row">\n	<div class="col-lg-7 col-md-6 col-sm-4 col-lg-12">\n		<span class="title"> {{teacher.name}}\'s Favourite Play Senarios:</span>\n		<div class="row">\n			<container-game\n				ng-repeat="game in games | filter:teacherGames"\n				ng-click="selectGame(game)"\n				ng-class="{highlight:shouldHighlight(game, selectedTag, selectedObjective), selected:game==selectedGame}"\n				class="clickable"\n				game=\'game\'></container-game>\n		</div>\n		<span class="title"> All Senarios:</span>\n		<div class="row">\n			<container-game\n				ng-repeat="game in games"\n				ng-click="selectGame(game)"\n				class="clickable"\n				ng-class="{highlight:shouldHighlight(game, selectedTag, selectedObjective), selected:game==selectedGame}"\n				game=\'game\'></container-game>\n		</div>\n	</div>\n	<div class="col-lg-5 col-md-6 col-sm-8 col-lg-12">\n		<detail-game\n			game=\'selectedGame\'\n			selected-tag=\'selectedTag\'\n			selected-objective=\'selectedObjective\'\n			ng-show="selectedGame"></detail-game>\n	</div>\n</div>'}),define("teacher/directives/Games",["require","angular","text!./games.tpl.html","teacher/services/dataProvider"],function(require){var template=(require("angular"),require("text!./games.tpl.html"));require("teacher/services/dataProvider");var Games=function(gameService){return{template:template,restrict:"E",scope:{teacher:"="},link:function(){},controller:function($scope){$scope.games=gameService.getGames(),$scope.selectGame=function(game){$scope.selectedGame=$scope.selectedGame==game?void 0:game},$scope.teacherGames=function(element){return element&&element.author&&$scope.teacher?element.author.name==$scope.teacher.name:!1},$scope.shouldHighlight=function(game,tag,objective){if((tag||objective)&&game!=$scope.selectedGame){var hasTag=void 0===tag||null===tag;if(game.tags&&tag)for(var i=0;i<game.tags.length;i++)game.tags[i].key==tag.key&&(hasTag=!0);var hasObj=void 0===objective||null===objective;if(game.objectives&&objective)for(var i=0;i<game.objectives.length;i++)game.objectives[i].key==objective.key&&(hasObj=!0);return hasTag&hasObj}return!1}}}};return["gameService",Games]}),define("text!teacher/directives/history.tpl.html",[],function(){return'<div class="row">\n	<div class="col-lg-2 col-md-3 col-sm-4 col-xs-12">\n		<div>\n			<div><span class="title">Child</span></div>\n			<select\n				class="selectpicker form-control"\n				ng-model="selectedUser"\n				ng-disabled="users.length <= 1"\n				ng-options="user.name for user in users| orderBy:\'name\'">\n				<option value="">All</option>\n			</select>\n		</div>\n		<div>\n			<div><span class="title">Interactions</span></div>\n			<div\n				ng-class="colors[interaction.score.total-1]"\n				ng-repeat="interaction in interactions | filter:userFilter | orderBy:\'time\' | orderBy:\'date\'"\n				class="clickable"\n				ng-click="select(interaction)">{{interaction.date}} {{interaction.time}}</div>\n		</div>\n	</div>\n	<div class="col-lg-10 col-md-9 col-sm-8 col-xs-12">\n		<detail-history\n			ng-show="selectedInteraction"\n			interaction="selectedInteraction"></detail-history>\n	</div>\n</div>'}),define("teacher/directives/History",["require","angular","text!./history.tpl.html"],function(require){var template=(require("angular"),require("text!./history.tpl.html")),History=function(userService,interactionService){return{template:template,restrict:"E",scope:{teacher:"="},link:function(){},controller:function($scope){$scope.users=userService.getUsers(),$scope.interactions=interactionService.getInteractions(),$scope.colors=["bad","moderate_bad","neutral","moderate_good","good"],$scope.select=function(interaction){$scope.selectedInteraction=interaction},$scope.userFilter=function(element){return $scope.selectedUser?element&&element.user?element.user.name==$scope.selectedUser.name:!1:!0}}}};return["userService","interactionService",History]}),define("text!teacher/directives/home.tpl.html",[],function(){return'<header\n	ui-sref="default"\n	class="navbar-fixed-top text-center header hidden-xs">\n	<span class="logo pull-left"></span>\n	<span class="strapline pull-right"></span>\n</header>\n<header\n	ui-sref="default"\n	class="text-center header visible-xs">\n	<span class="logo pull-left"></span>\n</header>\n<div class="row">\n	<div class="col-lg-12">\n		<span class="pull-right">Hello {{teacher.name}}.  <span class="clickable" ng-click="signOut()">Sign Out</span></span>\n	</div>\n</div>\n<div class="row">\n	<div class="col-lg-12">\n		<tabset> \n			<tab heading="New Play Session"> <interaction teacher="teacher"></interaction></tab> \n			<tab heading="My Portal"> <portal teacher="teacher"></portal></tab> \n			<tab heading="History"> <history teacher="teacher"></history></tab> \n		</tabset>\n	</div>\n</div>'}),define("teacher/directives/Home",["require","angular","text!./home.tpl.html"],function(require){var template=(require("angular"),require("text!./home.tpl.html")),Home=function(gameService){return{template:template,restrict:"E",scope:{teacher:"=",user:"="},link:function(){},controller:function($scope){$scope.selectedGames=gameService.getGames(),$scope.signOut=function(){$scope.teacher=void 0,$scope.user=void 0}}}};return["gameService",Home]}),define("text!teacher/directives/interactionGame.tpl.html",[],function(){return'<div class="row">\n	<tabset>\n		<tab heading="Details"><detail-game game=\'game\'></detail-game></tab>\n		<tab heading="Buttons">TODO: Show grid of usable buttons attached to current game, allows for teacher to activate</tab>\n	</tabset>\n</div>\n<div class="row">\n	<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n		<button\n			type="button"\n			ng-click="start()"\n			ng-show="showStart"\n			class="btn btn-default btn-green">Start</button>\n		<button\n			type="button"\n			ng-show="!showStart"\n			ng-click="end()"\n			class="btn btn-default btn-red">Finish</button>\n	</div>\n</div>'}),define("teacher/directives/InteractionGame",["require","angular","text!./interactionGame.tpl.html"],function(require){var template=(require("angular"),require("text!./interactionGame.tpl.html")),InteractionGame=function(){return{template:template,restrict:"E",scope:{game:"=",interaction:"="},link:function(){},controller:function($scope){$scope.showStart=!0;var startTime=null;$scope.start=function(){$scope.game.started=!0,$scope.game.finished=!1,startTime=Date.now(),$scope.showStart=!1},$scope.end=function(){$scope.game.finished=!0,$scope.showStart=!0;var playTime=Date.now()-startTime;startTime=null;var min=Math.round(playTime/6e4,0),sec=Math.round(playTime%6e4/1e3,0);$scope.interaction.games.push({name:$scope.game.name,thumbsrc:$scope.game.thumbsrc,fullsrc:$scope.game.fullsrc,totTime:min+"m"+sec+"s"})}}}};return InteractionGame}),define("text!teacher/directives/interaction.tpl.html",[],function(){return'<user\n	ng-show="state==\'selectUser\'"\n	teacher="teacher"\n	user="user"></user>\n<select-games\n	ng-show="state==\'selectGames\'"\n	teacher="teacher"\n	user="user"\n	selected-games="selectedGames"\n	on-canceled="setSelectUser"\n	on-finished="setConfirmGames"></select-games>\n<begin-interaction\n	ng-show="state==\'beginInteraction\'"\n	teacher="teacher"\n	user="user"\n	games="selectedGames"\n	interaction="interaction"\n	on-canceled="setSelectGames"\n	on-finished="setStartInteraction"></begin-interaction>\n<active-interaction\n	ng-show="state==\'activeInteraction\'"\n	user="user"\n	interaction="interaction"\n	games="selectedGames"\n	on-finished="setReviewInteraction"></active-interaction>\n<end-interaction\n	ng-show="state==\'endInteraction\'"\n	user="user"\n	interaction="interaction"\n	on-finished="reset"></end-interaction>'}),define("teacher/directives/Interaction",["require","angular","text!./interaction.tpl.html"],function(require){var template=(require("angular"),require("text!./interaction.tpl.html")),Interaction=function(){return{template:template,restrict:"E",scope:{teacher:"="},link:function(){},controller:function($scope){$scope.reset=function(){$scope.user=void 0,$scope.selectedGames=void 0,$scope.interaction=void 0},$scope.reset(),$scope.$watch("user",function(user){user?$scope.setSelectGames():$scope.setSelectUser()}),$scope.setConfirmGames=function(){$scope.state="beginInteraction"},$scope.setSelectUser=function(){$scope.state="selectUser"},$scope.setSelectGames=function(){$scope.state="selectGames"},$scope.setStartInteraction=function(){$scope.state="activeInteraction"},$scope.setReviewInteraction=function(){$scope.state="endInteraction"}}}};return Interaction}),define("text!teacher/directives/login.tpl.html",[],function(){return'<div class="row">\n	<div class="col-lg-1 col-md-1 hidden-sm hidden-xs"> </div>\n	<div class="col-lg-7 col-md-6 col-sm-6 col-xs-12">\n		<div class="splash"></div>\n	</div>\n	<div class="col-lg-3 col-md-4 col-sm-6 col-xs-12">\n		<form>\n			<div class="form-group">\n				<label for="exampleInputEmail1"><span class="title">User\n						Name</span></label> <input\n					type="text"\n					class="form-control"\n					ng-model=\'username\'\n					id="username"\n					placeholder="Enter username"\n					autofocus>\n			</div>\n			<div class="form-group">\n				<label for="exampleInputPassword1"><span class="title">Password</span></label>\n				<input\n					type="password"\n					class="form-control"\n					id="password"\n					placeholder="Password">\n			</div>\n			<div class="checkbox">\n				<label> <input\n					type="checkbox"\n					id="remember"> <span class="title">Remember Me</span>\n				</label>\n			</div>\n			<button\n				type="button"\n				ng-click="login()"\n				class="btn btn-default">Sign In</button>\n		</form>\n	</div>\n	<div class="col-lg-1 col-md-1 hidden-sm hidden-xs"> </div>\n</div>'}),define("teacher/directives/Login",["require","angular","text!./login.tpl.html"],function(require){var template=(require("angular"),require("text!./login.tpl.html")),Login=function(){return{template:template,restrict:"E",scope:{teacher:"="},link:function(){},controller:function($scope){$scope.username="Teacher",$scope.login=function(){$scope.teacher={username:$scope.username,name:$scope.username}}}}};return Login}),define("text!teacher/directives/portal.tpl.html",[],function(){return'<div>\n	<tabset>\n		<tab heading="Play Scenarios"><games teacher="teacher"></games></tab>\n		<tab heading="Objectives"><objectives teacher="teacher"></objectives></tab>\n	</tabset>\n</div>'}),define("teacher/directives/Portal",["require","angular","text!./portal.tpl.html"],function(require){var template=(require("angular"),require("text!./portal.tpl.html")),Portal=function(){return{template:template,restrict:"E",scope:{teacher:"="},link:function(){},controller:function(){}}};return Portal}),define("text!teacher/directives/objectives.tpl.html",[],function(){return'<div class="row">\n	<div class="col-lg-7 col-md-6 col-sm-4 col-xs-12">\n		<div class="row">\n			<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n				<span class="title">Available Objectives:</span>\n			</div>\n		</div>\n		<div class="row">\n			<div\n				class="col-lg-2 col-md-3 col-sm-3 col-xs-6"\n				ng-repeat="objective in objectives">\n				<container-objective\n					ng-click="toggleObjective(objective)"\n					class="clickable"\n					ng-class="{highlight:objective.key==selectedObjective.key}"\n					objective=\'objective\'></container-objective>\n			</div>\n		</div>\n		<div class="row">\n			<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n				<span class="title">Available Tags:</span>\n			</div>\n		</div>\n		<div class="row">\n			<div\n				class="col-lg-2 col-md-3 col-sm-3 col-xs-6"\n				ng-repeat="tag in tags">\n				<container-tag\n					ng-click="toggleTag(tag)"\n					class="clickable"\n					ng-class="{highlight:tag.key==selectedTag.key}"\n					tag=\'tag\'></container-tag>\n			</div>\n		</div>\n		<div class="row">\n			<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n				<span class="title">Matching Play Scenarios:</span>\n			</div>\n		</div>\n		<div class="row">\n			<container-game\n				ng-repeat="game in items | filter:itemFilter"\n				class="clickable"\n				ng-click="selectGame(game)"\n				ng-class="{selected:game==selectedGame}"\n				game=\'game\'></container-game>\n		</div>\n	</div>\n	<div class="col-lg-5 col-md-6 col-sm-8 col-lg-12">\n		<detail-game\n			game=\'selectedGame\'\n			selected-tag=\'selectedTag\'\n			selected-objective=\'selectedObjective\'\n			ng-show="selectedGame"></detail-game>\n	</div>\n</div>\n'}),define("teacher/directives/Objectives",["require","angular","text!./objectives.tpl.html"],function(require){var template=(require("angular"),require("text!./objectives.tpl.html")),Objectives=function(objectiveService,tagService,gameService){return{template:template,restrict:"E",scope:{teacher:"="},link:function(){},controller:function($scope){$scope.objectives=objectiveService.getObjectives(),$scope.tags=tagService.getTags(),$scope.items=[],$scope.items.push.apply($scope.items,gameService.getGames()),$scope.toggleTag=function(tag){$scope.selectedTag=null===$scope.selectedTag||void 0===$scope.selectedTag?tag:$scope.selectedTag.key==tag.key?null:tag},$scope.toggleObjective=function(objective){$scope.selectedObjective=null===$scope.selectedObjective||void 0===$scope.selectedObjective?objective:$scope.selectedObjective.key==objective.key?null:objective},$scope.selectGame=function(game){$scope.selectedGame=$scope.selectedGame==game?void 0:game},$scope.itemFilter=function(element){var objective=!1;if($scope.selectedObjective){if(element&&element.objectives)for(var i=0;i<element.objectives.length;i++)if(element.objectives[i].key==$scope.selectedObjective.key){objective=!0;break}}else objective=!0;var tag=!1;if($scope.selectedTag){if(element&&element.tags)for(var i=0;i<element.tags.length;i++)if(element.tags[i].key==$scope.selectedTag.key){tag=!0;break}}else tag=!0;return tag&&objective}}}};return["objectiveService","tagService","gameService",Objectives]}),define("text!teacher/directives/users.tpl.html",[],function(){return'<div class="row">\n	<div class="col-lg-12 center">Please select the child you will be\n		working with</div>\n</div>\n<div class="row">\n	<div class="col-xs-12">\n		<container-user\n			ng-repeat="user in users"\n			user=\'user\'\n			class="clickable"\n			ng-click="selectUser(user)"></container-user>\n		<container-user\n			user=newUser\n			class="clickable"\n			ng-click=addUser()></container-user>\n	</div>\n</div>'}),define("teacher/directives/Users",["require","angular","text!./users.tpl.html"],function(require){var template=(require("angular"),require("text!./users.tpl.html")),Users=function(userService){return{template:template,restrict:"E",scope:{user:"=",teacher:"="},link:function(){},controller:function($scope){$scope.newUser={name:"New User",birthday:"",gender:"",thumbsrc:"new_thumb.png",fullsrc:"new.png"},$scope.users=userService.getUsers(),$scope.selectUser=function(user){$scope.user=user},$scope.addUser=function(){alert("TODO: Add user screen")}}}};return["userService",Users]}),define("teacher/directives",["require","angular","common/i18n/languageServices","teacher/services/dataProvider","./directives/ActiveInteraction","./directives/BeginInteraction","./directives/SelectGames","./directives/Container_Game","./directives/Container_Note","./directives/Container_Objective","./directives/Container_Tag","./directives/Container_User","./directives/Detail_Game","./directives/Detail_History","./directives/EndInteraction","./directives/Games","./directives/History","./directives/Home","./directives/InteractionGame","./directives/Interaction","./directives/Login","./directives/Portal","./directives/Objectives","./directives/Users"],function(require){{var angular=require("angular"),languageServices=require("common/i18n/languageServices"),dataProvider=require("teacher/services/dataProvider"),ActiveInteraction=require("./directives/ActiveInteraction"),BeginInteraction=require("./directives/BeginInteraction"),SelectGames=require("./directives/SelectGames"),Container_Game=require("./directives/Container_Game"),Container_Note=require("./directives/Container_Note"),Container_Objective=require("./directives/Container_Objective"),Container_Tag=require("./directives/Container_Tag"),Container_User=require("./directives/Container_User"),Detail_Game=require("./directives/Detail_Game"),Detail_History=require("./directives/Detail_History"),EndInteraction=require("./directives/EndInteraction"),Games=require("./directives/Games"),History=require("./directives/History"),Home=require("./directives/Home"),InteractionGame=require("./directives/InteractionGame"),Interaction=require("./directives/Interaction"),Login=require("./directives/Login"),Portal=require("./directives/Portal"),Objectives=require("./directives/Objectives"),Users=require("./directives/Users"),moduleName="kasparGUI.teacher.directives",dependancies=[languageServices,dataProvider];
angular.module(moduleName,dependancies).directive("activeInteraction",ActiveInteraction).directive("beginInteraction",BeginInteraction).directive("selectGames",SelectGames).directive("containerGame",Container_Game).directive("containerNote",Container_Note).directive("containerObjective",Container_Objective).directive("containerTag",Container_Tag).directive("containerUser",Container_User).directive("detailGame",Detail_Game).directive("detailHistory",Detail_History).directive("endInteraction",EndInteraction).directive("games",Games).directive("history",History).directive("home",Home).directive("interactionGame",InteractionGame).directive("interaction",Interaction).directive("login",Login).directive("portal",Portal).directive("objectives",Objectives).directive("user",Users)}return moduleName}),define("teacher/main",["require","angular","./directives"],function(require){{var angular=require("angular"),directives=require("./directives"),moduleName="kasparGUI.teacher",dependancies=[directives];angular.module(moduleName,dependancies)}return moduleName}),define("teacher",["teacher/main"],function(main){return main}),define("categories/teacher",["require","angular","angularUIRouter","text!teacher/index.tpl.html","teacher/main"],function(require){var angular=require("angular"),uiRouter=require("angularUIRouter"),defaultTemplate=require("text!teacher/index.tpl.html"),teacherMain=require("teacher/main"),moduleName="kasparGUI.menu.teacher",dependancies=[uiRouter,teacherMain],Routes=function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",template:defaultTemplate})},module=angular.module(moduleName,dependancies);return module.config(["$stateProvider","$urlRouterProvider",Routes]),moduleName}),define("fullapp",["require","angular","angularUIRouter","angularBoostrap","common/services/modelServices","text!./default.tpl.html","categories/action","categories/admin","categories/interaction","categories/trigger","categories/teacher","common/controllers","common/directives","robots/directives","actions/directives"],function(require){var angular=require("angular"),angularRouter=require("angularUIRouter"),angularBootstrap=require("angularBoostrap"),defaultTemplate=(require("common/services/modelServices"),require("text!./default.tpl.html")),action=require("categories/action"),admin=require("categories/admin"),interaction=require("categories/interaction"),trigger=require("categories/trigger"),commonControllers=(require("categories/teacher"),require("common/controllers")),commonDirectives=require("common/directives"),robotsDirectives=require("robots/directives"),moduleName=(require("actions/directives"),"kasparGUI"),dependancies=[angularRouter,angularBootstrap,commonControllers,commonDirectives,robotsDirectives,action,admin,interaction,trigger],Routes=function($stateProvider,$urlRouterProvider,$locationProvider){$locationProvider.html5Mode(!0),$urlRouterProvider.otherwise("/"),$stateProvider.state("default",{url:"/",template:defaultTemplate})},ApiConfig=function(modelBuilderProvider){modelBuilderProvider.setBasePath("/api")},module=angular.module(moduleName,dependancies);return module.config(["$stateProvider","$urlRouterProvider","$locationProvider",Routes]),module.config(["modelBuilderProvider",ApiConfig]),moduleName})}();
//# sourceMappingURL=fullapp.js.map